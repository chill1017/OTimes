(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    501790,       9775]
NotebookOptionsPosition[    490952,       9589]
NotebookOutlinePosition[    491351,       9605]
CellTagsIndexPosition[    491308,       9602]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/calebhill/Documents/UNH/Research/code/OTimes/graph_18b\>\"", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q", "=", 
    RowBox[{"Exp", "[", 
     RowBox[{"2", "*", "Pi", "*", 
      RowBox[{"I", "/", "42"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InDeg", "[", "z_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"Return", "[", 
      RowBox[{"360", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"z", "//", "Arg"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", "Pi"}], ")"}]}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Quantum", "[", 
   RowBox[{"n_Integer", ",", " ", "q_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"q", "^", "n"}], "-", 
        RowBox[{"q", "^", 
         RowBox[{"(", 
          RowBox[{"-", "n"}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"q", "-", 
        RowBox[{"q", "^", 
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}]}]}], ")"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numericalPg", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<./data/numerical_Pg.m\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.926750812835944*^9, 3.926750843094743*^9}, {
   3.926750923534832*^9, 3.9267509423090076`*^9}, 3.926751108404189*^9, {
   3.9267535336512012`*^9, 3.926753554632799*^9}, {3.926937939254743*^9, 
   3.926937944661351*^9}, {3.927025277816359*^9, 3.9270252973037043`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f6215e80-c3f3-4be4-8a36-b53655b5f119"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"QIntsArr", " ", "=", " ", 
     RowBox[{"Import", "[", "\"\<./data/q_ints_arr.m\>\"", "]"}]}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NQIntsArr", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<./data/n_q_ints_arr.m\>\"", "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.927100917769293*^9, 3.927100920478047*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"dad3f49f-e92b-4c61-98ad-67b661a5b0fa"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"./data/n_q_ints_arr.m\\\\\\\"\\\"}]\\)\
 not found during \\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 6, 1, 
   25384351729150223593, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271009282797117`*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"68dfc7dc-510f-4a0b-82ca-48083018c48d"]
}, Open  ]],

Cell[TextData[StyleBox["Begin 6/7 work.",
 FontSize->18,
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.926751121696512*^9, 
  3.926751125613181*^9}},ExpressionUUID->"0b5a7ea8-aee1-4f8e-b5a3-\
e8610470942d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"numericalPg", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "9"}], "]"}], "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.926683398616234*^9, 3.926683420187455*^9}},
 CellLabel->
  "In[501]:=",ExpressionUUID->"91a08543-8472-4a8e-bebc-cee57821c204"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"0.3333333333333173`"},
     {
      RowBox[{
       RowBox[{"-", "0.16666666666670188`"}], "-", 
       RowBox[{"0.28867513459483435`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.16666666666661545`"}], "+", 
       RowBox[{"0.28867513459483435`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.16666666666661345`"}], "+", 
       RowBox[{"0.28867513459483674`", " ", "\[ImaginaryI]"}]}]},
     {"0.33333333333334036`"},
     {
      RowBox[{
       RowBox[{"-", "0.16666666666672694`"}], "-", 
       RowBox[{"0.28867513459483557`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.16666666666670382`"}], "-", 
       RowBox[{"0.28867513459483674`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.16666666666663846`"}], "+", 
       RowBox[{"0.28867513459483557`", " ", "\[ImaginaryI]"}]}]},
     {"0.33333333333334236`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.926683412024028*^9, 3.926683420461083*^9}},
 CellLabel->
  "Out[501]//TableForm=",ExpressionUUID->"976ddbc5-c685-4ecb-afcb-\
bd476a39dba8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"360", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.16666666666670188`"}], "-", 
      RowBox[{"0.28867513459483435`", " ", "\[ImaginaryI]"}]}], "//", "Arg"}],
     ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"2", " ", "Pi"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.16666666666670188`"}], "-", 
     RowBox[{"0.28867513459483435`", " ", "\[ImaginaryI]"}]}], "//", "Abs"}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.9266819195176*^9, 3.926681939541553*^9}, {
  3.926681973330511*^9, 3.926681994127425*^9}, {3.926682025174746*^9, 
  3.926682032990364*^9}},
 CellLabel->
  "In[491]:=",ExpressionUUID->"c9f2e235-cf6d-49f1-9497-21aa52247db0"],

Cell[BoxData[
 RowBox[{"-", "120.00000000000341`"}]], "Output",
 CellChangeTimes->{{3.92668192124244*^9, 3.92668194014375*^9}, {
   3.926681974908043*^9, 3.9266819945767393`*^9}, 3.926682033414863*^9},
 CellLabel->
  "Out[491]=",ExpressionUUID->"829ceceb-80bb-4b20-a787-062ac64cd82e"],

Cell[BoxData["0.3333333333333695`"], "Output",
 CellChangeTimes->{{3.92668192124244*^9, 3.92668194014375*^9}, {
   3.926681974908043*^9, 3.9266819945767393`*^9}, 3.926682033418239*^9},
 CellLabel->
  "Out[492]=",ExpressionUUID->"af9eff84-5107-4f1e-8eaa-cae523ef7981"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"numericalPg", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "9"}], "]"}], "]"}], "//", 
  "ComplexListPlot"}]], "Input",
 CellChangeTimes->{{3.9269390846666403`*^9, 3.9269390867688313`*^9}, {
  3.926939140939357*^9, 3.926939145871991*^9}, {3.927013283457246*^9, 
  3.927013306328434*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"f13cd99c-d1a2-4a51-b64c-e0a61e558b95"],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.3333333333333173, 
      0.}, {-0.16666666666670188`, -0.28867513459483435`}, \
{-0.16666666666661545`, 0.28867513459483435`}, {-0.16666666666661345`, 
      0.28867513459483674`}, {0.33333333333334036`, 
      0.}, {-0.16666666666672694`, -0.28867513459483557`}, \
{-0.16666666666670382`, -0.28867513459483674`}, {-0.16666666666663846`, 
      0.28867513459483557`}, {0.33333333333334236`, 
      0.}}]}, {{}, {}}}, {}, {{}, {{{}, {}, {}, {}}, {}}}},
  AspectRatio->Automatic,
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> (Identity[
       Part[#, 1]] + I Identity[
        Part[#, 2]]& ), "CopiedValueFunction" -> (Identity[
       Part[#, 1]] + I Identity[
        Part[#, 2]]& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "MessagesHead" -> ComplexListPlot},
  PlotRange->{{-0.16666666666672694`, 
   0.33333333333334236`}, {-0.28867513459483674`, 0.28867513459483674`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.92693908808628*^9, 3.926939146842564*^9, 
  3.927013289860713*^9, 3.927013332564693*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"ce3d7c63-d50f-4356-beee-2619e183ba02"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9267535044636583`*^9, 
  3.926753504559067*^9}},ExpressionUUID->"2dfc21bc-230e-4d32-8a54-\
6998f63a3bb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{"InDeg", ",", " ", 
       RowBox[{"numericalPg", "[", 
        RowBox[{"[", 
         RowBox[{"78", ";;", "93"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{"Abs", ",", " ", 
       RowBox[{"numericalPg", "[", 
        RowBox[{"[", 
         RowBox[{"78", ";;", "93"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], "}"}], "//", "Transpose"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.926689336754417*^9, 3.926689382403989*^9}, {
  3.926689585703018*^9, 3.926689589220837*^9}, {3.926689670571619*^9, 
  3.92668969171552*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"b0519253-138d-45d1-9ef3-9289dc2b0286"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0.2087121525221504`"},
     {
      RowBox[{"-", "50.34936555902659`"}], "0.23462835144947158`"},
     {"40.69873111805558`", "0.234628351449438`"},
     {
      RowBox[{"-", "170.34936555903118`"}], "0.23462835144951258`"},
     {"50.349365559028`", "0.23462835144946453`"},
     {"0", "0.2637626158259759`"},
     {"91.04809667709044`", "0.2637626158259835`"},
     {
      RowBox[{"-", "120.00000000000016`"}], "0.26376261582597277`"},
     {
      RowBox[{"-", "40.69873111806146`"}], "0.23462835144948047`"},
     {
      RowBox[{"-", "91.04809667708419`"}], "0.26376261582595234`"},
     {"0", "0.2637626158259759`"},
     {"148.95190332291045`", "0.26376261582598437`"},
     {"170.34936555903184`", "0.23462835144946034`"},
     {"119.99999999999432`", "0.2637626158259972`"},
     {
      RowBox[{"-", "148.9519033228918`"}], "0.2637626158257954`"},
     {"0", "0.26376261582589766`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.926689357175391*^9, 3.926689363589897*^9}, 
   3.926689409265875*^9, 3.926689591218968*^9, {3.9266896836720324`*^9, 
   3.92668969200224*^9}, 3.9267503047775297`*^9},
 CellLabel->
  "Out[86]//MatrixForm=",ExpressionUUID->"945856ea-b393-4d7d-83b6-\
b77af8e25734"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.2087121525221504`", "/", "0.23462835144947158`"}]], "Input",
 CellChangeTimes->{{3.9270113058650217`*^9, 3.927011310869841*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"24cd0285-568a-421e-9bac-19f8ebec40d1"],

Cell[BoxData["0.8895436175244049`"], "Output",
 CellChangeTimes->{3.9270113112593937`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"6cf0e2a7-8525-46d8-8a28-96967e8efe58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.23462835144947158`", "/", "0.26376261582589766`"}]], "Input",
 CellChangeTimes->{{3.9270111576244926`*^9, 3.927011163080084*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"4529a0d7-b9f9-46b5-8a32-ebfaf01763c0"],

Cell[BoxData["0.8895436175244152`"], "Output",
 CellChangeTimes->{3.9270111635834017`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"5025a262-7462-4ae2-a785-04d0c7f43d3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", "0.8895436175244152`"}]], "Input",
 CellChangeTimes->{{3.927011513593091*^9, 3.927011513687728*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"e530519c-f381-42c7-b7c1-3671c336cf95"],

Cell[BoxData["1.1241719689732392`"], "Output",
 CellChangeTimes->{3.9270115141514378`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"9ba8c73a-a20c-4a3b-980d-4fb0fc776497"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.8895436175244152`", "//", "RootApproximant"}]], "Input",
 CellChangeTimes->{{3.927011372560111*^9, 3.927011379645986*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"ca73d762-8ee7-4525-81d0-68a758022768"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"Root", 
    InterpretationBox[
     StyleBox[
      TemplateBox[{"\"0.890\"", 
        DynamicBox[
         FEPrivate`FrontEndResource[
         "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
      ShowStringCharacters -> False], 
     0.88954361752413246833270932256709784269`15.954589770191003, Editable -> 
     False], 
    TagBox[
     RowBox[{"Root", "[", 
       RowBox[{
         RowBox[{
           RowBox[{
             RowBox[{"-", "3"}], "+", 
             RowBox[{"3", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
             SuperscriptBox["#1", "4"]}], "&"}], ",", "2"}], "]"}], 
     Short[#, 7]& ], 0.8895436175241325},
   "NumericalApproximation"],
  Root[-3 + 3 #^2 + #^4& , 2, 0]]], "Output",
 CellChangeTimes->{3.9270114001055527`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"beee2415-3e1a-4452-afab-dd9f28cb3220"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "/", 
   InterpretationBox[
    TemplateBox[{"Root", 
      InterpretationBox[
       StyleBox[
        TemplateBox[{"\"0.890\"", 
          DynamicBox[
           FEPrivate`FrontEndResource[
           "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
        ShowStringCharacters -> False], 
       0.88954361752413246833270932256709784269`15.954589770191003, Editable -> 
       False], 
      TagBox[
       RowBox[{"Root", "[", 
         RowBox[{
           RowBox[{
             RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"3", " ", 
                 SuperscriptBox["#1", "2"]}], "+", 
               SuperscriptBox["#1", "4"]}], "&"}], ",", "2"}], "]"}], 
       Short[#, 7]& ], 0.8895436175241325},
     "NumericalApproximation"],
    Root[-3 + 3 #^2 + #^4& , 2, 0]]}], "//", "RootApproximant"}]], "Input",
 CellChangeTimes->{{3.927011471749811*^9, 3.9270114764510813`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"2da7a873-1175-4750-aeaa-a95197d1415b"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"Root", 
    InterpretationBox[
     StyleBox[
      TemplateBox[{"\"1.12\"", 
        DynamicBox[
         FEPrivate`FrontEndResource[
         "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
      ShowStringCharacters -> False], 
     1.1241719689735967246946302111609838903`15.954589770191003, Editable -> 
     False], 
    TagBox[
     RowBox[{"Root", "[", 
       RowBox[{
         RowBox[{
           RowBox[{
             RowBox[{"-", "1"}], "-", 
             RowBox[{"3", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"3", " ", 
               SuperscriptBox["#1", "4"]}]}], "&"}], ",", "2"}], "]"}], 
     Short[#, 7]& ], 1.1241719689735967`},
   "NumericalApproximation"],
  Root[-1 - 3 #^2 + 3 #^4& , 2, 0]]], "Output",
 CellChangeTimes->{3.9270114768243017`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"114fd54c-eeda-4c65-aacb-51fc0aee8e31"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   SuperscriptBox["q", "10"], "+", 
   SuperscriptBox["q", "8"], "+", 
   SuperscriptBox["q", "2"], "+", "1", "+", 
   SuperscriptBox["q", 
    RowBox[{"-", "2"}]], "+", 
   SuperscriptBox["q", 
    RowBox[{"-", "8"}]], "+", 
   SuperscriptBox["q", 
    RowBox[{"-", "10"}]]}], "]"}]], "Input",
 CellLabel->"In[35]:=",ExpressionUUID->"b72b7b04-cf76-4f25-b070-d3d6e5ee12aa"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"3", "+", 
    SqrtBox["21"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.92710185061544*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"4beb2ec5-3ead-4a91-8fad-181430c3d8e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    InterpretationBox[
     TemplateBox[{"Root", 
       InterpretationBox[
        StyleBox[
         TemplateBox[{"\"1.12\"", 
           DynamicBox[
            FEPrivate`FrontEndResource[
            "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"],
          ShowStringCharacters -> False], 
        1.1241719689735967246946302111609838903`15.954589770191003, Editable -> 
        False], 
       TagBox[
        RowBox[{"Root", "[", 
          RowBox[{
            RowBox[{
              RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"3", " ", 
                  SuperscriptBox["#1", "2"]}], "+", 
                RowBox[{"3", " ", 
                  SuperscriptBox["#1", "4"]}]}], "&"}], ",", "2"}], "]"}], 
        Short[#, 7]& ], 1.1241719689735967`},
      "NumericalApproximation"],
     Root[-1 - 3 #^2 + 3 #^4& , 2, 0]], " ", 
    InterpretationBox[
     TemplateBox[{"Root", 
       InterpretationBox[
        StyleBox[
         TemplateBox[{"\"1.12\"", 
           DynamicBox[
            FEPrivate`FrontEndResource[
            "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"],
          ShowStringCharacters -> False], 
        1.1241719689735967246946302111609838903`15.954589770191003, Editable -> 
        False], 
       TagBox[
        RowBox[{"Root", "[", 
          RowBox[{
            RowBox[{
              RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"3", " ", 
                  SuperscriptBox["#1", "2"]}], "+", 
                RowBox[{"3", " ", 
                  SuperscriptBox["#1", "4"]}]}], "&"}], ",", "2"}], "]"}], 
        Short[#, 7]& ], 1.1241719689735967`},
      "NumericalApproximation"],
     Root[-1 - 3 #^2 + 3 #^4& , 2, 0]]}], 
   RowBox[{
    RowBox[{"Quantum", "[", 
     RowBox[{"7", ",", "q"}], "]"}], "-", "1"}]], "//", "N"}]], "Input",
 CellChangeTimes->{{3.927016584600932*^9, 3.927016621480201*^9}, {
  3.9270166641900387`*^9, 3.927016671747758*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"e1797785-8c2d-4c38-bbe0-5e0e373c08a3"],

Cell[BoxData[
 RowBox[{"0.26270358993344073`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.927016585601907*^9, 3.927016621772532*^9}, {
   3.927016664670044*^9, 3.927016672720792*^9}, 3.9270253039574127`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"74e39570-94a2-4d18-a5f8-a2d1d34d86d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], "+", 
    RowBox[{
     FractionBox["1", "6"], 
     RowBox[{"Sqrt", "[", "21", "]"}]}]}], "//", "Sqrt"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.9271018673763533`*^9, 3.9271018979119987`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"815dc8bd-3a6d-42a2-a15d-bb556393448c"],

Cell[BoxData["1.1241719689735967`"], "Output",
 CellChangeTimes->{{3.927101893408051*^9, 3.927101898291585*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"febc149d-1b26-4c72-922b-04e48cc495a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Norm", "[", 
  RowBox[{"numericalPg", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.927104028080559*^9, 3.9271040384185457`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"7c374669-ce2d-4197-90ac-3a90e4fc5f49"],

Cell[BoxData["14.971037410957997`"], "Output",
 CellChangeTimes->{{3.927104034725922*^9, 3.9271040389635277`*^9}},
 CellLabel->"Out[86]=",ExpressionUUID->"de48f578-4686-45fa-8aaf-b43719d7bcc0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.927011370079377*^9, 
  3.927011370452804*^9}},ExpressionUUID->"1c56167b-fc6d-4d56-a7a6-\
dd41f9f09897"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "50.34936555902659`"}], "-", "40.69873111805558`"}]], "Input",
 CellChangeTimes->{{3.9267522779930773`*^9, 3.926752285739913*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"24ad499c-8553-4fcb-8862-81ccc0ddcbc8"],

Cell[BoxData[
 RowBox[{"-", "91.04809667708217`"}]], "Output",
 CellChangeTimes->{3.9267522865372467`*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"b4074d99-6ec5-4261-b42f-4e858d38f3d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "50.34936555902659`"}], ",", "40.69873111805558`", ",", 
     RowBox[{"-", "170.34936555903118`"}], ",", "50.349365559028`", ",", 
     RowBox[{"-", "40.69873111806146`"}], ",", "170.34936555903184`"}], "}"}],
    "//", "Sort"}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.926752438687503*^9, 3.926752537216004*^9}, {
  3.926753385095121*^9, 3.926753445657502*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"2f5dcd29-1450-4ae0-af5c-0a476e0c9e1c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "170.34936555903118`"}], ",", 
   RowBox[{"-", "50.34936555902659`"}], ",", 
   RowBox[{"-", "40.69873111806146`"}], ",", "40.69873111805558`", ",", 
   "50.349365559028`", ",", "170.34936555903184`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.926752453676407*^9, 3.9267525380726557`*^9, {3.9267533869627867`*^9, 
   3.926753412722782*^9}, {3.926753442780632*^9, 3.926753446013583*^9}},
 CellLabel->
  "Out[152]=",ExpressionUUID->"14375633-125d-4b8e-8d5a-b4c24ae34aa2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "170.34936555903118`"}], "-", 
   RowBox[{"(", 
    RowBox[{"-", "50.34936555902659`"}], ")"}]}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.926752560953144*^9, 3.926752568893428*^9}, {
  3.926752763908164*^9, 3.9267527691268663`*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"8677819d-dd4f-495c-a9a4-c65c2999fcad"],

Cell[BoxData[
 RowBox[{"-", "120.0000000000046`"}]], "Output",
 CellChangeTimes->{
  3.926752570428278*^9, {3.926752764836337*^9, 3.926752769959412*^9}},
 CellLabel->
  "Out[134]=",ExpressionUUID->"f0998340-5a65-4b5b-83ad-e4e03d6ba700"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "50.34936555902659`"}], "-", 
   RowBox[{"(", 
    RowBox[{"-", "40.69873111806146`"}], ")"}]}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.926752581697339*^9, 3.9267525865230913`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"1a152260-d01d-4ef7-93d7-dfe93cdc010c"],

Cell[BoxData[
 RowBox[{"-", "9.650634440965128`"}]], "Output",
 CellChangeTimes->{3.926752587070022*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"c0e8b8d2-b322-4f69-a12d-cb337853b760"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.926752892393511*^9, 3.9267528926441174`*^9}, {
  3.926753473786365*^9, 
  3.926753476669339*^9}},ExpressionUUID->"078462bf-5ea2-40d3-902b-\
60ed08243ca2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "91.04809667709044`", ",", 
     RowBox[{"-", "120.00000000000016`"}], ",", 
     RowBox[{"-", "91.04809667708419`"}], ",", " ", "148.95190332291045`", 
     ",", " ", "119.99999999999432`", ",", " ", 
     RowBox[{"-", "148.9519033228918`"}], ",", " ", "0"}], "}"}], "//", 
   "Sort"}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.926752898259365*^9, 3.9267529778831177`*^9}, {
  3.926753316723173*^9, 3.92675331973695*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"8dc99b80-9294-4700-ac94-321490955df0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "148.9519033228918`"}], ",", 
   RowBox[{"-", "120.00000000000016`"}], ",", 
   RowBox[{"-", "91.04809667708419`"}], ",", "0", ",", "0", ",", 
   "91.04809667709044`", ",", "119.99999999999432`", ",", 
   "148.95190332291045`"}], "}"}]], "Output",
 CellChangeTimes->{3.926752979231975*^9, 3.926753332371335*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"c7ea1cba-12b4-4660-85c5-2e5094e7515a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "148.9519033228918`"}], "-", 
   RowBox[{"(", 
    RowBox[{"-", "120.00000000000016`"}], ")"}]}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.926753006569433*^9, 3.926753013803831*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"c39b145b-3ee2-41bb-b4c0-0a46533dfcf7"],

Cell[BoxData[
 RowBox[{"-", "28.951903322891653`"}]], "Output",
 CellChangeTimes->{3.926753014748692*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"7df25295-531c-4afc-b3c0-769935999e04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "120.00000000000016`"}], "-", 
   RowBox[{"(", 
    RowBox[{"-", "91.04809667708419`"}], ")"}]}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.926753023111504*^9, 3.926753027457637*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"c08067c5-3caa-4662-81fe-348a75cee704"],

Cell[BoxData[
 RowBox[{"-", "28.951903322915967`"}]], "Output",
 CellChangeTimes->{3.926753027981122*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"b784a961-e1bf-4726-bff5-7ac11c7da088"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9267534815874367`*^9, 
  3.926753481729084*^9}},ExpressionUUID->"9cd3765e-638d-41ac-8efd-\
ea871d7cd8c7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   TagBox[
    TagBox[GridBox[{
       {
        RowBox[{"0.14971744732734177`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.18065201152957414`", " ", "\[ImaginaryI]"}]}]},
       {
        RowBox[{"0.17788319781644313`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.15299683407991535`", " ", "\[ImaginaryI]"}]}]},
       {
        RowBox[{
         RowBox[{"-", "0.231307954893085`"}], "-", 
         RowBox[{"0.03933310701043787`", " ", "\[ImaginaryI]"}]}]},
       {
        RowBox[{"0.14971744732733283`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.1806520115295724`", " ", "\[ImaginaryI]"}]}]},
       {
        RowBox[{"0.17788319781645964`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.1529968340799613`", " ", "\[ImaginaryI]"}]}]},
       {
        RowBox[{
         RowBox[{"-", "0.2313079548930339`"}], "+", 
         RowBox[{"0.03933310701042647`", " ", "\[ImaginaryI]"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]], "//", "Chop"}], "//", 
  "TableForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "50.34936555902659`"}], "0.23462835144947158`"},
       {"40.69873111805558`", "0.234628351449438`"},
       {
        RowBox[{"-", "170.34936555903118`"}], "0.23462835144951258`"},
       {"50.349365559028`", "0.23462835144946453`"},
       {
        RowBox[{"-", "40.69873111806146`"}], "0.23462835144948047`"},
       {"170.34936555903184`", "0.23462835144946034`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "//", "Chop"}], "//", "MatrixForm"}]}], "Input",\

 CellChangeTimes->{{3.926756340817075*^9, 3.926756522989192*^9}, {
  3.926757167181815*^9, 3.926757168130437*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"d080e046-e56f-415c-a75c-429de74537d6"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"0.14971744732734177`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.18065201152957414`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.17788319781644313`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.15299683407991535`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.231307954893085`"}], "-", 
       RowBox[{"0.03933310701043787`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.14971744732733283`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.1806520115295724`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.17788319781645964`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.1529968340799613`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.2313079548930339`"}], "+", 
       RowBox[{"0.03933310701042647`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9267565192123423`*^9, 3.926756523423695*^9}, 
   3.92675716863126*^9},
 CellLabel->
  "Out[257]//TableForm=",ExpressionUUID->"86ee676b-8bc9-4b73-a071-\
117e61b68266"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "50.34936555902659`"}], "0.23462835144947158`"},
     {"40.69873111805558`", "0.234628351449438`"},
     {
      RowBox[{"-", "170.34936555903118`"}], "0.23462835144951258`"},
     {"50.349365559028`", "0.23462835144946453`"},
     {
      RowBox[{"-", "40.69873111806146`"}], "0.23462835144948047`"},
     {"170.34936555903184`", "0.23462835144946034`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9267565192123423`*^9, 3.926756523423695*^9}, 
   3.926757168633574*^9},
 CellLabel->
  "Out[258]//MatrixForm=",ExpressionUUID->"71d545de-ae76-4c79-a850-\
1ba067846023"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"numericalPg", "[", 
      RowBox[{"[", 
       RowBox[{"78", ";;", "93"}], "]"}], "]"}], "//", "Abs"}], "//", 
    "TableForm"}], ",", 
   RowBox[{
    RowBox[{"numericalPg", "[", 
     RowBox[{"[", 
      RowBox[{"78", ";;", "93"}], "]"}], "]"}], "//", "TableForm"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.926940054302966*^9, 3.926940121271579*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"30925c13-af64-44a3-99ec-a883533d9ab6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TagBox[GridBox[{
       {"0.2087121525221504`"},
       {"0.23462835144947158`"},
       {"0.234628351449438`"},
       {"0.23462835144951258`"},
       {"0.23462835144946453`"},
       {"0.2637626158259759`"},
       {"0.2637626158259835`"},
       {"0.26376261582597277`"},
       {"0.23462835144948047`"},
       {"0.26376261582595234`"},
       {"0.2637626158259759`"},
       {"0.26376261582598437`"},
       {"0.23462835144946034`"},
       {"0.2637626158259972`"},
       {"0.2637626158257954`"},
       {"0.26376261582589766`"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]], ",", 
   TagBox[
    TagBox[GridBox[{
       {"0.2087121525221504`"},
       {
        RowBox[{"0.14971744732734177`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.18065201152957414`", " ", "\[ImaginaryI]"}]}]},
       {
        RowBox[{"0.17788319781644313`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.15299683407991535`", " ", "\[ImaginaryI]"}]}]},
       {
        RowBox[{
         RowBox[{"-", "0.231307954893085`"}], "-", 
         RowBox[{"0.03933310701043787`", " ", "\[ImaginaryI]"}]}]},
       {
        RowBox[{"0.14971744732733283`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.1806520115295724`", " ", "\[ImaginaryI]"}]}]},
       {"0.2637626158259759`"},
       {
        RowBox[{
         RowBox[{"-", "0.004824671311807336`"}], "+", 
         RowBox[{"0.26371848637154427`", " ", "\[ImaginaryI]"}]}]},
       {
        RowBox[{
         RowBox[{"-", "0.1318813079129869`"}], "-", 
         RowBox[{"0.22842512587392752`", " ", "\[ImaginaryI]"}]}]},
       {
        RowBox[{"0.17788319781645964`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.1529968340799613`", " ", "\[ImaginaryI]"}]}]},
       {
        RowBox[{
         RowBox[{"-", "0.004824671311777939`"}], "-", 
         RowBox[{"0.2637184863715136`", " ", "\[ImaginaryI]"}]}]},
       {"0.2637626158259759`"},
       {
        RowBox[{
         RowBox[{"-", "0.22597457298943685`"}], "+", 
         RowBox[{"0.13603753110670416`", " ", "\[ImaginaryI]"}]}]},
       {
        RowBox[{
         RowBox[{"-", "0.2313079548930339`"}], "+", 
         RowBox[{"0.03933310701042647`", " ", "\[ImaginaryI]"}]}]},
       {
        RowBox[{
         RowBox[{"-", "0.13188130791297595`"}], "+", 
         RowBox[{"0.22842512587396205`", " ", "\[ImaginaryI]"}]}]},
       {
        RowBox[{
         RowBox[{"-", "0.22597457298923063`"}], "-", 
         RowBox[{"0.1360375311066803`", " ", "\[ImaginaryI]"}]}]},
       {"0.26376261582589766`"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.926940080509315*^9, 3.926940121848022*^9}},
 CellLabel->"Out[46]=",ExpressionUUID->"48c4c106-ca02-4f04-a5d1-b0f9b4f8faa4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"x23", " ", "=", " ", 
   RowBox[{
    TagBox[
     TagBox[GridBox[{
        {
         RowBox[{"0.14971744732734177`", "\[VeryThinSpace]", "-", 
          RowBox[{"0.18065201152957414`", " ", "\[ImaginaryI]"}]}]},
        {
         RowBox[{"0.17788319781644313`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.15299683407991535`", " ", "\[ImaginaryI]"}]}]},
        {
         RowBox[{
          RowBox[{"-", "0.231307954893085`"}], "-", 
          RowBox[{"0.03933310701043787`", " ", "\[ImaginaryI]"}]}]},
        {
         RowBox[{"0.14971744732733283`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.1806520115295724`", " ", "\[ImaginaryI]"}]}]},
        {
         RowBox[{"0.17788319781645964`", "\[VeryThinSpace]", "-", 
          RowBox[{"0.1529968340799613`", " ", "\[ImaginaryI]"}]}]},
        {
         RowBox[{
          RowBox[{"-", "0.2313079548930339`"}], "+", 
          RowBox[{"0.03933310701042647`", " ", "\[ImaginaryI]"}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column],
     Function[BoxForm`e$, 
      TableForm[BoxForm`e$]]], "//", "Flatten"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9269401361620617`*^9, 3.926940252324984*^9}, 
   3.926940444487529*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"9222793a-e895-4ef9-8c55-fc7f8aa59453"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x1", "=", "0.14971744732733283`"}], "\[VeryThinSpace]", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y1", "=", "0.1806520115295724`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", "0.17788319781644313`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y2", "=", "0.15299683407991535`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"x1", "-", 
  FractionBox["y1", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{"y2", "-", "y1"}], ")"}], 
    RowBox[{"x2", "-", "x1"}]]]}]}], "Input",
 CellChangeTimes->{{3.927018729922481*^9, 3.927018804842744*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"0f48ae95-bb99-4c48-8600-1c9159e3c44c"],

Cell[BoxData["0.3337046768925842`"], "Output",
 CellChangeTimes->{3.927018809085224*^9, 3.9271010818260603`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"02ecfffd-8234-4502-8639-26910e2bbe15"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y1", "+", 
  RowBox[{
   FractionBox[
    RowBox[{"(", 
     RowBox[{"y2", "-", "y1"}], ")"}], 
    RowBox[{"x2", "-", "x1"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "0.231307954893085`"}], "-", "x1"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.92701919309433*^9, 3.927019225061446*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"421930ce-5d71-4120-86aa-eb8ad67256ac"],

Cell[BoxData["0.5547703974503253`"], "Output",
 CellChangeTimes->{3.927019225605385*^9},
 CellLabel->
  "Out[225]=",ExpressionUUID->"54f9d5a9-35a3-4390-90ae-c4fbadb933f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxcvYe3E9e27nn6xfv63vduOtE+xxgb+2AMNhgTjDFgwDgnDDaYHHZkR+Wc
s1QqlapKVSWVcpZ2AGzf12P0P9V/Qn9zrdK2u8dY1FgqlUol7fqt75tzzSX2
P1y/Ov+ffve739n/AZurD9wf2mwPvN/9Cx5cX7MvLazNPf50zTG3MGc7/fA/
Y+f/g38X/o/f/Y76DaNQN/LNarFhCK2aiNao4mGhZQots1iv5ut6DgfUjVyD
bU09a2pZU0cnV6ugn2/XpZZZquuFRrXQaUidRnnU1TrY2SjXdDEa9HqdNrWU
GXYqrZrQqYttUxILCb/XLuaitQqdFvvxdp1GCdtmTcB58I64jE5DbLBOu47L
y/fqpUFb6TXKWwOjaxa7ptiri+j0GtT6jeKoLU268rSvTnsKOmPWH3fLw1YJ
Tw3b0rhTRof6LYnO1pT6TQnbXoNO1WuU+g3aj06nJqAzast47aQnj9vlfrPU
b4o4A848ZGfDw25daOPyqgVcTLeOayh18UFqQp/OSeeh/aaAtxi0yjg521rv
0jIKLSOHl6ODM/DWMvLtmsDenT4afagOXf+wWRrhUzRLk3Z52BDx7vjIgyZ1
cAAafQlNER+tz7+NJj5OscOujV1eASfB8QO65kLHzLfxtev5jl5o6/luVejg
YrQc+s1KuqVl0No6HuawHzvxVFPNNLGt4Kks2t5+HIOdeFVDTWGL1jGyDTWJ
h2h1JWWWk6acqkoJs0xbXYxVS8lqKaUXE4aYxFYXE5qQ0IspTUiq+Tg6dTlf
LWXKuYicj5Tz0WI6pAgJTczIhWQuHn148953n3x3+cynx944e+S1M3/fd/yN
/e+efOv8xfc/WX68nIpGcqmYkInpUq4ipqrltFZKKkK0nAtLmWAx5ReSPjEd
FJKBTNSTjrjzCW8u7snG3Pm4p5Dw5uPeTNSFlo3Ts5mIOxvzZqMetHTYlQo5
40E7Nb8t4t2I+Wxhz3rYvRbxrMe9mxHXWgxb70bEu05bzwbfxnybUd8m32JP
lA6gbZQOZi93r9HWuYozhBwrYdbBFv2g/UnAtozm21j0rC/4bEvu9QXPxoJr
bY5vm1UB6BF94NcUQQojKA+U0GfwEmJNQG0UTI2wbdaK4L2mF2o66C5w6ttm
qVUrtarU6bWUYUfrd9SqXgz5PF6HXZWy3Ua51yqPu5Ua/lqJYMDvkoSEWcHZ
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
AXt2MqqB361JfUykVyeTer0B/fUn4uFum5R32NcGbBzoz4ow+cIHSlhZNdXw
wFVeacnj2V+edaGt0YhfV4uTAQV9rGhEVaWcIhckKScKmWQsBMvmIkcHK7Xh
stkcG5vYBv1e2Ff8+XSlBKjt66t+l1OTCkCMoCaJNLlQctCw//l2GzpeVQtC
NqopRaNSrMiI5iKIVrpNhQ5ms1TTHgQOuLWeT9p9xGnpeLOmPJ20mbXGaGCJ
O95iCpDHROIvO20pn7557YeaLj/d7nUaWqdVU9VSUcy3mpXnWwirCd6fdxo/
bRPvv+y0ftpqPpuYvIxzd2zyYYec/8xXbLEogE1nm9OhzlZLGVs9NgPeN/Zc
94AtYhq2KlpZiIYjPk/4pT8d+f0/Hnr/5Le3b677fbmK0VG15uKC68L71w++
fHbfX949/Nr5k+98cuHs1b/96cjl858MO/WdURPWt1LKRQKB5WXb19/cfemF
Nz+5dDWXkm5+9+js6Y+aNWNn2Bi0Kk29HHQ6Q263BmMUC5QLyU6d5ovxBbZq
cimbVkXRrCjjVq2lS4OmVlXEoMOZi0baZtn68XAdOlsa0hpGiWe9WqzQGuSy
ssx8XSvUjfKd249PvnvR7wkWc9DTVE0tdkxFFUtn3rly+dzV9XWXx+UvZLJu
m/vk2+/v++Pfr315o5BMVcS8z+nYXFtBjG8a5Vgw/NYbpy6e/dS+trm5srq6
tJCJB1UxyWUXmssRRlNLaQqlWQpLJdmNsRlhmhRWhURFTAFq+jnKVDDoscMm
ry0vLc/PLzx85FhfxfeQTYVhmxcfz60uLW+srq0+eQIB8jhsuC3d9o1UJJAM
ezLxQDoWXJlfmLt7HzuDPgcoXnz0aO7uvaDXEfK5NlefPL57L+Cyh73O5ccP
Htz+8eHt23N3764tLHhs6xDxqN+B4JevH2SFHJvD/kx5BxanTHkrPGHFJ3lH
lHA2gDNnHPBujZu9nt5sytGwD+JYM8qQzvEQpyKEceSQeWPuXftsRSpf/k+l
HaPq02mdZn9G1Z9220opG48G67Uy3mjAligyKWxOib4GLVbtGt2GppcFWcwp
xSwtUSxmxHw6Gg55PM6g14OvE0PxJtTFZsvGwvC0z7baDFsLNHLOLENFKrzV
fLrVHg9rQ4SZfare7LW1bktlMmfy5BVlsYaQyPZTBNgS7p14vw01qQNqWGUe
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
Wiwd1Aifh1hzgfDgx9cDH2jv5aYc3qCzYJYdNdeMCjjpUD45B6gbFBGX+KCC
8+KxG17nf0VMr6MXU8nYwODg4NDYjz/eOXL4jKmBRLNcSMWiod6PH2KRMUSg
5ULu+dO3O7efXrRg91d/2/XN13tv/fwHrpxpG3L3kvJ697DCzcbVVo1C2g6T
i4B3qqlNt3WoP2x8y0UwXpnpOkqx8PPN39evObhhzaGfbz1OJDKtZg2sZRK5
zeuOXj53Z6pVl/wbhPjs6Su3bjxsOpYUizEIyIghgTbNJazrhUzuxLGrC7/e
dvzItfHRyZbrquWsYyvdjvPnH6/XLN5x9yZidlev5ijjZxRsNd+wKjVDe/L7
iw3r9v7884NkItp0aVijD9zCRm1gpIP8RxMXIcOU+Af5M8owJZ0nlMjiCEJm
dfEkKW6Z9pYXID11uZbkso8VFy3L7NcQ0Zj6uVM/bd24S8lnphoaAt6WxY3c
GFIwYtC7KBgipEsc1JPE6wWHKkG5tkPTNzo1hdaiBx08PYGbLiZ57Ttyy5wH
y/DadzhDuS9a3UiFMYCyK5lEfOO63Ts3H3v8258/nb+xdMGaVYs33r52t5hJ
VooJ+GEwCLkUJVVyCHVTuVTi8g831izd9e1fNu7adDiforKyWgS/k5VsFLqP
y8AjiywkOyzfPAvbTOKbiynZaIWtNYDFZXh9ipcZ9pwf50q2ihNWpMU4k46N
ZibH05PEbyI8DD1NhIfioUFZrINas7hZKxEdlDbLuVn/CJPH++PgVwwzwdsX
HR+AT5Y9+IUQyxYe6okM0xlsowPveR4TZPcjECZ+B3vHaN+DM5FhQhjXy8Ql
mu/f837k41vY7KEe6r4e6nmLOHrgw2vJWYlnZuUti6MWfqkYhEHeLktG2sRI
a5DZlpN1ttOiJnWXpHlksP/Q4TMPHv/5++M3mzcdffz7y27d7tR0KFRonAJh
pZjPZ3PXrvyyZuWeTesP37/3ds/On/721y2/3n/ZbliUN/YqRCRY0qPIRRYS
qdmO+c8ZF3IMFma6RrettRpqG5fBmrad5GTy+NGrq5btv3D2djScaNbtek1z
nWrN1h/ff7562Z7B/tDn6Wa3ZUx3LFz/5OGLY4cvZpOpmbYpHGFAwMjAjgJv
ZySjiZNHflq+eNeFc7/09oyZqm6oiqmV8bJaVTl9+PLm1YdioUTNrpoar65J
nQx5Wy/iTD6T3bvr+K4dx2MR2A8N0TEF79LD6UmtNzTJ0CcRvRf5+pOkGlz5
5YnJPBdb1gKlrlSZOUXToqVTSwpAnPXNWAyv7a3Dj/9E49jB87u2HKxb5lTT
bLuw0LwYAnVsQsoLzHipznkGml1iwlqX60YRKkzizumsupGTDDM41Wnpm0SN
1tDIGuWU5LEbBvx83qlS2pm4pucWmmbJVsuvnr/ZuvHAkm/WL1uw/uqlm4lo
zKyW1FKKsM1yYShHtSGtlIDCIsg1K9lYOHzu9LVv/rrh+1W7UrGQWc1SH2Yu
JggD0nIuVi3G5Ru4vC/Apa/Ai/EgEKuyhaawOhVmTkMFVl7ht5AJyYFAjQMy
1XEEyxOAFxKcggRHIcFDEFPsU7ERgBwHsLEhma+UYHLTvEwHrY5FU/4HIcEi
vl4WCwf8Y4jzVAQys0yOmv0zJaWZ3NBwHznnAfxI+jva/06S1eM0Qem98Evz
kvrei8eWeFn4xR6Eutgs3myvKwm0UlDMKSmATF0cZsHE3s9R1zkXTSGzSzMX
uHZcatW1p0+er1m7/+fbLw8e/Gnv7nPFHGIrDSzYRnl0eOjDu943r3qPHr68
avmuc6evZ5IFveLu2HR60Xe7Rkdi0y2biz64ORHoEcWIfKcgtQ3d0cv5ZDI0
Gup92zs+OISbsNvWKZkGL9oyOk3nw9v+HVtOrlt75Nd7L13b/jRVg86aWs61
KtVS8YeT1zatPZjPFadgie1St6V/mnaTscSJY5eHB0f+fbZO+SWGi525Nt1x
Bz4M7txyAoPM48fvnvzx9v5vT/v7BycmxkOh0XwhPTw0sW7F/nOnbtm6Kevi
2kbJUPOmmrf0AnBGFPz4wYsFX69//fJjt2k17PI0W/3WPJHlGUwlz0I3q9Jt
JUEuYTtv/qOIrze9S5fAViZWF1w9739xTM721wG2NfqaOUvLtGvVciH//fq9
Jw9fjk1M9rz9OPixTy/DeJcbRrltUUeZWQXpiJrziN8dTRL+xYZRAp6Q1wZ9
UxsNC1IVAsUQX7sCnYXWZxhYWgyHj3NGKUXHnNSy5NEqxrRicjI+NjSWnkw2
bMPWSqVsrJhmwYWG5tjc5ohllUzyJPx5pZh+/vTlkm83bF67MzUZdrQcpbDy
kxrscX6SLismpFSETZEDBhlQ06MFctoYBmCJacp/AmpLnObTHrmiwkCbo2OQ
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
mnrmyNVv/sf2Jd/s//nGc8dyZjo2yy61espnqDtqdDz09PdXh/b+uHzRocXf
7v/mb7u3bbzw6P6bYj7fbpgOV65pRRGzPDI0smzpjrVrTqxcdnTr9+eSCTgK
01CLWiWLK4cHRlYu2f7i2eDM7BfXtvLZzId37ynDZhrHj1//t7/v27jl0kQk
H4lOvn37zjZo5m+3YauVwsePH8bGxxzXNAzr+JFL+3edqpYUo0prcUCjXVNN
xeK3r93buGrnptW7H917auvml+lWh901sLVlozWIKCRpkFNV2ANX226VwPEC
1aIwZWuSsPIWwQACrue6PWcrOWoJY22tqJUzCHgJOkpZe3zVeKzg+Lrkp7Dk
LRTmtyxhdd3PZZGf1/KeYRb9pdW8JfSmjWtP9DGY7ryYapFpm+Y1FMxKTi/D
YGfUUgogA23RZY1jZBFfARnSLHExHyTK2Vg1Hwew5UyEpvqyCvPUJPLVWoFT
0yzfapFSWEz9pMx6oF6sdMRX3glJXmUYYQS2IrWyF5a9jBblqaQda1hAToS5
zORbaLAp9eI5LfZPzi8fi38Oj/TR7KSRXpkyDOWdb6dDQ73cy/FRGikJ4X4v
8uWaL2mu4ByYZ5wkeM0814YqplmmJLPhOWeL95LIggTbloJ9za3YzG/NVRwu
PFl6YXxkbM3yA//4295t267eut1/4MCDFUtPPXrSpzt2rWHadtW1VUsnZw4t
A48zNNevfuHcjSXf7bl397XrOBBfnlysw1d32/pUxwC57MyNYi538dzNDasO
Hj90feumU4u+3Xbjyq/thkvZM5fmVsCNT3ed189frFi6+dtvt/zjq63ffbN3
9fKT61eefPlsqO463Rbe1ID4Al6jmuk0zHgktX3bhW++3b9i6fHjx362LBcG
24YwGSXo1OjQyOplOzAOnDjy06E951cs2bRr+/5KmaYt/PjT/f/xt51LV50Y
gDOKxD709jqWiliy7ZpapdDT2zM6Otppt4YGJxb8Y8PPN39v1lzX1Ev54sDH
wUtnrq1dtn3jyp0P7j4xq9r//Nenz9M1UDmNKIDxlLldhA+3l0tqGueJ3xpd
0OZWTGwUmbJMi4s21axgIk6YvKuaFdZgVkVJJbfcZBvAGW8JbAuiqh689B2v
JPSNQPE5AKdxg0vz/GPJ8UrGhcB++5lzSabRmwJh7gzJSTVZElyUr9YKjlYC
wkSxAmYzjDMpMn/VO0XB5CUqGdDH9SZKbZWzsMFAEiTiAHIc5/AZgTPZY1BP
7VscJkseu1pMBvkxac4sUSA8SfymwpKYAr8SzAIxcctyRpJUJLjsfhNMK45F
i5P+XiLiSV9/PcEl2Ad9Uz0XI2MLj/RExyDBUN5+WQMBtIb91DRT3CftHJJ5
HufpDJTLGvgo5A71vhWKh+epsOm1ZwDPMuSV9rx5B6bsS9hcp4IN/Laaaqdt
tJsaCKIo2K1OjExs2XjqwL4bw+PKT1f/XLv27P0H/fFUdSIymUqnDEOpuypC
POpVZj39POtWK+VDBy4v/m7/zZ9fqoY13bVbTY1fs0qMtw28bKdl5dLZk0cu
r1ux9/2bYV2zBvvGdm07tXrZrtGh8S+fmoh/KZnc0D5Nu49+++3cmZ+uXP31
1avBU8d//ubfdmxafzIWTmEE4HlSBjeMKd2mVcoVDh+49NXfd2zY8MPm7384
ceznchm+WgG81DpV0wrZ9P7dx79fu3fT2n1bNx68c/M3U9UMtWRoyrPnH75b
cnDRshNXr//xAcHK8Khr6w1La5hVpZh99/7dyMjI1NTM5Yv31q0+NDKUSsby
D355tmvL8SXfbFy/Yuft678hxP6Pf878++cWPnbdKnBTtNGp8VwqL7wtNLje
xKzBQldYfD2EsZGntSgmrc/LGIsoi3QCIr2S4qSW0JQRBiV2lhVvJP0Fsghq
j9ay1LnELUtdyU9e+RRzLCzKznkzolLiaDkjlxGwnBwTLeZrOCNH8BYBLPvn
LIsvHWvlNB3QluGveADOaZ1i5CSLb8KDNztZIucMctO8RgfTnY9DzVWS7ISk
wqhFpIDzCSoo0/o8XKvKwVdPQnw9/Y2HMvRtLNSaBaKJXK+Lg/qf0+yiBb0g
kpWoVhJcHAuPCMLz3XJQUZK0leS15kJg8DsMcvtBbmjY33NGGj4cojw+yL3Q
iIKphaNH0lmw0yTBve85o/V+mMpGbzn/TAViw6CcMxEKZm1FmAXUVC3yiYYc
O3BxAAHxI26hlkZzWhsqz+Wv2Kby690n32841j+Yv3n73YIFB0+devLjTy83
bjy1Yf3x02euZ7KZRk2lHFcd3pjyV7PTtclYYteOC2vXnDx19pdsUfk0W280
VISozK+B+6TbtkPj4X07T21ad+j928HpdvPLdMPWqm9f9m5Ytf/K5TvdZu3z
tINorlPTuw0dId6X6TZk/fNM9/nTt1/9vxt3bDlp6NB6OG2FC0baVMsJjUR2
bD6++LsdFy8/3rPrCpz2kcPXSiVlumOzCSc1b9b1cikLwdWrFUurdppOk+Pi
6Y4Tjyf37f/p718d/G7BwbPn742Hk1PdTrNm112zUin19w2mEvlsWvt+7ckN
K0/t2XFx8YIdi7/dtmPL8SePX1XKyr9/npqdcqR1vFVTuw2V2rkbugS53HRB
EJGntcoitTxHkkTTP+ByLTPl6uyfqcxE4ijPrdOKf0VJH7H2SXtkLrDBEhfX
/JwVp8XmkcvpKYmyg3R3UK6qcToLn4TeourFv1zSmis9cxWJxFdGD/7YFVOV
Tg98sIJWSvvBb0YQ1vkA0TH21A3iZbcSoJiVFAjznoBNAUxs+BHHajkNltVi
ChdAlCngzQNVYJuQp4Bu9s/ErxSCRYLzXE7ieYWRXDIsCWfRX9FZhpTxDFMy
WfwzN2+MeCoc9nQ5mDYoqM7fpKlD8l1R8s/ELEkwb5FRMDsgBWKeEdwnmSue
/v/BU95+Ibpn1I+COZFF9SMx0iDXZrWFbZYDm1x0kZTXRFSoiBDXnCoEsU7T
ASqtBiWgeFJ/FZFsKj65Z+eZC+ce3rr94ZtvD3373cklS44vWrz/yOE769ac
3fT9iWhk8vNMQxwsHDIA+TzT/PPlx82bTp47e//wkavxZP7zbKNRh7JrvEQA
LrPGhsd3bj6yc/OJgb6Jes2yddxXuG20vndDa1fsvXHlNxA90zabNmJDHRI2
3TRIyBpazaoO949tXHXw1LFrMM8ItzmINvCagz0ja5ftWb10z6tXA3ateeH8
nX/8ZcuxY9c0TZvt2tKy1WRbDoMxM+20yMNXpa2URx6MV+aLF+8XL9qzeNHB
BQt27dnzw2+//fni+cdnzz8+evTm1q2n587+unndmQV/3b1m6eH9ey7+cvfZ
u7cDum78579mv8w2ePZ0mYcytUlNlfp0U+/UtaZXIK40aSamR27dQ9izzSK7
opKSjpbiUZCAanLIjPNcyoG5LZq0RJXnb7mZqixuXBLanEPOi/Kyfy6Lwaah
wDMAZXk1KTGz3BfoXSwZQLAvuXpRQmlRdj8jnfXLT3hrXFY2K1mIL6Jvinwh
lwyvrpCFpo1PzslxKaUraXbI0m+ZYBITFYqOk4xqQsmTLuMALwW1FbRZcOMi
vniKko3TEwvJYiaqsHnOpkJZkJvmvixOZPldHF4uyy8nkdp6qWnPMM878NFO
cP03xnh6wI73B70cNB1pYiBKxSMW39FB1lyQSyocJXj7uFjMEjyMoBgeu5+T
0r2jfglJUtCCMxePPoBcSV6NsP6KW5YmDZ9lRUJgIdfghxyzXMcNVtf5Hq6C
COgaolRw98fjF5s3nN694/p3C4784+sj3y08dPHyw0gsNzKcWb/mxJFDVyqK
MtOxyRszvzWovKGeP3Nj25ZTTx737Npx5u3r/i+f2hD3Rg0qD3z0vo+DWzcc
2rn5+ODARLtVazhG07XrtjPSN35438WVS/f8du/ZdLsO2W27GvRXCqx0q9c0
16rAaKxdvv/2zaeddqODoYZmOhgD74c2rz60Y9PJwX56zXbb+fXXR8uXbr/5
80PLUnlFIF4giJPqMjkCOPsFblqEBCI+M+U0amY0knj7ZvD+g1f79v3w3bfb
Fi3YvmjRzkULd33z9fYF3+z56i87dm29ODgQNU1nerrzaRauwKHfCzDiXah0
ThW0dp2arwioOplnFtw5keVqryIxb4u7HOcrrPzoF5uK9P1xXFWHbxHKajBO
JHaU74VlBWhSQRY19Hqu+OlS5OU6kSJGmg5sDpDnGjKL3ruzf5bNbyABv9Bi
r/hLSWb25xzq5sgw64iXizSeaEWwKTkrKg17FKd5I35Jl8kJp0wOhNk/p9kq
J8Q8g0ccE7AB0XnS2QDzgFyP33lbKRNjnxzKgd9MNAvnDH5TEN9QEA5npIQ0
OSYZqkxQQhI7zbksPEpbbIxrRhBfOGTo7IAcRKSLkqct4GRsYigyhmOcHCJs
Cc9eFt8B3vo4C01ZLAgxznAKmuYS0gFnsfDjiNfI4bVJz/VV8gGllw0vPQXB
5YIvyFUkW0U1I4zwrMhQ3oarYu/aJdzJn2bcL5/rlqGcO31t5bLjSxYeXbH8
+PbtF/581V9v1KpV5frV+2tXHHz29GO75Ui/B92odV3Df1+lgqj2zKmbquqe
PXXtzMkrlqV9+dyo0RBhvn31ccOqfYhzJ8ZjXYhTNT8xMnbq6A9b1h9asXjn
0kU7jh64kIolZtu1bt1oOlVIMMJDXoGKEID+DvaOrF6y9/rVh7W602pZrboz
1DOyde3hrWuP4A8Jjw0j0WzomXR8ZHRM0yodmqrvtUbzqkEVWe9LznDBmgCv
ce9Wt6l/mqrTUl0NS9e0/t7RnvfDA70TH95P3L717PHD/u1bzj1+8r7VadqW
qmsY+krszJU6t7oBYXo1ekGV1oSveSkpvzXCC0W5ZZq45rYWL5fFEAWOWvFd
Li1WJu3r5B9c6YdElFpiFabNU1V5EUtUVSpEvGyI5Rl1eWXBk8w2jxXyRL/P
sySfrR5UiiWlXM1LSgr2mIpENG5Q5EsN7UbZ1UtygUitxr63AsUsItTNacws
UCUJ9n9UyT/zBm+cTxS56aKSSwBDgMzkkgqTHPOcCAmQBVW6AOaZYfdTXmSe
8SLAE6+Tw0EqXMjSAv44mecoWL6cNM8440dp3qCKUnw8S0uOe3Vhz11HJ+Lh
0ckJ8DscGxvCJmbYm3lE1aJBnIyOg186T8djQ2KbpVQUkkCYsliIf/vkvBSP
ZC9VJElekX/u/0DZrX6/KNz7bpgLwV5jZBDqGiVWYYU3iogpES0hsKUIwhRI
to3paffTp3qlnDt5/NKaVYdPn/h5cDBSVpRmyzZtpVwqHDtwYe/2s9k0zRJq
sujg5rfwX6mX47HE7m0nbt960m53/3z5fvvWI0ODY9NTDcfSn/7+as2KvXt2
nJmMpjpQyQZct/7oweNlizZu3Xj4+OFLb172VIrFbsMGtnUT97DikrUmyeiS
Ea20asbIwNiyhbvOnb5jmK5r2c8evfl+9YE9W08i+P083QI4rPKU3EZIO9Wx
eF07aq3k7kpPhWX5L+m3pHCV5hpr7aZep8Q7rR2Ep7RbRrfjdjvOzFTd0NRw
aPLHi/dWLts1NhGrObpjVfh3VzF8MfsKgcx7HspIi1tUG5oLbLlNy88204Em
P0qCi9b7amj4NQV8LsVyZklWLXNo+YW6Q7Vm11QQcbgwrqosBUykiycH2g27
IhR7Q4FfKpLgt8WfpEnL8VW4TwwORw3K0LW5RmtOYalFyKvFvtes+BQLzlTt
RTjMF1QR1Wa0MrwxfU2DpmRUKhjNbSAaGLL+pvmaNPNLJ8vZWCkHDCmYFUKr
BVHb/2Kw2VEnQSvHvAmx2YKw6K8Uf2k5nUyExJf0NywuWmLhIgx2nPqlg4mH
pL/x8RT1WI5JIyWb6lHwmxR+x6HCIz7IJMRE8dhAGNgC3vGh0OhACD+SvErC
SjYvBMaBKDJO0sGwHPT55eA5nMf9qf2yH2NTzfUj6tOwGFsveeVrMW8liYuh
0YiLG7wSKe5tuhWb2tSUVa9rH99/ePXirWUYM1ONek2DXjfqejGX3b/z5Kmj
11y79mW2CbMNDznVrrmmbiGG7RnesPrAy2e9nW4zPjl58MDZm9cfVhTrxfOe
xQu2HT7w4/hYrNOuQayhWZ+nXdtQlGLBqKqduvvP2fZ02244KsJhiC/vVa/O
QlYTcaWeiMWPHLi4buWhE0ev79t19pu/rT9+6HKlXPnXlykmVwGJslhBw1va
umTzigSiubzql7dYH+XcOFyVKjOeSBWrusY5KOoA77R0XqWzaKiFqlK8cO7K
kcPndJ36q5v+n4ufTs/t8BqYDV/i67w+tqAqfVb0i9D3rAWKrHJ0oPI1OKbF
RrBv2jR1CJfVLIrNeWmySgPkOtWaRY2sNre/0qbRhFBy16Sq0NaKDHo07kmX
iCfrZS4ulyVvhr8kPo/UnQNfzYDTF4ByDchTdmFz/iZhrM1CrHN5iE6SJc56
bhnH1Rz0t1om+qokvhmRXQ6E057y4nwxrUieWUlXCFWSY0lbBYGwqLAotcbs
Vzkcli3QZZpx7B3EaGM7zaIcy1F3dCTYsvxFWtjynNcCv8nJ0STEFyBHx+LR
0URkLBEeTYbH4IrjEwiWvY355azU+HB4fBDkgl+AjIMJ6OxI3wRXiBjYgXks
9/E68IOhudR0n2DrHQzQgSSfRZGlO1oSWZRzJuVVJPKVzg0Ke/1pR4QwxBdD
dE2l+4TXrxMEprv27LQzPWXPTNfwqMg3XVnXctnUvp2n1i7b++blQDFXLOYK
iWji/t3HB/acfPbHm54PIxvXHnz27EOz4TTrNiT4wN5LB/dcW7Hk0PFjt2PR
QrPmtOqaVCFx6860LRLKlgUopE+yRfcwbq1KCyA7VbH0HQwsFj1Ut7Xx4fHj
By9u23Rsy8ZD9+48tk3z80zDNgsCjiyN25DOTx9MyY3LhA48yqk2ledIVplr
OPMyI8+qWidhbTf0Jqx7y5jqmLjSMRVTUxAhNDlRQK/c0Hx+yTazD1dlDlRT
eshJVQVh4hcXsGmv0IrNTrXl0IhE8Tj1YoFi+a1pa1AuUeFZ22UazVxVsovc
REpOyTYJYYDM6/CXcL5GLoWWcK/bQnE5UF4vgUYJcKk4M7y1YEiscJyLMLkC
t2NLPMubqeYNDXgSpHKGakNBPkpsM3drSIUI8GJTlQywrSrpKlOpczuWaK7G
+WQSVhbZMpeHNL5eHtUYXhz8F3hZrH3VZn+e88RXLDfpbxYHcVq/OhktJGkN
AVJe+GfGljNaQWulN2spx3Ul6G8yjm08GQslYxOJ2HgiAhc9BvEV5QXFosVE
NEAODUNzGd6B0Gg/9kQuVX4HBEn2z31CsZeLnkd04KU9fjmjxR2Vks7y8tKj
Ax9Het87TgUIS23XSzjbXiHJBRc4KbVgeDC34nCSpNvScePJQjSfph0gAB3p
0EmYw2rNrdIcYbt6/+7v3686sODvm9evPrRu1f5li7YvXrB5x7Yjk9HEQP/o
lu+PPvvjw9RU659fpktF48jem1/9992b11++fvXVD+fuRkPRmbbd5qInZIgc
oA18FMcokyg7lAmvk/LSHIcmReXlLiVy1Tqv39WpG92mRVqvaa4FY1CH8NW9
NbvAiA4BbbqMLU1/IEg7fCAU4CG6pkFdYTxTWENAz+cxpOAho9M0gTAO2N5r
GDGm2joMNrjAGXxCzmN7zeGMqpiWinyGJr0auXQx0mJNae96Ca46DxHAEG9H
TySbUSV+4TQAryuDADDEQ/SBGViiHpASp3ZFZmjSj9yU4grUZK3p7+ZSPycQ
riA4hZ5yg5bX3EWZZ+73oG9IsRQaQPAW+CS4gCS7zH4YkW9RUAVZtHyQUfb4
ZbSltmtQwJuV6BiPEn3VHJEldR9Z9KCSUynV7FWFAh4lK6Wy4FJozHSLfAdo
42Jx4/wUPhA7TS9C15CdZs0Vgy3+mfJXyWgxFSulYwXAi41Blrw0JagToVw8
JKlpmftPnjk2msJ+MpSOh1OTE4noeBSGOUyoIrANLPQkyfEoQEbkG5sYJuVl
fkEx+MV+Due5QtIA15IGJP/sa7EnwbS03VAPq7bHNa2R5XdKQ5EdqflaXqmI
xFe8NGuuFIWBpMtlI3hmcNrpmFNti9VEgzHucNGHpKqFu91ChIjXaTbgkyt9
HwdPHr9y8tj1c2duPX74anwsbOjqP790U4nkvt1nThy9Ep5IDvaGj+z9ceXC
wxvXXFi/8szCr/ct/mbn+HAIaisJnDrNlfDuSWokpkoWOwGSIQRr3NIgQSUt
5KhOQTFdmv7/ZbaO7dO0K1Ubh+cfUVsIdZJgIwxJ5QkHvVUDvzqf0XkDhoaQ
IhaapJaUnd6dz9PFOOgwxSAdr0wCxwEvNZJRvawin4rrUBUpjdHSQ5wN4BRW
VdLdXkjCBejAADRlMKlrIqy+wnIhj+Yz4tU0KeoJrf9/mw84DQvYy9+QXpBV
mITYgDGG/uLHMs8IpsCEjI3lab1YbtJui/RXejDIIat5wAuVFxftcsQtwNp8
jQTCBkfHqp+2In6hp+VMpZBWy9mqOGolKxhW8slATKVGTGpLe09/ddZijUNj
ym5JNE0vSC8u5pmlOSmyW8xQ4ss7BqrZaC6JUDcK51zIRikKzkQzSa4rMc5B
RlpqxARykpo9YKEhvtjikdHJyGg0NBwLjWBPIE8QsPEJ0t8YC7FIMx6CkQ4D
TIqIB8Zhg7GNYN9LG1PsS/DAvKaOPl+m+wRh0WsR7iAilsXubMJWCdLOrLaK
CDE27tyoiMRQvhSWEmLELVK4RWe6FvUtwz1yx1SLEe5Sa5Zex81Wq/7zcwfy
+vlTd3am9WW29Z//3v00VWvUtYpSvHXzt7Ur965Zum/5wp3frz3y8MG7SKRw
5fKD/bt/eProbcOxXYvFi+928Mt2kRDGbSy9UjXKqVKQyCt1sEetURaap9NW
OnVtdsoBRDTXqWXI6pqgg34L+sCWCGWbUNUYOk0OwKmQ0mU8WZ0N6DWu7LYs
uZKfqwnpfN7EhpMNrpJjo3GMa8dEGY0AGo8A/PehSnSw1yWzLYMheXh+1vzU
d5O9MbFsV2uON3zVSOh1Lx3hagQjQ1rnC2QTZoXWuuNRH5z00PaphCiz4Faa
LPRtVxOtl3g5YLzO2UKHN5sWCyrZHGXTnmNhl0EOsljcUuW1Wkl5SKfiEbAF
bjigTRw1GKRGcWyVoqezQbTLAfKceS4RpwiT5ccKrqkQv9gqpWQZ5CLsLSSC
shGYDaLgUm6ylI8Xc5MU/xKtsRx/pY6XzqIzkULGKyoF/PIWQvDL/NJXKWEj
eCeGIxNDUGEcTM5lsUiOESCTqR6nCwhhkWDeKKM1IqI8MDHc6yeyOApmLRY5
BtG87xd4aRuaC439JSt7RHbBrGNXpP7LBrgi6ega++E664WoWM0tN2peKDfd
tUDu7JSNA8ZWGiAJENI1ji55toLjNV/RPWw0alqnbTu28ezp64s/3Lp180E8
kWnU3U/Tjal2s1WvT7Vq0L6aJXrB9yT5PXgAr8VR7kmH7kDKONEsQm4Go+JO
Q4P+ztCkIdh7k9utDeKXclMVqeq2aflKxNeGpJgoP+x4qtpg59zw5dXXaOK0
Setv4AXteY8Ssy1y2nrL57rNV9KrcdhL19Q9gcbn4aHDoDVs24b4czkQisnG
Nw0/V8bs1wRej1AhkcdSGj1oeKlpIs0i1vhb0bjnx8K+NM9BHZDrUkG/Mp9f
Flw6IwdyEo+65LHLNT/rVedrZBqCw1kykWCjmrMJ6kJQRQLOgFfaIyUE1jk0
pmpvNacpeb1aUBX2z6CSVDgPhI1yvlr0IlmmOCmvINktXIk3MnkqE3VZ88fA
mSq/Ah5FvKwUE0oxyfnqhLRccuSLA4IXWwFn8pMFgjdWzCYKmckcmE3Tlk+H
RYvJSPtr3+Egn4xkYmSbwW+Cvr52ZJLNswixh3OIKBZ4ZYOdhi7LFmKEQwHC
5Kgpo8XZrX7BM+LVhful3sQtH31zVafh3jl4B6k7WvjleQoFttAVkV3gjMi3
jvunoQPeWq3CLRBqY85M8tqPrCNyW4rM+TetzopDwkQCTbkdrSkSyWmfFrVi
arPTjS+fO58+NbsdCKVF6ammAbLIpvpA0WJ0EFxJqHKeXOI7vhVpKQA2qJ66
gdypJgEy1cHr2NOcU5IPJh8AOIu55Y9H9PEoQe9FALqqhx7VyIwObwG8jKTW
4eC35aPKzdXe0wVhflSXrJdEyhwm08fAQAfBnSJgVYHX/2NqfhhudhoSWWu+
K+CvHiPxJdFsUApRwgevHU7GHGGzWdNFmutCNP9GQnTNN9LeIEDBLCPJYBLF
jKqwLGfqjKpQLCcdioI9Ra5xwEu5LIqvi5ZWBJIA2WRHTUSLEHM62uBaklnN
IWoOPLaBiFhB/Essq2yhDRX8FsG1Vsoa5ZxeJlEmpS5QjkumHBpUXKZ3Ybmn
QjPN16CvQaRxAOILhYX44gAiS8d5kmDS3zxtOFPMxaj/ioq/k8VsHJoLFw1m
M6lQOjGRSU6A4nRiPMtJaX/5LATIsSwiX0le+RQnKRAeA7zYE9GREVbhkZjk
tTidJV7aqwWzFk/4sTDvByKUqabUlhSRA/PMExz6JXnlnRym+q/YaS80Huzx
60RlT4UtxVNkgMwI1xle+OEaWTVO+IgV5Bl/Uzw9Vm5FuRs5S1Npz938JMpd
mmigwFXyZGE6X5duTCrXqrymOsHe9CBSPXPbYHPLd6/NqVQfasVbwxYS35wT
r9mOhW1myhblbXGpSODlj4oDY7rtQEN5MoXhiSYLmYS0Yo/ppC++Qqu4a+ER
W5fstye7LMe+l25I7OwFv/xX8sS3wxM3oLYYWPgjGfyQxn8NeX1dEmJ4Qe99
+aUkES3ocbrbI9rDlgNhb7irzXEtjNfnJQ2CvUS+nIiuAKU6swkeKU/Fcoxj
0V9ei75c80HGIBDob43/RyQ5xrUzIFwy1AJgBIY6S6TEyI5atGn6JJWka5YS
sE+SqqTlYgYZ/ObgjSHBEOJqCUqdhworhXSRFgZMawpjzgUpKU5ZVUqgUbqM
W7k4BE4RwkCVEQaYQjG0uESLXiZEfAFvntQ2TPEve2ZPcNPhHGex8BA28tJU
Lwa80VycKM4lIpnJcJrzV6lJioWJX8ArCLMWT5KdHvIQlrz0xEgiNBoPj1Jo
HB6JgFMwKwlqstaD4DrKjFMKSzSasliefxZ4g6nBMkcpkGORWqockfJCfysu
bo+aZnPBqNU0EcbWqQOBKiaSfeVYT5UZ952WFgR0NI+vQxEx/rM4/yN5LU0U
ucvVT89z+iGnKBfFznwsd6/EkkRTnQXFqvDtqsoFeNRvQeTkLb0yyS6YnYaZ
71js6mWRdkPGFhlk5Jg+ADMVeOB5OSvhseqPHoLYXKiLt2758bIAwnypfiJa
FdXjcQC/lyqTJWX0mO7Sn4uL4ODXEth5M5q+cMtzufAk7gW/iD3Vsbtt2zPM
vg3w8uQ1VRbmYiqrnlL7sAu5QRaLsaXqsMt4NucpqWxNP8vd4Bw18cvXyEbX
m3PHXKWqSIrb1IqmWnIMxdbLpgqWeRH74JVNP40G5CleLkkSm+pKVAj2+MUx
W2hAShv4rZYy5XwSm1JEzJvlPQW88OR+i5dXa+ZAG0qd1CteFgtSiz3IZXmN
lQskvkqBzpPs0nlORGcikOOcRL5AFaJMcXEkCIdztGplNJ+K5hheEuJEFEKc
ZBX2JRjHYxQXsxZLdousdWiYLfRwPBTYaa/YxDUmst8UO4coRoZwR7lYTBv1
YQ5GKR09ELR2cC7LM8/zc1nimW2qFsEnA1XNcRS2zWodN2pDdx3mFyM/7rS6
Jq4SdxcVXPgOFEkVQBDtdpveBbJeDa+2QetjzEw5UvqBRcRtWXOkDqKJvwXv
nuWrcXTZCAJPPIoQ2+VUjybBLGkuVV4o1OUzOpglfr0AEx/D/jTtzk7bstaH
fIApLxy2JOnEIwmCUx33VaC8VDsmfOjHbssKMPfGEy/IpRZuGU9aXmbPi0bx
d5CcMH6k/DnHs/74ZnI0YQTZb1+s8Qq6WPGmF4Pj83Cs3bKmGeFpii9MGdy8
ON3xDP/8VJXEv00e8cRvByGwmGoSVsKQykDimQOQg7Jy4KLbXGtuY2BxdT5T
lQJ0wK9skku0OAS2oMI693fxyCDe2+GQR+ZW15h3upLttJhnpjgnm0oAZisF
yG4KmgvxBbk4oGSXAqgzMtMw6BWRRJkoMq1gUE3r5KXzVa5SYQOqDG9CYWtd
pMgXLjoObEFrjpmVtDP0lwpJ6Rjvo54Q8x7I51IxQTg9GcokI+l4mAtJIWwg
F0IMYU34UGOPH8lXe/yOJGjhnZEUjHdkLBkeS3IHiHhvyoDhmnFOYnM2W3RZ
CsSkwiMUIEuNWL6c1N/EP1P/lcNFIqoTcSG4UddIdmmvUj8GJZPVIPUa3Mwk
SRSyGSyLFjnDtsE6ZfHNrzJWFkHdMkV3+P5U+VG9Tbc3A9i25FG20KpXYK17
BJEZpmt0yOu0r6e0WBbNB2Q6KKhkdSPnbIHTGX5feUj8s2TO8Ub0mkCSX5mZ
sjjFNOeEuTGDAnAvemWF5VFF84LZQAd9mnylNkVM5U9E0km/lPd7TXfw2Wwe
N4y2V3KSP11gvD0eZQSTp/MgYIoQs2nncLsml7EK29X5+eT5zM6Dmv0296pJ
ETlQXuK0pjetqrSRy0aZZ75MntjBZ8bfB38c13siJbVYVaUtRJAUQmmei5ev
pv4QIlcveoMMJyFZr8lmI0DW2GwHG14ELprSy6y8VFoqZSrFDPbAuVygUhFg
58i3xNUrMJuT1hGDkmOU2uLmEG7W4owWU5wUU01pZ8JZXHRU+p9FeUWmGVj8
CHUmgcY1gJowp5bLyUImnk0A21Aqjkg5nE4QyJKRpqJSdEwsdCIyJj9ij3gZ
tMI5B9jSjxOky3EGXCrIMa5AkSLzj/RoZJRCY1JhSlaHxgZDvHYHbHnQQY0D
4tcqBXlm2RD6wUI7TLFDE/bJTjfYK3rtCr7zxN1FRRYyinSjykJYcu9Jxobt
tDHFnR4zXRcyyuvn2F2PXFFPujkFDaGYns72u9Ok/DaR2PZKVEGnk+TNmFNK
NVNcSdkhuoAzV9bnGbcjzLbkjUyfFEBtCj7ygfGOjXkJWykDSWqI2x0p5Jdg
maU2SGdRm4d4BhkEOjyIyUa/Ap+Zd9IMhgs6aJrzsluGWPe6V36i+He263ov
S97GCkpXQWxb8xV2XmnYS+txq1VF2j+oo8avOnFDFzeBUJ2oUvNhDAJeEU0p
HtVNmszVqs1l0miI466Ppk1dnY5BzlmKR4EQB91fwZDiQe1URYWJX8pTFWxd
MSoFkV2Jgg3OfSEKxqNMblr2rMIZKjbRN1wUaP0uaf0S8eUsGUC2qjnJbBO5
QYuIksHL4lhhU01RcBGGnKy1uGtwGqDth8NAlVJbUO0i15uySYTDoHsyl45m
k9G0x2+YhDgRTnIg7O1j3KMVHU+Tx6YfgTBkF5uflB4jOcZG4js2GR6Nsuwy
uSMxbpmOjg1NcuKLysfURx20UoPcPqpJ8Uwl6Z22GF7YZozqNcaWvvPLVUWI
63yyLlEqs4ngsSPqKTce39IMrCH3G36E3+OTlsilgAaIZqccORBlbLO1Fn+I
vXfHekrtmeEul4E+zbiSlRLqOcPsiSwDbk5zlYpHCVuGCDz6idfamvEecgNY
JIHmJ6No0PDYoXxaNWgR8YJZxlNGmKmWJ9+CG/thU4pKXclr+fz6nFoB2vTW
vvLyyeDAFDPvgc/7GR/erj/INOelx6UULg5ZMszMtYoI1DUpEEZkyim+oBzs
iXKDe9XAJiWBOQ6V/NUcvNyqAaKBp5COz1bzh26yIqLgDDiiXbhlGy/ia7Ek
umVzhV+DGsCkPYwLB3RARaJqEXu9AloLMgJ4WS9KXBdUqhHnoLxKkfRXQNaU
HKJsi/u7pF0EB1KM9uy038+JF0Twq8nMYhofqF1TKSZEiwEv95AA50SBZ0ZI
RMypaTLYrLz4kUJvip3Zb2cYWwCb9c0zgPX4BaEQZeJXUtOMLXVqhcRLA+E0
ITyRgdlm5yxGOk4bFZ6kFEVZr9AI0co6O8miTI0fxK+X5uJk9YB0cEloTAkr
R4q8qoAsbZPYxFQ3G8xsw7v3WpDgpsEZLa6n8P3fnUPjf7sbJSi2Ja81RTe8
FkiqBIPdpgVyOcTDU8hk4oCyTx2vdIsDrrxIYGvJaDDDqAbRrkD6eaYm2ywb
aQqBecQg7yoAei7dYkk1g+KOVG2kQ0nqLCKFQRYLEAVWNlBMD09fzfljO/L5
5zLVLS80mFNbdsscFzPpbW9w4Oc68iHlDL2gn+yan1hmCjzllZYw/vDVuk1r
ZddsxL9qUOoNAmR/gKI0MmRUGjAkJm2YFakWSeTbYO9Rt2Sume5bAq4amHMz
IKjaq2PEqNLSfFYF1OBdZO99PA60qWebpntUgsZOylRXKeWlV2GYQWVBCk8O
fxOc6fMLzwyIAC/stFbJI/7FHhQbSlYmFMuzpGNTYmHS5Sp9i5zE1JLWpomK
5TSi4Krf/cUdIxlOUMc4lxUlR81SC7pZiGMcCFN0TK0ghWQ2FQOq2QQMdiyf
ioFiAAtsMwkvCpYsFjb+kRFmfgGpnMlOhtPRCcKWw2Gv3zKM+JeKyBIIR9lL
c8mJMtg05XBsEGiH/QlNMhsiKB+PD/dyhUj1+zTkWBUJlh9bkFQ/U9qmdDQV
hdsts9U0mpylgVj4NzZrbmdOizt+oUTKN626KtIpeSQR6+DWFVUS8WXZpUjW
S0l1vEGAYOxa/iuQVaYmK9HoaQfHTC6OXfw4zY+KuM8TXzOgKYBRPkxjXi1V
lIt/a3M+uRLeEndN0cf/j9R6INuBke7O2ZW5kY2nY3jBglA/xeKLP6Zs8kT5
2PMLwWKhm14JmBYbAbay7C3ghf46RgVMQYtZkcsNWgAfv47qOW2wzG52nsst
S2K5JnIsTc58jYc8P6vhR9zikH3DjPAWICsWa7FJHVk4LpENoDGBxBrxtcuN
67yRQ4Ds6hVQVsKmcVYKz8WjMnMKH95Sy3DLgBfUFLMJCYcBMkfElN3SyxnK
YJPTZmw1r/tLRJlY5hAb3EmvdZX4paYOLjQT1NyGnZQysQArB4QzJ6zgn+Wk
5LuyqSiJbyqKALmQiuUSJMSUf2apFXJFfwVYEWLObk3IQ0A4TmHvKJEeofg3
xg6Z603kn9kkD5KL9pu4KFMtaLP+Smo67PeBAN6xoZ46W2VffAVkWaeuCkKx
NaiAS6CR5lJG2mhSLlrHcYuUS8pJhsylxS3HuWKPxLaXoLYlDcvWdy4MFGmT
A7mlu557tDibbcxw6pgttzHNe9JuT4JJfBlSL/PM2AJYGyc/T9c4Be0AZAwp
M11n3iBDH2x6Hh14XwkEBLHAOUsvlvwu85LGRpBWanvh7ZzOypXyO0rQ6sXF
Um7mdJ9HOr2X9yx/o8/5abqObT74nYYRtFv7rSCGb6TxaSHN/BUVtsYHwBNS
SBRAiEWRcbImuuznqCUylUIVAmRocc3PO8Hu0pRhv0/Gq9xxKTn4ywj+nJuC
YgJbSDntLQ1PB4OVuqU2ba1TM6ebVsuF08ZDcNrgXQGzYFAtIybN2UbFNqu2
gc+su6bpGEa1rOQy2Xg0EQvFohPRVDxVyhcqJfhhyCXUMwuQKRZWshgBDJ4u
YXGvtVhoWjKIVZhjXmqxhvvlhBjNUqTpiuUUz5tIS0Rc4jIxHuUQGGMFCTF8
NYW64DSDfSSfiQHb+Rs0F/CKec6QlxafLAhPiAT72E4w0aPyqFSKucwkmefh
GBePACZlnvmYwuGJoSRIDw0T72yz8RC76CExz6LC48N9oJjLRqoAG6iw1Iy4
iqQ16rqUkwJs/fPML08BCDidatmB/WM8NTGKcv/PdE1uDGZg256ceZpFN7aY
Z4Ps8ZTNWS+63id3ruGQ6GaipyR5BYJ46gRzyutLT1O8LMEvsUC5XydIMU1J
fsmPQ6VDY16dyGvVEFK8dJMvsp2mJ9lBBmDObPgDUcB7cIGXqGdvLCFGEH17
hjkQZX9gkZSXV3qmscUrOXk9HiLHDhHacGirU7oYKqyCEUAEXXZMlmZHb9YM
nK87TLoXh1ZaNb0ZRP12JSgGCeNkgykc9vq4WH/VgF+5EhtiWJhhvB3w5GWu
S6SkcNRGpWlpbUdHHN2k72Ait4whBR/GNTVL10xN11UdnI4Ohfo+jv587eHp
41ePHfph385T36/dt3H1vu0bjuzdevLogUuXzt1++Ovzwb6RfDpTLeYVKi0B
5DRA1kjEKQUdJLIsTn9xky0+FcYNSHmFqGdIVQXMUkWpynmtcpGKSgpNQ+au
S5LjOPObLOVSpWyqmIUB8NPRaaI4l455ITBssySieYv7+hscsBaPyWTDJJeJ
ASy4BowxyjzPJa+o+OtLcFR6P0J0QVTsdJgjYop8KZcV9vnFRkWlscHAPyMQ
pvoRl5Ao51zXYaEBKTaJgjttCycbdWp9FC3mVSXpjpoS9WQRmUvgcAFUbv5p
jpGn23JPUntDW5S3bnhkcaJmhlupGVtbWpXEJ3ODluHDa8xFwXSBVIRp9Jjh
OJp7JBAg29imOLqcCtLCPrnzuRPl9fE0g+YNfDb5VCKOQd3H67zyGjAMf6QK
xjGvJCT2W6JXbhnV5+n4nN/2WG5If/XcqwWK75ehtbbf8jG/TwzkQlibrg6F
JYptTWJSoNp0CVvA26rhd6Q9xJqvB0eaxPvSsiXBchC6Nv3+55btMysS7Kf1
pO2Zy0aw3AQvu2gWYp1GD5ysmyTB1DFCcqxNNWuteq1SrMSj6d8fvPjx0p1j
hy9vXHdwyXdbli/cvnHVgYO7zl8+f+f86ZuXzt65dPbuuZPX9+8+u2vrybUr
9n331cbN6w5dPHvr9YsPichkIZOm1FaBOrK0SsGi/i64BXykAlsmu6ooH973
Xv7h+sXTV04fudD3sa9K0TQQTsO6s6kmXy05ahxAcAE4jkv5SVhl8P74wZMr
P9yIToQBL4y0UkzDzANhiLLASyksQVjyVCypiShVgRnhcSkq0QFiYa4RS8rL
Qzs2PsnFI1qEh1upoxwFy0norNeHydOaSHNhm73uDphnPwTm1BaXeglGKvvi
/5T6JAVbCnKbDW1+wAt4m3Wz7npCXKPJNbpX/J1y/RjWs45tNpbTbFYpycOT
8vietLy+Sh8iCZz9BLLnn7v03Ua8Vk+HK0dM7rRnrQVqKftK65dfe+IQUpgN
tGyeH5gr+HLdx5yfCsag0ZlX2Zn/xKAlLLCv7eacQHc4K+XpacP027G0oMdS
asS+xEsrlx9iBNOZ/eZkCbG9D+9/5paX9fIsNLxKp4m/ts08knPmnJUmdhoE
gVwwS/DWGVtXb3kg43c3gTm5a/qWZJXFV5EakNel6WpS8G1y5pk/vybpSknU
MyxFx1IEW45eK95mEs4sykq7gdsAYUu9mC0O9o/dv/fHvt2nVq3YtnXTod07
Tp49eePu3WfPn338+B4aBEaUdr3WdGt1x61ZtlIsFXLFxGQqMZl5/sf7g3vP
L/1u23dfbdi0ds+9W79UipKLLktGC8c1chpmtag8e/J6146jK5ZsOrjnzNnj
V3ZvPXbz6v1kLK7kU3qFctp+WTkpRrrKILMKp6hxOg/MC9cu31u1aOeLJ6+z
SfALmYZqJ0R8RX+x5TkWlkISwGTPzLmseCjpN1hK5oprSV6kLG0ega8W2ywb
w8tVYMlI8+IeVC0aJyGWGYgh2Y/KVGI6btS5VOSZZ9XFkFszxDC3mp7UshwT
0XgIW73mKTIu6OAOhxMGsPOjwqZX8aSD5lxJNIgTubyrzys5aWBn1ne8QWc1
l4eY3I7p93d5qWwmxUvkBtF3kF6eX1eVMYQAnHPycwnk/9pKMVeA9uL6OkPK
H9XvT/aPm96zZDSYZ7Dn8+tNUWxTX9ZcDNvxmzbFgRAdXKFreD3YaqDRQZaA
k11eJo0/ldWumcBT9LfB5DYZXj4wCGQb3OHdLU95WXwZZHoiNgLZkaC4IvVZ
rzWFi+B+MwlFE/P7q+t2JajkOpy5ArYk+mwAGmQAKjUH7+IaqtHfM3Lz+oOt
m4+sXb3nwL5zP/xw68Wzd+lExjWduuu6jtVquA2XPg99n7telOld4FFVcoZW
lLBdh99N5d6/Gfjxwu0l3669e/MuvDElwapwyyXH0lSlGhqbvHnlwca1+5Yt
2nL21JWRwbFKWWm12j3vRzavP/z4t5flQg7kkutW8pUSrDghXOHVeyrMr1Kk
dDSC5XIx//tvr9Yt3Xvryv3UZLzA3ddQ4RwB6yEsQsz7KAurCDGOI1IXxpVZ
fpTy1YigE5EkZ7Tifqc0z3eQfulRmvgQpuYN6sWSpkoGOc65rAh3ZElTFs9X
6g/4Bc5gFhoqnplVFdpq1V1NMlechebMFe3hqHUCnENgyW6Jrw5u1M48P9md
J3m+3FhBBklwDmQuiHylWuSnsMhISxaaddYSwZUhou03/EuEy0Y3iD2DRmux
93agzv9bFnrKt/R+TCqOev7YogfNyQDNLxuZQVw8/wVFXn0h9nsyGUncljMc
YkjWmj+bdI0yWdyzMTf++AE1fwC28XN+G4OGzVQagqrwS2rLbAJt7GuuViML
rTcFZwqQGW1SYZDL+Lv8FBmdvI9qcNeKGTRyU9qKvvvMDFyElHF5sYJKw6ai
MxlmSnFrU6S2Ndsw49HM7w/+PLT/wrrVe/fuPv3g3nPwpVVxd9Uajl238bJk
+EE9LLdMJJTysbh6aDp1S8oEYSUH76oUc1WlXCmXM8mUrkDfFZzHiJHP5t6+
Hrh84f6KxXv+/pe1B/edH+ofd227XjN0LQehScZTe7af3rX5+PjQBJCn6Ypc
WdZpigSt/iEFpopEwTR3OFXKpxGVH9h54fCecyMDw4V0El69kJkkzeUoOE8L
d1BEnEnEcsk4sE1NRiQcziS9vg65jC13TLo+JB0t5EpWWTZZB4Bi4ZAntRIL
T/pzEufOh3yQWYIlX93ADeBqAFZSUpyksui/vmGItfYR1ukyHGBIb5oszSTQ
zSbNMvDbKee6K73mfK/t32ryQ9150Z/gxrrpJVqpjMt1W9lPc6s/F14leaXK
mOBVjb0GyPn5W1usaXDnz7fBFBdznpmeGDSPcf8Yt2p7MwjmKazmR7XBRAZd
LHHAbyvQ7qaXaJofDkvCWTynJIWIX1oHmz+8THqCMhIyMuPYmAvS5/mEphee
yysTvJ0m8dshTg1PZMmpOg2PVlJh+kpialasSjmYmjpMCXtFdimvJch7U5/q
Xo9Zh7MZdf7AnOPCqyFiwh/NxfBFQa4O5aX8GCe0qRMb40C3Xeu0Gqqiv3vd
f+709Y3rDmxad+DS+Z+HBsZt0/rn7PRsp4GPCt10TRXMcp8JJd8MtSjVLpfq
zqq0eYBlnFdKmTJ3PitFaYfOIzI11bJeKXLuutysW0MDE2tXHf63/7ZpzbID
f77sr1ZUy6hq1WKlkq1WMhqtzVV5/6Zv3bIdxw+cQ+DMk5god80gU5W5Wqb1
f2j2BLdc5qj5eTKbzv544deNqw72vOsvZjLlQraQjftUTnJeGvBCbaNAOOCX
c1nUV4l9JhHBj8IvyOU2j/FgjgM1SEe8/udoaDQyPjIZGguqSNKRJXFxUBpm
daZkl+SrI/5kB8SzjTriXCBp4V7irLLJFtoQRaYZDTY8NmQXZ3Crm+0WeWbA
iwi33Z6bvCPTAehmI2CNZoCAyLQfZs4LOYUjU2YKU98Ft05x84YTOGGaCein
hiQDHIhdl2vHMqkneHEZJdp+b3ZAN4W3GC7adouB9StfTCs3VYptpt+iyUny
ujf5qOMtxKHPf/0gDya/xfwksx/eyoyDqgwp8Kg0k6hj488ombEOd2SJz2lw
l1dg7/kXtL3ZDfPmLZJkQ0DZHk+1HJZgjYhuOdiTFluU42Vmqw6loCkQJmfL
Kk+FJBcjsyXhcJ3o09mH+xMk6X9Nl1IRELNJWM3RoYkrP975/benLYSmZoUC
T12RfHKrhv+ppms70Ujq0YPXB/ac27zuwLmT158/fV/Mlqfb7X/OdqfbLv5E
vIaAxk677FCRWkH0ileQfBeFzFzzMlVKaFs8ROhqoVrJqRzhMnTUtaVVaHZh
OZ+CaruWFo2kt289v/AfO169GHAdpwop10qmUcEtbVmKphbwo6FVX794d2jP
kZH+PryXdHNJQyZ+1CulYiadT8U1DBSFZCmfoOU4cvk/Xwxt//7Uz1cfpuMI
ijOFbCKXgubGqXIUjwi22NNGthkIh5NRUlgy2AlsYc5ZhSRtJe2UCVm+0jPS
lKmOhcdiE1Dk8ei4zEgCp/hRFvcgZnEM5AP9lVU7eBEtXt9yYrDdtFltTZFX
/AhgWw3c5FabMYQ0c85Zl42OKX8FKk1OcNG8JD/76gWGzYbhJaipauxZ8aZv
d0X7ptt+E4XfuTQ75X6ecb/M1iULPcXudGqOYvaW3FccKG+Hrab4WAm0xRLP
eVo6OWfj/YxW0Bxltvm36HD8TlhR9gmBvDMNQWngxe1O0yt4BVFwkNdqeu1J
qi++ntoGs4A7c+MVO1I8nQZJvClViik06DqdDiX68DHgN2Z4jU2BlxXW5rcz
fJduSjALAe02HTbSlsgx/diwmhzzCr9iaAGgZKcJ1brpQpdrNAhLUgu6LJEy
B+Aa/LD4Z27WouKLVlXHR+OH9lz+y/+56tK5m+1GDZdRGVdX8ESQq6vmYH/o
/Nmb368/tHHtgcsX74yPJSwdv0VzpkPficwKLq16tIoIPpVUgV0eWGw/8UUg
kw9HNI2HVImp/dU5aC4htVyqRe76KOJ8pZDVFAi3XilrJ47fWrPqYGgi6Zim
qevVsppN/S+u3vtblrO6Fv0H3nj3DRsb20LYBGPJoIBQAGUkHUVQAEQSSIAE
QiAdnbhz7JxzzjlVV+649z4S5vneO/zb+5PeXGtV9Tm+Y9TpU11d3V3d/c01
51xrfd8u7t7cPz08aTWrrSaCQJlOLAl386IflI7Os2fv/vGDT5589NKVP12p
l6k5hN+06vfEXr30zlf+6bGnv/fDSCAKCV0pZIrZVClHi3UI8xLnJmOEYuA3
GStkkribSUovZUS6K93ODcloOeVg2Qi/tI5HAMybAn7DAG/QXZnHWdZDklqS
lOZyEtgZEtrvThymGcRjSi1SVplyU4xTmuqr9PBDA8IKsy0iNk4YQ6pN6Phk
1KVHGbwYezS1cNLRXKk5dbq2HHfs7LvseQcb/ncW1qhvGfjlTuYBzx6ijZui
HQF8G8uuPeTeEgKdkwjapIyUzh2VF5mE2Ddc1hYbbjL2gSnBr6nh9fFeYPMJ
UQYhgnChT+jW1EYw0eITN9Uo1sDurEOaH80Tlt2JWkKXEjqUcQeqhkPikLhS
k7DTBx2b5nBmjYFl2xxx/UtSAbgYUCq9hZsVJGNrsHIG+ih/BQ/Lt2BSfUI7
UyHZntNISaAA03GDFolVzj2yV+o4dpiQToqai8UN3upcKW4Pe+1Ou7e3Hfz+
kz+/+wuPvvb8r4q5qjLqc8cIvm0FYvajD288/8yPvvXvT3//2bf++OGNZCqv
qqquTsaDjrymW32W+AC1TEqe1TJhVnLmALJzwb0WLoBUNJR/z2kho9nETQIs
TyuuyN16rdCoFjuE3zbQ+uqr7337wZeymVYiXvztu588/MDz9371u//0N/c8
+ehz5WKuUYeErnbalX6XqtUd3gDeVq0yGQ2OjgL33fvcP37hwU//dL1dJyeO
LyQaTn73oVceeeDVh+9/9Rv//MTvf/MJJHS1mAV+ixlSzrlULJuI5UgzEwXj
eCGdAH5ZM0edXmhOPstkpYw7098tMznNHoJo0GuCZveH42GANyyA5aQWW2Pi
X+r0AMBxQizo3ywujSPRoE+E8YQhTICFP8KA0XrEoYjbJKRJYI+HRL6gDyFr
UdrkfBUHp1OmGx7JhF+nwZJbPlQWqIbTHsy9gu5swU3x16Lq7UDalbn1YiBN
0babVdbu6D90HC6/hebQKwYw4YXkH89PdDSt68rFSjtv7Qpv0J9oWoDX0gGi
MSA8A371sRhMuSWCU4fOTEB3QgGoWSHHOpCpRvzl9MRuCKfzV9STkDiiL60P
VQPmxZsa+sjUx/KHGwy8tTnCQdVJpPdm5sTGlVDEGPK7yzxlB6rMv4RcncML
Lgz7OBnRRlQxdV71qewrncn4EYFZXMCYdxR+BUc5wzdJvYm7LpmPSH5Pht1u
p//xx0ffuve1f/q7J59/+ufZVG0ymkxGeK9pKVf96IPrj37n5W/d++wbP3z3
9CTS7Q7U6XQMXKsjjBDKbzPji8OVwtaUuiib0lhCcUPCizPhoiWdY1S95YTe
hMMLy2nqsYRf7nHLtCzN0aCkFkQ1lHaj1Wj99Cd//M6Dr3zwu937vvn8XX//
4AP3PvP7313d3/H4Tn3VcrFRA3HjozW77Vqb4gCUObBbKZcqwUDiu4+89vf/
z0Nf+/KT168c1Css1Bv1H7z8i3u+8mQkVD4+TH31rscuPftWIZuFhCacEkgT
Du2ychbxLFloSXBJUlpUNBWP0lHZcctGTpuHLCXtOGLQcRSKGpszcVhuuZED
t4GIH6Y4ALSCfHnHG6E1LSGnfRSNiVU7XBgiewt4EuhomQvgridoFfEsppir
wPQ9w4iBC8YjYVhnDQ2n0uTkvpoy92FDu5s+yTuzTA7pcNshmJeFNLURYsfU
iao2tScnhcWd2HRcJy5zMqjMSqztu0AEcytFFXkWv8XQ4lm0TkuGQcCxzLFN
zZbjuakIFkC+ACwGIciOcSF1pZFODw3cdm7Wq0C3RnyqOoClSdNkfoFotc+q
hqIiMIvAKMZTJfyOdbwa3gvblJ6uaZxG4JgAbNL7IlxMh4gkOqlipwFDEsui
q3GFeAinOVhmXhYKxqOMwbazAbbDNitn+onpWxojGtNxKeUDUIJcgEsZ4Onj
YqH23rs37vvWj+76x0v33ffD45NkfzDttAfRcObXv/zoO99+7v5vPvPjt34X
8CWGA0pbKcPeuE+QxCelsQQbPmwJy4/v6N6keMJUy4k7yorzPCn22n135RD6
cxVtLlS1pI4sPV00eaEuq2OxI26UWrVSrZjrtdu/fffyvd949olH3/j2fS98
8LtrhWyl0263m3Uo6Xq9VC4X3/npu7/48a8q+UK3U+u0a81G4/0PPn3yidfv
u+e5r3zpuz9+808PfPOln/3kg2K+0GnVYuHEA//+/eef+WmtMQwFMt/81ycf
f+TFVDxRL+cIlWmC7Z0olltKeWViOSfBlQLScWYh7cw0zEuNmPPPNN+BHTG3
WcIXR3imAx6lDUI6GQ0yiomURVTjljWzX3YIxeFAJAAIU1MW/ayjLqcrW8Qd
Lm/ybZeUMy27IaDuSUWJ8l1koLpSRuSktDO1TZO+6KnkrtuibzW3NZpUosun
AslNcsZFGUEMStUW5tUpUca1oQFBdepMp5XUNFefuUtEISyr7MQlbuhsLQ1H
qBPpz3hSAG7n1nhmjhliPdwa/C4MzIH4Sov+bovDuWwtB7KwHs633OqPoTiP
Ega5U4VDFikNxAdcFZfkWvy99QXChOIpJZpknyww2Iq+XgqPGmnpETii16nr
ZMBHxKoqyXhsUvFxy0Y9IVzW2HQCH3essetnuZDEd/FZnBTlpCsXAw9LQONU
BsVnltygYF1BNFCC/viLL7739X9941+++sY99/7w8Dg3GNiRUOGnb/3uofu+
/8Sjr/z+g2vpVHkynoxHg9GgM+i1+N1JJFA9esQqfdAesgGXls7psONWsjqk
wHllgPGQl7B2lxCR+jhlD8a8VsCkQwkuxJa20yLSaZRlfR6p/FIxqFoa9Xof
/v7a3f/47T+8fz0ez8L/thq1aqVYLuWa9WKvC4JuPP29V79+14MRfwSI7rQq
uXzxoW+/+IX/675/+adH/vzRdiZd/dEbv/3Gvzz6h/f/XKuVPafBhx986ZUX
fpVMVgq55s/e+uDtN99LxxPlQopIlmpDt8GbS+IIsXAZujoTl3lJXPZNcoIr
Jit10OSjbJzbOYiFZYeW7IgF0uKOnYmHEaA1GQF4Q5yODvDdIINXmNcvnBsN
+ol/A14Q8Qjom3THky7wuzGDXNWlla8IgJTFApwH0jnJGKFk16Df7Hfq/V5T
pZHZE+xseqSla4vKTCNa71S/Y5KRMKCxYVK2eBtjO7MmtlM5IgziLtBqqLen
71lOk/OIcK2DvPrstYkBN5tBdnK8nCm8hLsyB8nqI8AWnG7zZVDiSJPEUZ8m
WFGSCuFlzGgdsV7tCTTIcnIuWpV+FVwzg12QCP7F9yMffyphjTQMMS+7XT6B
+ZdT+j1OIFCScNBvt5p1uBJEANOYzGdqs1Hxek9zuZTBNlxzQ4RKvqAneoAz
QkTHuEhS165+VplYpb2Ka8H0FG62oVQVkb45wbuPBqBdfPPQEoPJ2LFLnMiC
hAaORgd7/oceev0b9/7oq//29r99663tg0yxNH7nFx9/+1vPPv3469evHDbq
+BLU8Wg4GmDAIOZ3IbadjpFhh10GJdZgu2heKttqXI9EHvk+OXXW5llRDf4z
MbyEl6wtMO4YGGnDJv/JJ5p3PNoYc5b3vEoepbZ47mG516wqw+Hetu9L//DA
u7/+sNtuteplkHKllG83+IRurQuC/vXl+77x1Nb1w1a9Ouw2S8XyC8+9df89
T137dA9PgYdOxlMvfP+H33/qxVwmk8vmnnv2ja/d/egzj7/x9pu/fe2Fn775
2s+y6VSpkC7kaL1ZQmWaOq/ghQtpwmkhlSimEuVsipepFOVM6WiZxSCdlozf
iLCtTOp3eznC6Zjsk67m5HOIYMu3IGJObTkHyQIzEUfkTywFSVRPlB7Aq2AM
qAPysASHHieNO0LHdITSWb3RkDlFkf6rznjcqdeK/oC3VMjSKKXu6Dvw6yaf
FXfC3aabUVov7uyvkHKw4HdOahag6JkmIQ64cybGcqaLeyMJ7HwaiWRAVXJl
Lor7JqN7OVdW8wmQK7B13LQxEuQabHt1ySZRQgm35II3pVWRo8R9LF9tY0Kp
OTb7msaymfLVPTYdXUkpsxPpE2zB2qSQHYxjXyW8UO5oKo54Msjnc+FwuNOq
WwCvrZqGUioX/IFAuZzHe5n8RCDOyaSxGECowQuyCKe3cEHBSTbXqgPX0jZJ
VoIDhSo5anU4s/VkIuH1+sdDXAz0PH7QLn7T8RBytzfsd6PR7ONP/OgrX3vl
vgd/+ch33716I/mnj70PPnDp4YdevHbloNMZThQ44D44F+DFLZ6oUBCgkrQj
JMZdJ8K46VB5lHPjlGRTOWeuEkGznKYJg3VFForv1VUIg1HbmHRNpWdyLXLU
p1XyGLN1Z64xt3bTjEUuOWnjQTSQgsr92Y/fazfq8ALNahG+uN9p0GrS7cqw
3woHUvff88wvfvLbZq3MJN7KpNO5TLbXanTqpT4VoyHGC4loDOSNuJpKpN75
2Qff+86lh7755PceevbXP38vk0qUCplcDrcpmXxUzIJwKR0NIgaKSSqno9Sq
wdMMpdmDZ/rHnJbLbIyzWzLfP0TFJqFj4DfOOS5ncelwJh4B5zJ4QdAEXkpb
Ofo5kHTkNLFwjLl4ADFD1U9OqhgjkXlMtS0pD2Gs9rvNRDKWTMS7nToL6a70
aHXa9ROvNxKL0rPcdLR4YTK//AqbDor/tuIEO+JNhWXTkmG6MyCI6dSem4Ie
CsBtZ4b7Ro2T8RSvLXFDGktMasUc8Sz+0ZzZnMSzTK+QDgopGOk06gAuyxjD
k5qMFJ09LxEx85qgGJtFRhjP6t0OF7zarTYZiLOgoipzrphcbPx9TsQgUz6f
i25AuqFNqpXS4fFxJBoBiGxTmVlTy1CA6FAo1O+1bXPCspmhx/lwCTKALV5t
yklsLgr0SAZIbg1gl1bJkZP/kYcYLD120yNlPDo5CezveUD8qjKcjCAGBkDu
FLJ5Ou73Rr9579rdX3r6377x+r3f/PELL/3xmWd+ec89z/z4x7/N5somgumo
22rVgFk8C8zb6zSHA7zL0GK1wMGKWrI3Cl8QrfIFCKI1t+FEkleCRGkvgdQn
8I47+qQr5GtgjA3EFNOMKi4Wg3YrQ853Mejo6bauRALJe7/2+Ouv/bzXbolf
5lbMGrV1NcrDbiufKT1475OXnn6lVsrzFIbSZhojNpzG06Mq1ChSLdZrpX4H
gaVfKZSrpUq/0+l3W1XcKWbz2WQGTpYTU4UMZDMZYdrSTqsVLbxTSJdzqVKW
jhf5loywa5zZO8cpncV1YZngLzQtKWuZryRtWiDfBANZ8MsFYuLlDZblOPhX
gfwDZDSM7TGRxZRkFW5JBE77iGC1aikai4XCIfxw/LuwO550+71WIBjCQ6rq
4MLha/K/5EYNfbCZj7MppEq/onQkyl8dchecJGiTeNaH5GHZn0rS2PHFEN7M
uTOZ3s5vJPUpyd+KJJ7bk9VsKrS7sCc2g9ei5w4FfbrjnXGpQ9AfgGZz8ooH
/ICbAHFCX2qsIqRNx+1Sp7fJ8oC8hoxJ+qJIGKsu4vA1mhwTWF0TliV1ryMI
TMFg7WAoEImEJyPEGRXgnc80EGIS8TERnyojg04jIco7A05c951anmOcBb/C
wn2ZYcTulQQqaI6zQ5TIwginK8RHUEfgzkg4cXzoH/QRZ0bMnuBo/JowKcbe
1ukD33rx6197+V++/OLddz/3rftfe/a5n9/Y9vXHE1UHYjv9QXPKAgCfazyk
lh58IZY2FgGAq51OnMkRAKNctoQyzZH9DvMKwAXFkprWOe0mEyTJZyFWTx04
U/NJl06jmcXE1y1namS3MeXmMUubwCA+cO8Tb/3wF5DH3OLVEDsPjm43yqNu
u9vqPPvEy088/HQ2Gae2yVqe+zeopuysAVIvkiaHp66XWvUS9CSYutckoQ4p
ns+ms5lEIZcGBRepfzJRzNPCAmXEhXy6WswUC8kC/x0H90+xpAHtXDJWZBdc
INgmOUeddJo9yERHnbxWipotZY5DKZfM8jRDPMSdHi5+XS8MtCYYtqKoIa3B
3SrAQhAeDEadTrc+osIu+zXq0+hy0b8DpxYIBWPxWL9PmUySjmqXpxP2IMmi
sSiezhlUp5tIAGUQXthjEp/SJuZIun/ddRqpjXAsqR5WfTqfDHGuc3uG5Ip5
7TvIt16v3xoQudAkI7yyNIdsbK/OuaOZJbnr8Zw3SV5RIsscyQk8tarPvU89
ZsnxbfxOuValMocyeAUsOqOJ6yODma0QNskm03GZkyV0I+DCmTNToQoRdRWO
BH2GhggD1uuDuTod6LSOqStQzsA4TqtXKz6vD2NlShqA3lFjwhXwCmyn7g6E
tKmPuCJPDRjwdJM+BjNwMVAGAJF45K5MJ5TENSA26HUEv8M+XmcM6h9zYySc
kWXoN64cfv1fnv73e9740j9+//HvveMP1vpje6Co7W53NOrD8mr6iKKQQm9N
oYy7XJwcmiT6OKXGYkDUgtM2ID+9tF7jNIV0gtPFLTKDnquIbekZbjs6RDV+
iEG3VoBMzWagdXuteh/6tt3k1q8GTyVuKUBppeI59uSzuV6nweimtmowLHa4
cFzVxkOM0d2bW5VCBsfBszJVWZbh4sVAgNbKECGiXRu0660amDdfLeayqcTB
3uHB7mEsEi4WMuVCljuf08V8upBN8g6Dl/4OS5JXvSPwhnxez/Ex0I0tz7Cl
dHQqzknpBIE6E5cej+wd6+DduZRlDgRNi+CRtCacxsLCvFQ5CnidI2F45wgg
rBvjqTas1orBSCgUDUfikXwpOxxR2krKhfA4gK0v4K3WSoNBc9BvTF2UYYzB
2icSicmkv0EQW0tiOharwyl4ln7BAV5qQE2ziLQDnt5Cc9K5Q5h6qpnxifXA
CPFkPBKPVqtlaDZdk+LsqNdtxkgDRMLRaD6XhQEnPOoDKZ6K2md40h8jtrhb
km3v2AL/WmOS3zaVioQ9GaFdGooaVXOAIEuf6FLNIQvQE1ZVOfEOiPGZI5HK
2KkgVsbivU7L1Cf4fijQUSczfUwZxrYOj9vtdduwiiq9LD+daBr7wPUEChbf
HuKGhIJWo+71+MuVkvxBZMl0sVQe8Pc8EERQE4hLwVMpyg+6U2hgwLBP+wr2
hz3ubaZ4SPNQWCRAZ/a6HX8o6vGG+z0EnD6kFL5q4HfQaxkazdP5xteevOsf
Hv/7v/nuQ99+6+M/e73eXDCY9Z4mDnf9Pk+4Wa+pE8p7L6ypreMb5go1Fanx
eUe4S5s+1jnthqgo9XHu0xvQZ8FPyXUurs11OYwPhLs3JgWbjScqvc1fo1BG
3Xgkdrh/0mu1OvVqt1FlFNd58iC1Pg46zWqlXCoWIBFBmtIjKvku0DRNUCJW
heelgTckRi7VeDUtYl5GbrvOK2vVy13aAOdqu14BhJvVEmzv0cHp0f5JKh6H
fm5Ui4zfVCGXykE/U5t0qlhIu1MVklDOhWx6d2fv6PAII6QKye1SsPBviSvI
3LgVF/6V0hKwL6CGtIYjziaAZdmi6VhYWjsS3KYlcpoS1Ey+OMG0JqalJJJx
b8BfKJcg8SPxWCaf6XTqPGL7IFzgroPQNGi2u/VutyYsAJXY77fC4XCO0ITI
CcLljLE9obqqMe71mulMslYjGII0cTeHj51IwE5PnDJHD+JcVShJK7VIoCCX
z97cOwhGYpFYIpZItFp1U5to2jiZSuzsHvoCYQh2jy+QSCbx7vOZulpoZHJN
B5vCsARhcs09SVuR2Kb6MiWdNueY5hggqpYLpSI+QbZQzNVqpemE09FOWUd6
z0iBqASrPnUeEn7H2Uzm5NCTyxR6vc5o2KVcEJwFsDkdcwUZY3sci8f9wVCh
kBsMuuNhX9obuLzSAcZx5ayxJ9hHEKiUSn6/v9msGQD+qCOumfQzo0ASVhon
rxxTSekpyGBAA4wGwBJyqQ47BNsOdRcOLDIBlsHC0kH8vkAkFE70OgiYcL6c
QO53RgM8C/yo7O14Xv/he08+/vbXv/LsV+9+5qt3PfVvd3//ni8/e8/dT/3r
3Y+8+8v3TU2BGZ/DrVOjC1SNAizPjAmCFfYtwTLjUfr0xDJQim8IY+tMuJDJ
jE4jCgKUIpXrnnR9cMFLVj+gZk6ExEQ0eXLoA8kCWXCmgzY1Y2DrtRvDTrPd
qB8dnexs75aK+XazSmkxbhoBBXd4bRDp/eCqE+xwqV7N18nnkgtu1Yqu+a2C
xREZEB/ajWqrVqKderlSLHg9gd2t/XQyUSuT5OZZhEkYYcCzDISW85ViTqYj
AYmAcCoeu3lz1+vxFnOpSjENUU3FptSmohSXjbjYXccjnyL8ZlNhym6l4jyJ
OCa32WSUyTcgFIyNODcWvnPTAMNhJ5VJZfK5Tq8LRAG/3kCQsVPjcjw1XEEN
YhjXG5VKtYBBBddmW9NGsxaNRrPZrDods7rrCyci9sIaB8NhL4CWSoFWBsNu
f9jN5XP4tiuVsso2sFotlcuFfq9tkBqkGvSg3w5FwocefzpXzBVKwXA0GI40
mw1IOGAs4A/Fk9lEMhuOJr1eWMhIp123TXK4y9nUssYG0zG1ZNBC09T+IQ1X
pMAtRBUCC7tmYmpcba1SiEZCsKLBUDAYDiI2lEo57gDvSo4IMQoM5fV5M+lM
u9kAYeF7wJBrNRu4gNNjXxayrdfB+MeXAzsJpAC8Swsc2PH6w5FYslAolCvl
VquZSMRb9frMUGncEiOP57bG1E+yvJjLezzeEaez8IlYe49IWqvUqQWTzj6d
pILqilLmOFwkvnlomz6IHgqZ08KQDUMnA0YJ4aGhAFlQ1n38qvFEqtfpQsXD
DtNlD2in36WPMLPM5WJVqw2efebtL/7tQ9/8+guPPPD6Ew+/9cx3f/S977x8
7dPthW3i0wGqNmN2bk5hEwTCC0uVBKCjpSWrL5kBFi3c+dlzmj/dxJruyGZ2
8Zx/41kYHe6UbvAk8V4ynjjYPSkXit02+JRWxaH0MlDcBsN24U13dg7394/g
WjEYeswvA85xDbjw5Oa+mmJ1G/UCtmbd+SstUkrmzhBwcQXMDiC3KU1N+K2W
i8Dv1s0dEDGgWivlCY/wv9DSxSxUdLmQKWXT1HNFzjdZK2WhtG9c3wn6A8Bv
mRfRKmSdOQ7UfplNCX6lLkxTIXhNS9mhtsykA2E8JRkNe0+Pw4HbbJtiwqW8
NN9Nc6Y6nUnlSATkc6VCq9PGQCzXqoFI2Aeei8e6EB7DDtdlRvVGdfdgL1/M
KUofdFyvV+CIw6FIKpUZDsELoLYJ5Ze0IcZhsQj1UAAG48lUOBbLF/P9fqdQ
LHh8/mwuD5XY67chkj1+X6lcXM4NCFqQcqNeDUaiR75AKlus1puJVCYQCkfj
8Xa7NZ1O8Jo+fxC48PiCXk8QvxpkA+KGxVUh0e1UPCLbO5nbCi0E57ZaLReq
bTHZGUPLAihGljqitlsMeChJKIFhN5aMZrIpaGnJ41Gvoz5NpVIevF8gHAqF
C/k8BLBtTsejfjFfPDn2+nyBWq3eg1But7rwoaMuBjNAis944g3Arvf73Wqt
ls+XTk98INkZAkq/m0xiDOQtfQr/i6iymBkcRaK6OpnPNLCbzYAFckHNnCHH
F0tHgG7uwBzjWbjl0nxP0kStZg1Oplqu4LOAgjkLN4TC0ZURbrXJsNXs+Pyx
dDYPIAO2owG+8AHAq0zGoHzsq5Oxhtfq9f3+xKeXD0LBbKnUKYOmKojrCBQA
qQ6SJfwS4SI8KnOiYBUQBpbndKtgR9DNqBSdNpL8uTR1wwpJTk+Vhu2h44ul
Wmdpw4nbdclzG4Hf5MHeKb66brvR6zSBXEAYW7tRQUT1eYPHR96TYw/4FydQ
h2QXP0fdgTBPd5KSsZSc8KwON1R3ODuNu81qkWV2hSR0EwRVBH67TZwJ+OY8
J6e7WzvZdBL7oNoyY5a0caUAO1wvU180bHUpl2qA2av5gM8HvIdCwTx1dBAF
A90QxkXOd+HpeV6BFmoZnCtrWuJuNhnOp+PSgkW5r1QcCPV5vNeube3v7caj
YWFkIeUUm+I0ky+09PGpt4IBVi5GEvFCtYwxgZ+2VCnH0yl/KJLOpsklKd12
pxaMhD3+QK1eHY56kShA5Ds4PsJtIAxVFk0mkyBZFayhjwHcRAojpViq1Brt
TjSeDITD0DqAajwOQKc63fZ4OqzWKz6/P56IW8YUI3/Qb9VqFX8wsnNwfHjq
8wWj4VjCFwhCDJSrFU1XYClh4lKpdCSS8J4Gt7f2AC6NGiR4AgL3Q0I5yxKO
cyn7mmMQ8WI+xbZcTGe2spirMObguJk5BQTm9nRpqRiKq7nR7ba8fl+9VgFq
uHRL6aZoNFaqVNvdbj5fCARCpWJxqozmkKPdTiyWODw6OTrxRqKJQCjqCwQQ
7mbGdDoeRuLxQCgyHA41fdpoNU9OgkdHvmajAbCAjnf2DjLZnKErUNGWOe12
20FfKJ/NUUbLkvHvZLAFvLalUE6b+JespRzkqvFE6suIrtVq+fTUH4um2q0m
NWmQMe8rYwhs8CzcjVqrtSLhdKlU6/fhCPpDouAB3G8POxMENHwt2mQMm4BA
YRq6NRyNAfThcNJswSMMERMAT/hTB60MVdrnu4Rl5uKFrWIH6HZyWZSdIwmB
79OSurbSb9YrwNqEYstg6q4WwvNERtTNhYPSVTJsK5NBLBo/2DuBUut3qSuy
gWjSapDKbWAk1g/2T2F9atUq9Tl3GgAvvB5LaMps9zs1ANNZJJPX2wEw+3h6
XRaQr8HkYqNKU526ueB8seEIHuq2a4V89vT4+OToqJAjwsXG5xcb1VKjXq7R
Ypj5erlQK+bqlUKlnKlVC97T0/39Q8R6GEVo5kbFUddSGqY/V5pz0lmFDG9Z
LhAz+Uo3JkAKHx0JBq5f3755cycaDiViDts6nBsPJ7hBS8rEoUii1aVqdyKb
jiQTIGKYoh65/UEoFgM7d7sNTZ9A6IYjkUKhqCijidLv9lqdXscfCGDQpjJQ
l2kY22IBYrLZateT6fThsefoxOcNhPyB8KnXf3xyWqvXMLKz2UzAH8jkspDT
g2EvFMSbRMfjAeQffp18oeDxhw5PfDsHJ4enfl8oduoPHp2c4LmmOTUwTmZm
p9sp5Mt+XwRyGu6YpwZ0aCYCW+8FEGoLeKlzgxLXNuEXt6Dg+VwBCxOXmdgU
i8SqsphpIJH10uh1m4cnx6FwCDiCUoW+BRDi8UQoEmu0WxjnkXAM4Qri2TZV
bToGHqGi9w9OfL7w0bH3+MQDFTo3NVUZQTOEolHgQtdV6JmbW0dHh75ms6ko
42KpuH90XK5UTGMK5sXZjQbxSLVSxstiqAuFcaVmwjw7EQoj8U9THsaS2eaP
QCjGR8DVIggghpx4QolUrtVq4RoG/U6pVMpm840mmKrrOYnt7/g7reFgOIS9
GZDsH1artXQ622q1x+OhDrE+HDAvA0eDVCofiaWC4fipJ4gX0aYkmDlzNXJl
M5EvYdlwwLu01dVcx0EyxQxhXbraWM/g4iH72626z+ePICqWy+qELLMkoqfj
QS6TheGq16sqpdcoU4rIg+/86NhTrVQatRpCU7sBJdwa9WDqJ4lYClGxWCy1
mnWKCZ0GHL3gV6G5k45yHrvznni1zFqvWQdIiWFZKgtgOWdV4pUByi3mXwSK
TCq1v7MHXwWpDLTWayVsIOJ0KhmPRgt5IuJSMVOlP+9SqlZytWrx8ODo+NgT
DYdzmRSeVQVZ898HL1OlKVsrZgtkn9NgZ2cGBC/Cg3N4ZnGS9TPkdAqk9aeP
LntPvcVsJgvaZeZNJ6OJeCgeDcajoUQ0mOH8czqT6w17UC1QDPFMOppMpPK5
fLmcKuR9wSD4dzzpjdVRJpvx+XyNRs2wplP4XFtVtEkY/jQYGox640m/3YH1
aA5Bo+N+Mp05OPJAQGbz+VgyGY5GvX5/q9OYLczhqA+/jGdBeEcjMb8/mEgk
m61GNpcNhyNefwjyOBZLgdGOPX6PP1iu1GAeB4MesdpoUC6XwXpwJdFIvNVq
TCTrNWlRw6Q1JpMrXhgMi7smKIwZeQbaneJ2PiPJKlUbUqecPprZdHC1NIHf
3d19hBod6DAUoBj8FYlEb27tHJ148EV5vf6TUw/wu1rYq4U5tw3ErmAwVirC
WCH4t00N+nYMgw9IR2Kx6QTjdlqv1zDMfL5Qv9exDB0MDv6FqIaWBgMWMA4y
+EKiGJxQ5qzwJ475dTT8WCQ9Trcp5jiRR3Ycp6yOQZ3hKPSA3xeIxhPp4XDU
6fZPvWF/MJnO1l995ZcP/Ptz33ng0ieXd7r4iUajyZCotlAonR4HU8l8s9Ec
jUb1OgIV3MSkWCh7ffDvqVg87fGG8QWUylV8FlwJFDusLiWyXBaWbSF3mY4F
1wJhS65cTIGpdNrNU2/g+tb+sTeIz65Px8qoi5gAT3J46P3k0238vuzH29R7
MOiEglFQAEJcOpUJh6LZTL6QLXRboNchvlKPJ1ApV5r1WqdV73eb/R42GJk6
9wq2B72GO8uJZiPKJGJeNJ6yYcApaLRZLwOVuOUlqcuSfG7Vq7VKJRqKbl3f
TsZiLeC6WW0DpYXc/sHR1Wtb169t+32+XCYJzMIa4xUaNYjWIsgX4x6/aCGf
lspRtZCDwKY0FwRWJpkG9OHEgkH8T7OJCylhZ7kFSAHqRCR8cnhy89pWKg50
p8TzppLRJACbAMcSBdMO03Fv0B1PByNlMNFG9XYDbwzze+j1nfj8AF2xUlIN
pTts+4M+qGJ7ps0Wmj1TcTvVRl6vD+GmUitqsJP2FJtmTAaTQTgaOzg8jSVT
hqlS9X/U73RbynSgQxNa2ngyKhYKwMLR0Qnwm81nIZtTySSQAh0OeUxivVqL
Aqc+f7/X0zSlVi+HIiG/P3B64j2BXo3EavUKRqiiOBUrSjizeOY81Zi3kShq
csSQ0zOFpxpNbR7zlBQyHY8J/pUWyk6renh4iE+kTOCpp9gMTQGT7u4fwIZH
onHoiVOPt9vtUvJnMOh2uolkOhyODftdQG9m65oC69/x+/3XtrYSqaSJL2kK
9Qh3AF7rISYAs9VKdWt7t1atLBcWNCH8RBg/RSINX4xL4nZomlrIUnksLdYz
a+rON3RqyhJzOOGAKKQYUL7jIV7k5JRSfL4g/HQiFE6eeGInvtSPfvTBP/zt
t+/6wve+9MXvPvrIa6lkaTwCasaE02Lt9DR86olmMuVOpw91HY2k6rVmNlv0
+aP9wdgwrGajvbvn2dn3NuotOPQp94jCxkoii5UzpbAYvNhYP7OExglzzm5h
x6SQiLg0VpVxIpnZ3j+9vn0QTaQo9T3uw6qMR4PDYx/eKAQFkUwN+m0Mqn6/
jRESi8Xhd+uVWhRi4DTg9QQRM8PheCAYheRoNNoYLUOeSdHrNoDffq895lT8
cNAa9nGXzK/oZ+mdBlTxcg0wLwOTwNvAXbolam5UaWJxpeLz+HZu7ACznXa9
2cCjtWAgdOPm3jGEpTe4t3cUCgZrlTIYuVoulEsFSLWd3QOq4+cypXymmElW
wNGFbKWUB2y9Xu/R0dHBwdGVT69fvXoD8E9DKuepWYvWuOPmDbBztZhPRaN7
23temPpMplrMFTIJ8G+a8SsbwJuCio7RBuT2x10w7EQdjgE1eMwBTd5utBog
ZYB0Mh12+xAuNd2YrFYmwKtjIBlj7MAhAZuDUWe1NmdzbTTuRhPwxX4EKJhW
DHHbBlr7U3WkwgFR4mJoGIqKwTbpg3NLpSK4zDJVOEHbUFVlUioU280mdiAr
y+WKx+uvVismXNOwk89ni8VCpVrpdFqjUR/vNVF6mgtehu1INtOgLDTXoB1H
THMicGsDYqqkc2nfmloW6WfnIGOn1ao1G1Uwr2WoGFqAKpCLT1SvI7CDFrqd
TrvX6+Zy+WAw4vOGd3cPy6XS3NaFB0E0C0sDazebNRhPfDQEAXy0maVh44YN
o1ou+bwe0BCeBd4sl8o3txA1PJpKelil3gxngqEAWWrEnH9GwAFmp9L4gW1m
KdT8qZNUGDP/BkKJVrtfLFdBnV4/9Ezi3d98+s93Pfblf3jmK3e98PW7L33p
i49eu3KkTRFTlPFoks2UfP64z5/Als1Vk4nC6Umo3ugUSlWPL1KttXRdr9Wa
R0eBT68fxhMZ4FfWwmLkTiTzDNlMclrIVypKXE6y9YmcRu0x2kihuhL5cfiI
QCR+A6LGG2y3WlDmwLUyGe/tn0ZjIJByKBiB8jdNrdmoHx6eJBPJYa87hG9v
d4r5UjyWPj727+6d3Nw+3Nk7OvUEPKf+dDIJCu6260DuCAO21+TMZBdxYETL
5bVHvLAt15Lo70T0IcQbhF+AF8TaaUEwExG3GyStJ+DsSnV/7+D0+ITWzYPt
bVCZ+eDgZP/IU6pUM5n83sHJ5cvXr1y5sbd7cLB/cOrx7e8fX70KXg4Wcrli
PlOr5IHiHHVdJk5PYaOPPB7v3u7Rp5e3Pvn4xtaNPXjLbCJW4r4OgJSWCMik
MvFYLBg6PjwJ+gOFTLqcy4DHc+l4PpNIJyKAfCIeTqdiYOF0MgYinmqDsdJT
gDNlaFmajlCJUWdrMJtTwA0khaE+15Yrc7kyDHMsIx/DzLany7UF5F7cWtiz
6WKpg5QH4w4u+sRzCniaFhzrBFGUNprgMJrIRDaYHWoxAug0ECLGoToF0mGG
BulEslHFyMeg1aFCEWdzudzMNkFbYDEiGmgwC7xBE6am1J5ELZoCT9HJG861
aNjgKVROwvHlQlvOjRmN+alt0fjHrew4+ybdFdkMHzrsd6Dn/eTfQ5VqzTKM
xcy2EFa0MceTXjaXS6Wy+RyloZyKD1U/qf1yPccFE3LnM20+UznJTE3OIGjg
t9tGIC/jUXwDuIXqRjwHiY9HfVyw9GYIZp08M8EWT9csnSQBrg0bvLlNvZf0
LrhgfD9Qv75AGBAzNGOqTFudTqfb6/Ynb7z52y/9/aNf+9ILX/vSpX/98itf
/JtH3n//uqYa+ESapqeShVA4XSg2wpFMIJiCYTr1hGv1drOFwJUIhuLw/d3O
EBi/dvMoGktpU4psoHvbmEoheJO8Eju8tDXZmbEpXs00MC9rhjECFPQMfkdd
U7O54v6xb//IBw6tVCCl+pVK9dr1vWQygw8CwEKetdudVDJ9cgyZmlOhL8Az
wz6A3Gq0oBCSqdzBkQ8hwO8nFe33+bvt5oRpd0LzMrpjniE15v1hv81CusHp
rDqVj1t1MC8sc4OlL+0D1L12uwUpXqtXy1Awe3sHqUSyXYdTLrcbVZDvlavb
23vHyTSuKO8PRD784+UrV7dOjz37uwc72wc3ru9fu7YDmEbCkXg0Usxnweml
Yh7eaXd3NxQKxeNxny+4vXVw9co2ULyzvZ+MxSv5LOi5QHWoTA7MGgofkfk8
hcZOJxOlLHicIZyKZ7h+BOSCdlO8g1vTHFMLljrSMQxmxnxumBjMIFljhOP2
XJ0vdGxLZtgZjXbcTin/OdfmwOxcxcl4Cs5ZLA3canCdtrJY6AC+CZvG0DC5
TVEm00kGlfEyNSTLCpaxpojt+Wy2kMtDnQIosLeRCLxwzDSAAuO27jUmhFxq
aaBevpkLRpbHE3kjJiwa/ESypJMRdpQ7zSNeRwIRo3gqBEdAo8QRFK8CmigW
8tADoADIYpHTOE4kaBEYiYNMHS5Ynm6ykqQ2Bn28nGlLfHy8EVd85JavH3JX
Wc7M5cKQawYAMZ4Nyv1iVE/k+6F+TookE74q+loAGZupHJTNsMVPgB1wOgUE
3J3bZqvVOfWEypWaqemmptkGrm2m6+Zbb7531989+tW7XvjKly599e4Xv/i3
j3366elydWsIxTpSorE8kNsfjhvtHnYODgOHh55mo4UIAJbx+EKBULxSbWby
5e3d41gsZagKfw/4VtWZOV3P9dVcZ/5VFxgV2phSWJwPXFCEwdc4qNfKlWqp
Xq9hq8E2VCrFYjkYSuwdeA4OvSengZNTPwh0d//wxOOvNxrwETiT6/GRUDDu
OQ3ksgWE9MkYdrirq9MxMTEkUCEQiOClum0grIaNGlG4kQYUDE0O5IJ8sU1G
vT5L60HHWZZn2G2O+x2oZbhXoLXVqNZrRWAZZ9JKWZViLBI9ODj2evzVYqlZ
gaiuDtqtRCxx+crW5avb12/s3djav3Jt55NPb0AVt5t1WKl4JL6zfXR66js+
PgXVbm/vHOzv1avQkzW/37ezsxONRnO5bDyROD3xbd3cv3Z19/KnN7a3dg92
94/2Dw9A4jvYOd7bPbxxfRvhKxqJxiIxQBgsXITtT5E7pj/xECf8Uhaa9sOa
PmSeBZQUHQN+rgF3bFQV8CnuAp5seHXbFhKhbcEHwcjzhWbNpoA5MIuNkL4C
chWD2FDjmTUT8W6CPmJAhwQJO9w9OFxSZKAjhWw2nUhPRiBNfTweRaMxwq+p
0cjndBOD3ZlkIYxJwcTFKfhLUEPZHkYrX7Aqt3yX3n3OYo/aOfQRa2nVeVm6
S0B2SRDBSgd2gGjqmCLETR2dzIlfbPDOJBH5ayGcauOFo2xBlOSv+Rugi+FE
sVw/2VjHeiMG2hqTqSIiU4KPW+ElMUAinMBLGJdLAnINVviAEoNXn8+sUrEK
wdzt9kBV0zG0K46DiJV33/njF/7HA1/+h2f/+a5Ld/3ds1+7+7m33/5kdz96
dBI/OY0fHUeSmRK0l6JOG60OJSQC4eGgv7CJn6vVBjT5iSewe3hy7PU3Gg0R
ABJP1gsDGz7v0v1KwcWrmU78a8NEDJUJsNiqVcuVcjEei3u8XohM6OH9veOD
A5jYeL6AIFEFVMPhaCyRbLXb5DLA0ZrSbjcBn+2to4P9UyCUp0p1RwxG4LTT
amYyuXg8Cfc5gMrowvx2cNvvtqWvTFA8ogaz9lBue+0Rr17LEG71Ow1AFciF
ty3kM7RSVq0IkgULp1Kp42MvxDAA22nUIZyblTLwWywUgdxrN3avXd/59Nr2
nz+5dnziKRVzVFNu1E+PTvf3j4BQfFhwbjgUgEsqFTKg4FQqAUTv7e0Fg6Fs
Jnd8RCp6Z/sQYvvK1Zs7W3t7u3sHu4Dw0fbNvY8/vnr58rWbN3eu39ja2tr1
ejzJeCzLEyLAv7lULJOKUS4rAYoPgq5F4uKWcOqgdYojwqoinrHpJiFaeIEG
G2erTIvUNTBL5yw0evpctWYqXg0P0dhm3UgFGihJHtgOqBlZVP1krM1mBI3l
wmzUarEIjEC51WjU641AIJzJZE0LXMb1FGmr4GYAFpYSEKYOqzJYTGMsUHL6
H5jL5B3pIZbrM0bibX40FUYoG0kqtk7FDi/nOi7bYikrL0LIgmLkko2EIHlB
fBC8KV2MNV0tDI5v9DEpanHSTK5tzkZbYoszbdByEshuwKFKkFstojZpy5wK
9Vskm0kzL0iKIKSMxVyDgpdzCzyXTuUjkSQAC4k7Hg6U0VBVxnPLikWzD3/7
5X/6wmP/+IUn//b/fuTv/8dDjz7y5rPP//Lp537x819+enCUaLRGFujcUDVd
7Q/6o9EAkXwxM89Wcyiffq+XLxZjyWShWLToh6BkBSl2e3q2skC+M6cQrHL9
SOMaE9WuDg6O8FIIIcuFRVc4HrVbzWaDVqzqtjvdbldT8aHw9aq6BjuGYUDq
Ap/OQmjSJoBwq9mA/sqms1Ag6mRoaZA3qqniZ512Wq1QiFOdnRZnJVo0E7/T
xr5MTAbMqSenTx19g15r3GvD0mIbAcW9Nv1ds06j26mDc5utWigYAgkCyzC5
nXbj9MTz6ac39vcPa2WQe6taLvq9nkQsDm1/9do2REKhWEimk5lsqsrLYEJd
lwq5nZu7AV+w28FnrIDB27T0JVRBiXosK4VMNn14eHT9+s3dnYOtm3unJ34E
satXbkTD0UqpWARvZdKZbCYcimxvHyDE+X2Bw4PDnR3o7l3P6WkiBrdL/RuE
YuwQhGOUyEpGDcKgwgJYMxmVQrg4aBNCiVXp7mzqeGHgmncoFw36II5WsTFr
j5h5J4x0QcoUKHCSLe6otlzCEs6FADa4UQGPIopm05mQP+Tz4PpPDw5OIHFm
tuBo4kz308aGo8adTgbhuA2hi5oVrIHgHDnK1VIHfXx5zHdj8shE7gr7a0HK
BOqXJO6McCpXvoGqJH7l4oXZxeTaLu/LB7ekxMyJMpeO2W4Lrjk95ThxDmJQ
IHJJEmdc26tKJs3k/J7oZ4AaGx/H+Uy+ttHvd1OpHEylOsWLA924nZoarkq3
rdnutu/+ey89/MAPXn7+neef/vHxcSyTb//2/a1nnv3ZD1//vc9f6A3w880X
89lqPbcgBvCJ5lD4xmphAci2ja/C5H06OAfD4mfFVzTTOPNMaasFwXYCIgac
AfxyufrLX/wWOpzd+sQRMxbBE/ZhYRv0svDRsAYsKiQoiZ1XlaGNi1fxs2pk
nKc0OQIvznXn6dnCxjW2G41QCAazIF0oPcJvs9dtw8BORpx5BuGyeObVBuiP
Ho55B8iV9i3+M4iNZr3c67UD/tCNa7sw3fDWEAypZCLgC2RTabA56LhZr0bC
0d2d/atXtq5e20pn0qDsVrPSrFM3dYvbOSql/P7O3tXLVyEfCbOVAnV3VIqS
H6PSUrVYLOWDweCN61vXrt3EwL55Y2frxlYuk8GZwHghl8rnsxAiuzt70ECV
cqlEHZHUALa9veX3efLZNNCKLZOOp1NRmrxAWI6R+p1NGYPkZxm5U1czk5a2
+SETGAE2mVgNc8yUPeYnEorxIsCswc7XsqbC1BBRBF5mXuzcHurMyMJZ9NBC
pyIs0zFQYxpqp9MqwfcXS7VGbUpprin3LY8dCtYdy2wxWsXeSpOS2FjmZaq/
6GSrlU0LBN7OEcybg5oglxJWtM/4dQTD3Ak1QtDyOkLcglwRzwu2ugvODOB8
fMwNa0vmyo1dJDzog8/19ZLML3Yw/jEg+bnTzZcgbprlATEdeNZ0claaZK64
x0MRF4xhv5gbAHir1YpGU/CZ2hTfBq7cNHWcr6sK3LoxHGmvvvTOR3/Ysc2z
+Wx5fn6hgfxUM56ovPPOlWeefvvNN/5w5dOTZKoyneqLxWy5nC2W1mJunq3n
66W9Wtpny5mQ43pl4Teiz8ieV/onl/I9OF5Y//zWWTZTfOrxVwr5ynJpMSoV
+m7BsIhCEBWqMgPzgsR1vIguHsEmIwDNrnBigdLsQvQSq2fU+jU2CMuUrKtX
K55TT6VUHvVJTg8YrUOmWuFfGGH2y8S/vLoIYRkQHvc6I1pqryNcDM7Fo+l0
ZnvrMOAP96mnBWqcqBwxoddtDrjdulmv+X3+3b3DRDIBjINbm9S9WWtx7wcQ
WisXUrCjoQAEM3V6cFG4VCTxDKTjbiGfrlULjVo5Ho0E/P7Tk1Ofxxfy+SlD
VciC4gH2Qi4D5G5t7YSCwVw2VaJZxql0InFydBzw+3KZdDYVR3zIZpyGalmA
GuqXlbMqmOVNYResyF2iYM5okcllOgZdQk7jBNhkUdrgXBheKQEToTOV0G8t
43lOP66McwIyJ46cWx7zgAkGAM7HtpjpZ6vZbG4uV9bZmY3RYrMQpbSSTIpX
R8zCI3GLQqxCW26dZbQxy5LvYmgLYEmdihG2OY/qEhlUnABZgQDGpQpp0mmW
4kJ4arv1Jgo+EoUYxaulwZQNbJocslQ30ed6ZEtxHMRMdWOXyvFKF3SLMmHu
Fjs8ZZxON+TL5lfj8axINYqTV+SFoUKbzdbRoadWrlsG4KABwsAuEfEUV24M
RtrLL/7sow9vXFz8BfA0TE3TpoDKarlSVTseq/zxD3uv/+B3L156591fX45E
soqig4xNC0SMz2Ksl7Ml7hHE8HGmC1tfL8wV4MzVogV/D25aQwNNf/7ZRTZX
efy7LwHFn906oyAD4ibuxlMI4DDHpgpIqmBS3JIkNkj8iLqA1TU5cOmqBNiJ
zh0gOI1mR46pCAVh3KrXh33wbA/+l3wu06vc0sZVJFHRlIvmbcjIVXi6pUaz
pAcTou5qo1E7PvWdnvob9apCiS1KQcMd97tNgJ3EdreFiAE9jINtyndVuPGD
asfAJrAMIQ3YEtXWyzhCx2slHGlwcwiQXi5m6S6ouUTLc1VKBdmqoKl8jti2
kCvk0vF47Pq1GwGvr5DLcgU5lcuk4H9xk8+kc3fMYwKWoaIhqgFD5lASzIzZ
qaDVPa6JybUdV6swVBUBMkN7YtvOQ84TQegsm1crc0b0SkIUyJWxzUSscDZJ
sV1rLAaWWU93GE0U7G2nqbiZH7cxSR0IYOUcR6+aTpO/sJiEbmm+ZWWruHWZ
iQBBAzQsTfCLMYaxJ5ja4FcuWC6PYMWvsNHPcyIdDE59vYK8NIFi7OM0fAru
znKUBj77gk2EhDLhcYldK+JijSUKvgeAccrJKIQszREGvCP0ZDHzmm4W2gWv
OpsZ9XrdcxrOpPPr5WI1n89tk5SzAVMLEteUqfHG6+/++p0/qRoRs5NLNzXD
JLY9Pz87X98aD3S/L/POLz9+4fmf/eynf/T5UsORattQ1UTErE8UZl5jbkA2
ayuSwcAjSYgZfTPEnjzBUL04Pw9Hsg8/9Hw2UwKWV3MLJE4ueGYCsEvbsAi/
E3kRWNo5JdLpFWb8W7iwVQTFvI+DY1UZ0eRoZSiP4sh0MlQmQ5kLSWt5cc5K
ks8EXprdTAsUANT9XouhTaUlmSWNDTsGbDmk9agfDEcPD04AUpwPzQz8dgm/
LWqFICwDwk06yA/JjqBVCseE6BrpZIIzHDHMb6MihrrB+tnpl64W69USsAwI
g3BrFZxfzmfBsxkAtpgHZnP7+/u72zswvBDMhWwatJsn5k3hHOm6lE7pPAx4
KpZNx8G/d+apRE4zkwKMiMCspV1ilWQX43QqKa/ZTLcsTQDuwHlGzCKUJLJK
tDGngEhUc6JYEZ25EZZUf7FoVJ+trdXSlAEvelVgaDgwHDmtU+5mW05dyYEq
q1DJX9lSPNqws75xu1QBMQxAmEcy8GsRiJyrtafSFE1cw4Jhg0SB7RJAI4NA
dAOvxxvpBJKaC3uJITo3hXRWpEINfK6F82HZ8pNmlm8G6hchDt8P7tImhSEm
XK5VabdH8pxfkB2oPnOHupPIgn5uNpPJnN8XadRbqgITrOiaqip4BV1XNVUz
3v3N5UsvvK0bM0Nn12mQG7VpooKyYGE8syF+1tOpFY0U3n//xnPff/utN9/f
3Qu1O+PFfHl+tr44W9y6gEWW/JIyJz2vzUkDsBIQeqXCN0TI+uQk/uD9z+Zz
1fPz9WpuL/H6fDL414aQINmsYR/4lQ2OeC6igj8dQoHYBM51KNzDRt+Gpo6x
T6Xk6ZhXORgq4wGOTNy1RLj4C44eEEJHBGR1Ohb9LHAmCPc3qxzQWiVUaaLF
i9I3rm9nUiniXOZxiGei4B79QbQWzVqqCnKbDWq53GBZCsddancChIlzSTDX
aC4S1adcUhYjDPAC4BXqtywS+ZaL9EeOiwWQb6mQF8ObTMQ9JyehgB9wzhML
54HcbIomHUM55+5YgDpHR5JSBiIIc+ZZACs1XykeiS9ecC2JUEzJK0W6KBnF
Cmc82C+zxp7PIaIwdEFnxkY54y5IShT1SkQmF00Emwu3z4FVtCnQdjorpFy7
Ub+aU/FxSFnmxm5A6tSAJjbjWlJVEhkszlYJFjieT8ha8qjgW4UyvVQVmgrP
MqA2iKanc63HqQ2xACatuCSexZm4ZhM6k/Izc0uoHEfgHHFwxsFBkmCskClE
MGqog5qbOjixM6cc0cwlXBe5JKEFuThhyXin+ECcqIkR5hYvYzgcZrNFvy8c
j6XS6WyhUCzDHg4R8XTTnv3+w2vPPvPmYKCAcOGKoa43LWF4Neofw6uBskHc
tr1anVWr3Q//sPXyS++88vKvPv74IJOp93qT+Xxxcb7mXhrFkQckBgwXdDqL
f+Ozi88Oj8L33/d0qdg4P1tRtoqhCqrFhp2zhY2NdyzQ8/lyhh2h5jmJEDL+
3GtNv46ujTWqyE/d30uktQNk5mUiZWUCII81ZaROhkClrow0mgTNSOclTWi9
IMYvIA+k04olA+rxINYe9WvVyv7efjgEC9yS1TXBvIAwwEs4JYQKWkkzM5D5
LmMWB6nlAzuSraKGrgr3ZFZbTn9mRcSzUDD1S1eLLv9WKiVCcblYwFbMZcG2
2AG6gV/cBf/msmlwNK3VQ+v20BI9sMyFPKQ1TYUgtC51IV+RzVISWq7MjTXG
CXPOZTE7qxtcz7i74867UimG+gV4HcCynbw4m52fzXD3fG2fn9kgIMnocmZj
IjCH5qSShBD33BnzYpOlwiLC200IK7IJZiW/ZLtIZ9/KVSp6uiYajDfFvb09
EkiksS7FxUjxaONtRR5IPmojejmZjBN0iUKSlRWLJyheMpwdCiZICkkRT802
otol0wWldvlkhqdgee4+OnfRPRfYujv0shQHmDopkQXiw5BXu+1eBW6sUq3V
6s1mk/4gkY5fZ/7xJzuXnv9Jtzta4ofRVAse2YYzUvE6ANjZagbxoBtT+GIN
qDGmy+X87Oys3R7sbPt++Np7Tz39k0svvvPhH7cj0XynM1jOF+fnK6r1sIwX
3rTYg+Czf37r893dwGOPvTwc6p+drc4YmEArKHu9sIBWYPZiNfs/kLvGh5pb
VNrWJky+Gl0njLzmBNsNYEWWMLeOVEauPIp9kdn6dGzgNIAXEKaG7QFjtifp
aK4u9f9babjfplmWg96wSxmwAYttyX0JhOm21xKepVsuHFP+CghtuhsJZgIy
wE4PNaucvGIJzdJa2kU4L00JZ7bMRWqfLhQYwtDVIOI8YFvIZegWgpmRCwuM
HRwpF2jRgGIhgy2fTWXTwG9GMs8zDFcW0tKzIfhdEGwN6aoyOREtPCtHhJcF
4/TEuUo9WszLyyUGmHG2BvuYjEfjgsG7XhrAr5Ptca2ubELZ4pGBPqFj8qEz
jSeq0+IAkq+eu6keKegIZt0sk9SAVB4JtKgyIGmBWSBHNUV6HujX12mIGpSz
mtyRdiZBSFxGxK2xmqU8Mwt+at0karCkooTYYrLm1F0M4hNZG4qUiieZvrkl
QJu7stC1uoZUTBaMRHrK5rmAMKFAajeGvPLMBa8L6g32DXHuC34USITzndG7
2POZBRtsWZaqIhovr1w9ePapt8rl1gKCXqe6kqaDT+lS16QirLP1fIEvzTJt
0CuzKl7w1sXq1sXFeGIkkpVPLh+/+eYHL1z6+Usv/+KTT/YKxfpsBowv10uL
kwAGW3IqDAG/N296n3rih8rE+uz87NZ6IVS7csIaqeUlMzIRLrtg2SeMWxt3
AAjTddKVTrlAzxkth3MZrZp7yzu4JWjTPh8RChaFLLksTlBLB0hH/nKEk6zm
pTiVUV+lP9BG7f8jbpzeFKFERcMFd7nrgxcKqIrAFsDSxIcmtYKIogZa260a
bYTrqmCWGzXLNZbQAC8Aiw34BYrLxTw2VtG5Cme0oKVZPzvgBZZLuWylkANs
Qbs5Xg8TMAdZC1otJtDVGpg1VmtLGHnTmMHNz/QQ9jcPuZUmylYB2gD7+twG
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
GIt4rPSbd6++/PKvPv7zQb8zRRC6ODtbzmZSySLBbOhu/wngTLBlq6vJvEg5
QUiZSsOckYautviEDYqxM52Op4zfCbVz0PJZikJcrHIWi/5YJPdeCilr3Ect
2Srp19qkozeraTlregx4cVrq8WjxzIjeEP8kI81VpB6VkGrcqdUUFLcgnuuV
Vh2grgs8N1KZoMoku9HPAmRa9JLPFNUtJzBBl2Syg7RsYQNmP/ucwHtOnDtn
Ol5cXFDAX62JVRfEvAzeNTtfAjIdpEdZgxHzYkStweALbOfny4uL5QrCGODl
1NbKtca4C8wycue4vUVi2wR+OVwIWgnOTjKNNzbgpNWx4b0YdA7nitadMe4I
mwtrQ7Xkcy3H8wLCJJKZWIVV5Xwc2eSvNrd0mry+7DO0V/8/We/97dS1ZQ32
GP1D1/dVjxo1qit+r8KLrld22X6AMSbaBowx2IABg8nGkWAMGBwwwYDJ3MBN
kq5yzjlnHWXdSLL9XlV1/9T/SM+11tG5t0ZfH4sj6SRJe+4551pr77O4NrIf
a8r2C541uGX75Y4ildXgajol5KJCmHCXEdzRZrkU+JptYIZDQ7EFHmdhQBoA
X28pSx2jqpzhc9NSsSzmkQ8upKktxKoCakhoACQYSGxYv+v0mcv5QrFSAmRA
rvhpssViHjwO8Qxqz+czYpnlIJoq7oNa9cJiUdlop4SgGbxZouNCvloqdtqt
O/fGVry82eMKteC9cXqOiaGLKFdKlUqlkK/cujn29tajb285evPGeCGHl4oc
agM2BbZqzEpWUn3yZQjHJG7GTM1JJX7ax3iE36Vauwj4F8xLLOwPR/xBgDeC
FZ94YShqEdKaqOYYl8bLbk1pk/aWqi2fk+pA+EZ1khSmAchet8frIgi7uXba
QxPlUfJIAtFUKU2z1FpteAQ7k4oGihm8RiuxrVEUsklNJ032g1qT2FI2MzHt
CimDeWmuab1OAtRGvQ7kW1XyMLyALVDM1lUEbUZFDSBcVDHLS1r0M8Ws8oBk
VmCLlVIZu4O1c1jwCjniguA3RYPxmYWpcygRKZcZxeKyi4xf2oAf+1jmK2Eq
p9BZjpiIQNrP7Ai+OBRDQBZgSgBKok8qk/aRLvgV2BLPZhKS/JUNNDqmDdIL
uM5rudSM7L4wDqhfaMGIk96gX+YhClOMJBo81Utn1HrIghrTJg9LldI5qj0m
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
LSDimES6IuF4OBQNMn4D4N8w34VcUIxFIBwAH+OlICDtC6p/LLDxfjDgcnvv
3HvwzbffX71298rV29dv3B3DN+t0NSkC3ASKZcFTsbSAc6vXbhL5Uv0VlTNR
dhgOV7Zvd/FrTk/jK3389Kfe9Hyp1g6EMzqD7/Zd09Vr4xevjHx/bfzugOXe
gNVkC4fjxXwZxN1Dz86wlfHjEpvlkiIgiHlTAmVkhznFIzhS5XGDY7Ys2lnM
K3K1bMYVqRbGESSqw6FvYmE1msToXhxiokBWrbrYEWuY1SooNP0MUEtAW3PZ
2sYCbXbxNS1Oxd0aGw2VTOn7VNBU+SNQr8IGhCvAiXMZIuojZYHxFbVISAAp
+NhgkGQmH0lkEskClNrwsHFgQD86ajFMOsHLNmfQZPUaTC78nng0Wj1WZ8Dt
j7k8sQejFrc3ipN1YGw6vSc//sfwkGP50m0uV3ru4WOIbBAg4NqUZFJfGPf6
f/JKi1FKwS5+scPUzMq3LbEvIVYQc2+q2+3Ri/XG7BtvHPzuu4HpuZ/cvghk
vMni9YWSkUQOjWRkzD6ud6J7QeOBWZ6BFX/8GP3Jw0dPZuef1ttztcZMsdxO
JCtud1yn8wwO2QYGbdevj3/99Z2zZ64f/+zS4UPn399zaue7x7a/88n2dz7d
/s5nO7cf37Pz1O4dJ9/ddnzVir2rXn5/zcr3V6/cu3rVnlWr9qxZ8/7Klbtf
eWXnqlW7Xn5525Ilby19ccvaVbvf2vzBzl0n9x348tNj1zdt/OyX/+vNf/7r
zX/9Z+v/4n9f8zf/c90v/q+VFy/cSybLwVA6Es1G4/lEGkSvTk+TSKUh1MMR
us0SlHk4TKOa+HZp5HZBuHT3NJ49LwoIJ6LhGCAcAgtH4mF/yA++xtMAsTAN
U6LxDvDDQDFXifj7vliG9k/oDTrD5K07927fHYD5NVlsZovd6SZqRisCHIBc
0cMs7QCiaqvXbHQaxHTdenuqOf9k7sf/+OmnP/2E77zRnMoXGiaT/9q1sc9P
Xj+w7+yuHcfWrtm7ZOm2Z/51w0vL3l2xfCeWl1/a/tLSd15ZvnPtmn0bNh79
7Pg13WSgUO5Mzz5Ec1AjycKnUgBcF/wqQqnEmKyZVV3aDwpR5BYKAWjiKxdL
XiUuBgJrVbLtdVk4GlZVg+T12mKEMuIYufWqRrhSuyhn/G9AZmXeX1gD0GAf
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
B2DMFQ2GKa3MIYHMcwyqdgQoUq8dv+wxc4Lucln/SZQd40V3dWkuiNVStXnG
4+HHPEaMIi88ucirNc+OWhjBNAzROUCeV5FNE2uiv1U9IpajVve8Rq3eqteb
jUajXm80hFA5r9ZowqD6NTWrfr0elirNbK46PVuczlR/ODTz8qtfvHjg0wMv
ffrc8x/94aFX7rn3hTv2PnnTzX+46qpbr7jylgsu2Lb2vM3rrtm9cf2dO2/Z
f9+9z7/5xhfHjuZv+d0Tmzc8kJn3y9VApLnZjoOw2/KjVjuUISZfruRFXgUf
IFbyZMgtlzU5LCbcbEx5VcByEZqryluRr+xpR16t1vI7Wzbu3X3rg5VqW3nX
31KJPALSEuWbLhoDoO6jRwX5tAplGr1hOFOUVOeazS84hJnRMggjc4V5KWqV
sWXQiq9zPWbmMyJRxyfzu/c89ptfXyXx+6uvfXTo6PHRyenjk7OffPHtp198
PSF6O5/hVGWhWGJerKA4NT41IRTLj2Kb9WbSuurHODV4VI5MjJtwWCVYbw4y
hHS0MDt8fEhYPjp8jHnpwygZI/F1dEhvqXYMPx7RScR6Y6YjNNuKsPlRs9LC
r/x4EFpM/T2MbPV3gq9Itk6LOlQyDll4VJHNg69K0xPDTLkkbvJjASDrfl2N
tFBcrpeUYgl9BN66OvCSgOzx0fArSkQXLTtew1M2vZLXqs0XdV7irp0P7rx1
/8x8qdbwkC4t8Gp3ukkN1eHF/kg5ZpqXkWxaXkH94OWE1wkxjbez1o5iezxr
/Tn9tsbIuUIO7UkGW1czpZeGFhc55mCkymkALxe8YisXuY4z8CGVWrMWBH67
3RZIa826xI6twPejsB2EQSS+NJZf+vRMYWQ8c2xk5ujQlGx/+Wb4ww+/f+ml
Dx5++JU9tz2ybdu+jRv3rF+/56prdl5+xS2XXHzTRRdsv3DtTWu0P/CGSy65
+bp1u2/e8eADv3/pkcdef/bF915785Nvvx+bniln5mXUCJqtOOksxcnJ23c/
uWnD3WUv9hoSt3qioFrr9arCo8T8c9ms7sv/8lTN03IwdzxxYFpHZrFYdnTj
QTEGVn/lsS7jUCvZcP3ufXsfa7UTWmUOgMUSNdckrLjDwVDDZhMaazhs0Vbb
LC/XpmhOr6D+opBkVv7husDZ7KyNhUWvuRob1oIojY7PH3j5w0su3n7uWdff
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
rYoLqaQRsci3CpPqHa21bDoyB+3j49PDx6e9ZrPWEMHOZzL5666+9fd/eKng
CdviLVsP3PfcP//TxbftejhXrIl/Zr5a3xaoMiguoalpMDLUXLqsws8iv87H
2pGk5FLT6foytFgD2xJa64uDnLPLM5fx1MDfpgx8kbLIYkrZyiLqStr84PK0
VXQeUj0dztRfp01eWqytQXVvaKJOm0SqQP05TIkPVzW30Ln4t2THgXwxr0NH
Pdy79/Hrrr01X2yK/srnMfJVKvHRJSPu1bIF02S3LLYUYn4ERwmTi+aYVi41
dRpEb+sN+3bc8vtaI6SUV5jErg6EmMkreRahrkTy7BYtWptBZ15mLo5/kRL7
OkrFWqOdKzTfeuur9dfuuej8TY88fODY0UldrK1QnMkqm/TV4rTZQc2uacrx
gu20ZL6aXdNzoJiranPuod7YFcvO6yREnVw8Axc9y9wXgZUN05o0Xp4Ay6Yo
PD7GZ8e1XjyuuWgNh/k44jZFdXT4iETEAvXxkaOizpqvNs+K1A5h8UxMVByF
ix46dvq+bLV23YPyVqyFVhcNbMs2kVW0JWDtohTA8axmuoC51xbqy9Wmqp7X
8JSUuvHYsi+Q8qCwI25Z3Mm6dTuuvfrWTz47WG+3hKlcobJr50Pbbrh3vtCM
+6svPP/eL//Hpbff/li+XG/FgQ4mBtKyCcyrLjtUrCikJLriNBdbhVwD26rL
aNEtM39FFbax+eA6R/NAgcFp0YJJQks26IMpNV1eYN/IkMHWsqyF0bpXsSpm
KCYR6epMWulwbRu1tQCa12KH8spRAhSXPB2mqu6tmIbiu1Ho3XsisA3uu++5
tedvnJzKBlGs+eJGKnNFHmtIHHgMoutOiNPwnv5jilAZ+9sNP+xu2nLnzl0P
NloxVnKomGhaR7CKG+JMKG0yWoxzS27YLNjUFv8QgqHOjBTTEPYOH5rZteOR
teduvuO2h77/7pgE9pl8Xm8JoDOP5uYtp6bSJLQWcgu6zknBNEjrDWgyaPMw
/LoNazNy+cQ5JqXtjzNaTjLLB2unh0GYdpqai6AYfdSTFGLNTk9OsF7MiQ+j
aP+QGHkIXlpkd3hsdGiM/ArIeoRme0h7Mo8PjZglcI8y0wXhPkoFV4EeIrAU
X+efXZDLopJjdmCekX+WHzULrfxWau2ak+yCV6SI6xs2VIj1IxAZTUzP7N27
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
kdBKja422nJFecKpvratjVta3mzxoDZjOhV2/FIiS1rlIYxGhQf5XiuszEE5
xS/XNRyGcNfZkqQt4jhIljXboyrcqIn6KMuKMOWSCStyR3jTlBEH/dHKq0qq
pTK90b6S2YF6gsEGTiCYLazD31ZRbnV6q889986a89Ydn5wP48SzCSie34aX
5jeEt5dRwpdHcq3H+U9umnqxS3Q7FZYhQt5h6eSpTz49fM5Z6w4dngqjjsTR
ZdfcZTu71DNX0fLh1YRc+eO1o8WR4/n77n3x/HM3XnPFjlde/vPMXKHkNYTT
BTRrFeyUBxFfJKyKVGEWiPVIxfRuuRWtubo1OYVPhuBqKUr7QLiQNVepdXaa
DVo8GRktE/wC4VmrwnrTHRf24l6zc9Rctl+KBOtdERXk2UFpCZ1aE7gFmygs
e6c1F636O0aK8Tg2OqGNW6KzmqAeN9ZanhWEDb+4i+LQyLDSCrkkXLKh6FN1
eiqMcI6D4ff0Zi2qqjPPDlXzrLwz3ied2nLnmxkTIiCJ34rDulxi3U7db7o0
mhjdOiUY/nyQJye/iIirCHipyPWWccjWdVdJLubY1XQ8SQ0pMm4IX6KMFU1h
oZsx3UJsAzqXU8Llp50SOggY+9H0mo1BMRS+V8y/GRnwiOP6QaCyQR7rVjoV
Xiu+TlUZRVr5a9DBGpCt7Bq99o37lSMemKVzNuoMEkklXxLGcZQs3brz/o0b
dtWaoR+F1GgzAgiggS8nc6xgclvcb63ZovqbUF03na5YazSYueL3rNpwQAKT
/srqjwenzj5r3aefHU66vWo6rlcDo8Vl7b/xBGcZdpvtqJfJtZ555r3LLtp+
7RU7Xnv5g7nZQq3ZFke9kC8UQK6Zr8QqfFUXCRF4mXgsIBwuVLULPYspV4qz
CrRpvxmsvYCktKg2i0qMhd3aWS4djbqSrTFlF9L38iC/GV0f3pSMOQ8CsbAy
i+lLUwR5ErKrleKZqYkZ46gl7BUJZlKaEx9GjP6OiUNWfiUERvJ5FCCDXD4e
1+jYHBGB1vmJionFth40FS54VMu1OOR6K2yH3SToxu0koNmu2ajZw34ZRFO1
yWY15Z9dmEy6eVoNNGkw266VGphZrAVlpbLug7L24B0qGFJ0VGnVncSzz1N8
PrLTpmxEw6wt9K2ac9EKLyIC92Xwb9T4VCgDwqbsMiieoowymJVjmiK0Lqpx
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
fhPPWmyt5pqr2vle2/Ro3GlKl5spu+sSyE6CmfVqu6QTg1a4d+dsHexNy6OY
YQmBhcTe4uqrr358zpnXjU8Ww06HI4ZmsfAmLZvIapp2jhYBV52l87dZ8bot
+9YxQAm/dQ44+qhDoh9JVNu58upbHnz4pbC7UvLEw/hxf7Xc6L759rdXXLHr
/HM3P3Dvs0PDMxKZSIRrxp8W50DVTD0OTqaMp9wM4nIK55JdvMsQ6hmQ89WS
2WHKulpGjUl7qrNothTzLPwuKMI53cc6SOy61HJSPpsRz6wN1blZ8MtltXgP
rIXCfKagvVsZN4PJrjs9N5gEMU8LLdvE3MykbqrCU5lZIZGx8BiLSkqu4inY
Toj+inOenBrVvg7ZJkSyjQpPaywsj4yLLcjqoim7zdinEMt+1a/1Tqw8f+Dd
X/7y8q++OR71lzzxikHLTzpvvfXZXfc+3Yo7qN62abZZyZVxQCkTLW4OUKU0
12zidxDYWpzlVTyNtaSBe9cFFOValUuiLqYXrlj3T1NDifMUagDuK+DqkHW/
4citp/bVnyuSxpzrY9tUauqQSEqJHDR9FBZbe7L6AUUYwOqZfktAbogCYl80
CEesjvOaT4mgkUVsLivlDLOLLuu2DJTu0zBvYtulXL5LfnTpowbiVldQVhkN
A93w2iCK4mT58cffvGDtltl5CT8jFy/zBA41NQWwpb/Kto/ks7ztwPybfJrz
/O0W418OX2RZF3CXMSFcXLd+z/5HX4t6q3FvxWv1Pv5saNPGu885a/3eOx4/
dHhCF+Lz/Ty6spHd8pgcQ59qupheY5m+aut6ZTtdkY0cijA8M6TWIEyiuZlE
NHLUeZSZtPGjqPAitVVQfm0hyU15kE3Ed1bD3gXZZ/lJgl+BdzY3P+3u20J3
PW9aMcVFp/o60Igl5llcdGbW7MzNKcuQVMFT0OaOwKvOmfxOTcFFT8BFT/JR
aAW8uo+Dk8xlkV9RXrlQ26K/sR8tdeeK3jlr1j/97J96J36u+E3ZPPmDdLsf
fPTd3jufaASdGhS2iRquvKoZtYw8KaqDUhR5dPUppKRq2pvXrLm8mW5CKPjl
ANLQFRblgmsy4G0HrRZOa6SstYc8kjkHRheky+VtceP5NjDHS+rmG9ohBXpq
Ur7aXES769tcjR2d6r76c7miKb4a+ZJ9X76zb4pBglXQlpfrtCB5uUWv1m4O
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
0lLYWWwGvWozLEt0FAWqZVZ8hcQgkavIj5JQnEAbaXCRM3nkjq/hcIu+WqSE
bDasBJN668Pb3KGL1tN8TbXJl9HUOu06Ml3ybmq8ZUgJIZ1CnFzAIkmij6EM
MvIN5VU+aSXLgqH6RmOSNfjVQamtN0bAgBOQRHe+DAIAWb6M4UKspiFFz9Q3
l1+FbHKajA+0siTa9FCBcQouJVhfTtVmkItHZTAWkY2InlNhiXmDWCU4jILF
peXh0ey5Z2148IEX+0sneDLV31h3vL/1CW3iz3NMwxi0eJA6830OLBIpy1+u
s7harXdef/Prq6/YfcH5N/3xj18feOnr69ff49W78gcve9pB6seR++0x8h2U
zq0QC7Ml5q8Q6chxkluxXhoRsSa1StRi5dHoLEF2OmtwBtHuuCs2CYz6WDKx
sGn2AL/6WKEo5wFvwS7xwegYt5KXp/K5WTehGNgK46w6aR0Kq1wyRp7W+Hde
sVV+DcXiqCd1m5nMzMoRRXhmlkYa/M6OKbwzqAurbZaT5QiemnYS3Ep8MVOy
hf046EXLPy8Pjc9cec3OP334fffUz6+8/enee5+fXojefu/H777PnHXGlrvu
e8WLen43bkbhh59889TTbzT8fqmSbNu8/1//57ZX3/h28eRfq7hi5ZqUK1N+
/0HSm5wp3X7HExs23Hndul3PvvRWzUeSCtwFHTFvgd3UyTOf5igOooAiEqSk
mcJdt/y28CNfwn1bFwM7ojUKVJNPKeYBg1a4QeEo9N0XbsD0GmDhhJFh1pBW
Bwc1wOqB5eSmACv0qU7RuuPdgLA+Gxr2iTB0H6IWWucsdMS6Kb98FvInZJki
rIPRhcbUVottYBHjfhsxLPfjTgJLHIZxrN+q1Vw98dOnnx8764zrP/n4YH9p
FeSGbftCX++iljjt5idyc+OJaa62GbkmBrSw0+0unqy3+u9/8OP66/et/e0N
D9z/0vDwwsrJ/3j1ta8uu3xntiB/1qRUKdfZG4OeFlFh66KZkdAudBbTaZUR
IBvnTHWmEJt0ForsLDDpogrOG2v/hsU2lYsuYp/6m6ab0x9yqU4Pl7uWfSSo
KcQmCs6Y7BbwFNnNZ6cXMrPZeSarDbnYn0c3iOmmzi5MZRTV2YXszEJW4Z1T
CZYj8vIpJLgmNUCeE7QFYcMvdlgLRpqa5eBpddemLqylJV/gFfMMfqN+0lvp
NcJk333P7r37qaj/1x27H3nupc/ylZV773/j4gv2/OKfNt7/4OuR/PXFdXei
diduikFb7Fdq8YbrHrjowttHZ2rtTk+iY4/ylETy933pj++ecebVF12ybe9d
T3z4yXdT84W6mtJ20JVnI1WHRAmVAFxYZjDeBr9Kd6J0ywmRYI4Y03DNYJmJ
Lyu4Ci90toVnETKbLLGA7LJk8uWVRAqZAtu2Owpdk0Qb9ALyaLQy1MEEais2
GwBGRIwWGqBJKKpqrm+O9/GbBgSDYdsh6ZQXx61A2xSWnQ3knvXTr6XCRmYO
gslBaZHI2maR4yiMVH8jfrr8aV9+9eML124dPZ5dWlmlA1fGEfwGasLDIImc
7Lb/09Dh2xgclaxm0BXNXfEa3Q8+OLh1873nnbN53+1PHT0yG0T9uLu4uPLz
O+9+e+llv5udr0edrngJH79JwogctUn3DShmC41DGM0hZXTXUJ1NLkunjFVN
7zoS/giKqzZVNTDSjtliKhHtxDeNKuA1c5q4oAey0wXsF1lsMlnoPKc/5Nh+
KTvafJXVShN25kFxdg4tl+RXl6hd0NstqX/WtWqzM/MLwq9QPANrTW0l41Th
iZk5CvGU+uppKLWGyeNIUyPBxSLypJhn2cRFq5HuhLEivPSn97+69vrd77x3
8IUDX9x402PXXXv3L/953S/+6fp/+edrP/vq2MrPP2mUmoQeAtjlU6f+8s3x
Nefu2LR5/1QuaMQd4bfcrIuKhd2k2mg+8fRL733wld9d+tv/+Y8T//vvvVMr
rU7cEl8nzHY0QIsVZLl4gqgbE2HZ97l15LTAabRvjzcstnxsofLlfjQGO2gA
W+VIaAJxdNqyo+FtSwU0VNkFTRqQAigKcVNfEuHHgGrbMnGlAouIG8JH16oH
feLg83w8qiGnkgIBnkAP3I6iJj7XkcLwk6knNzvJx3Hjuu3mnK2LmhEFm4/g
u4l5Rvwbc+v0V5985q0LL9gyPVPu9heduPspSENY7n8oQplUts5hNEmzsJMs
njhVb/b+/P6hjdffteasjXv3PPHjD5NBtOgnXU5tWFr96ZPPj65Zs/Ho8HzY
6bmmFNfr4kAm1GaWtBrpJg1zCRMV0wbbM5NNlGiKb9XGxZiwWS1hnZNU5Ft1
uuzasaxAV10uCxa6yAITc9FaL8bJC9inFnOtDyalM7ksDy7ARWcKRn+V4qzQ
Op8xXdNYewcHZdMUlui1FptyVoiF6IUZVWGFVyLiSS0QayxsdlSFZ1A7nhnE
yCbZJV56Sjyz31WERYIlChaCOkvdejt49vm312/cd899r++45dk9uw+886dj
k9P+0PFSrtIS9ytAtRRhf/nkic8+P3juOVsuWHvrlq37fziW7538e9RfjheX
W3HEJE+y1P+3//gPP1mcWiiPz5eGp7NT86VyQ92p6G/cjWWTnVC+CVEFs9yo
wrLTgi6Tbiqs/OisMivXJqMVtlxZSpj1mY/SAFPlsq2uNWprnOs7VJ3R1UA4
MgYYJ+CFKqkwusQw0EcRcZFjaiVJEYQNv5QwsM8Ilx+deirk0NF2lhgi6Gyz
CWbtj+20nU7JNKu3ToUDvImLfOVk5RFvJS5a+H36uXfWnr9xarrQW1wi7xod
y2/A19eKf467nbT4toK2E1/Krvzb+8sn/Gj5ow8Pbd1479pzttyx67GDP0z4
YS/s9hptMymy3mj1llZ/ODR91hnXfPPtaNRbKte0qMTk3j9sKsEIctHO2qw0
Btlm2mkTHbsUFtPU9ojWMgA+Jq8Zd20D4YoLeF0jJdEm1MhrlZm/ytqWaaam
nRaz31KFGIUntn8sYE0eKrIwTttso2M9OGemPCykN2i0CPH8zLwY6QVRYYFX
w2HksoRrpLZUiDUcVoQzUGFWl6anGCPPygnzcNHTE3Mz1N+wnwi/oDgSCV45
tVKq1d94+7Nbdj22ZevDD+//4KNPJ7/5fmHP3qfuf/g5ARP8Br3l3kIud+7Z
V1184fajx/J37H3mll1PffL56Ht//uH9j79phBEKwY3eyuKnX3x3xRU7Lrno
5vPO33rBhdvO/e36Pfse8oTCXqzOOTb+mcCqkUZNmQgrs/IoGo0TqMguzUXx
Te9b6kX9Y83HyiUdGwCVxFBxps7S3MI8a1a8qeZc3jzCCUorJJgkqojjWf0R
ai6f6CNBBEmNTDTqp3ikG4fc6xeQd+YOB4SWwzmEdkeRi2rJizPbLiBNjw8E
0GCLjYOJ88M8Ryy0arGMkYurjz/15qWX3liqRsIvrTU3y3LkHAKQj5oyKHY7
8sVkR75zd3llcfVvh47M3XjDA+eds2XfHU/9+MOEaG6yuFz3/ToL0IiUa81G
t788Nl48+8xr//L1UGdxteQpvzVm9jS34JpOW5420g/635idNjVflH2d/toq
8GCRE1aUOOGLx2GhPQFQQHYpLIezLR9XVaPLJnets4mxmlbBlpPYhIloukKW
C6wLw05rLGyXq0UftbHWrl9LDLMBFjtOf2mwxWzPZbFaNYy0UqzYCr9ZOOqs
VpdmM1MGXlFbBRYCrQGycD1l6Nb2raAfC7lBLxbxFYrlx3AxEVI6S52435FY
9U8ffLfr9qeuumbvr351zS9+een7H34TL/Z8ANVZ7MzMzbz6ylvHhscXV098
+fXhdetuP+fsDb8545pHHntZrFTQiSQs7Sz1X3j5rS2b7nh0/2tvvP7Zu+9+
/eJL77370Zdxv6ftXt04SuQyCxU3gbSnj6rCANbIsTKrj06a2/EgEGbOyocc
83wKtHy6ICPQSVgnV6MIsRxhWKrAhgYrkyWG5jo7TcZhuRkXw/EqvPIFYoKs
m17/iklTuYtYRTUxqY4APkcA8B5xDNGXiEclyOQFA4LhzgI10GXGnizRpshN
jxUKIz7URL72HURSoySBRkdLq3998KGX16/fW2v2kl6XI4+cENq3DU2+2gTO
btCQsLq3LHb473MLjQcffuW352y89ZaHDx6c8qN+1O23gqCBJLnp3lSroGmu
pZUTk9PV89ds+vyLI53+SrXRqup8JW3yoWfmVkMPqml6oRbbBnKKbKWRnipi
xddODHHzv0yDFkCGi645bG1FSW+vxkTWoLpUHRSbClWKr+kAKaaS1ZwNgQS1
Nl6iu6Ng50EUM0xzcb5DVs0wstBZ13tJhFFK1mc1WF7IzgFe0V9QrCxbLZ4H
0fMCtYTMUy5lPa/mmbkvTXNpaKyTm2iefbrobtRM2orzYtyWyLQXdVb7Qa9T
84Ox6dw3P45U6v7qTz9R/ohSd7n387/93F9dShY7fjcen5w7Njw5Mb3QWzmR
LHblhKifdJZ68osNku7qT39dOnEyWVrqra52lpfUMQLASNNciqrAK+c7bLlj
fjRaHASA17f6O1Bk5rvwQu7goKreIC0DCaabNcEvQFPzrPobkOWWEWh9bBFA
I5ry6RKhx4KwE1M92Im16wm23AkZvW7LWneXbeZXklf5AJ9el1665XLLjh3U
cdL1XPJOfXQIM2h1xjtWbGPu8LQ46XQXT9111zMb1u9rtZdEVXlyiK9KWini
EYLlNsMBGUEX+yd//nulFj/z7HsXXrDtumt2ffDBD7WG2PGe1pJsaN9omcbL
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
zXRxi8Cv7AhECX5UKqHpyHQlQlPUEwsn3rgnpMRAmFIbUpHxSJAVahJtrXU6
a224ps7SM1vwHe/ybNSJzEUOZKiDZDkFYwxjT8ATd4KB10mthZE/2nAgwfE0
wrFWtBE16492QHBmW34JWFU7SY8hISw69dSoKn6kNY07HQbgPA6W9YWGa+xg
SyjHnX5XVPjET3/75JOjF59369m/2rHmN7ed+evtv3/wzcWT/193+e/Ts/VH
H3v7wgu3X79uzzvvfFWq+Isrp8JOB7KrmitOycX4LrRnyMwEIGJ8NI/5SJsj
2E/EZYXhiZ///ZHHXl933a5Wu6f5LtgJDYFb2tRaN13lrCW13XpEdT9wmquT
Fp0cI3nlQl23/pjOWkLXlsEZqJpEtE1Hg2KvbLs7qrZMrPx6ZkYhxVf4LXmK
sMtx2QJTuQSZ1uDXG6zpYZblqZTMJGK2XxZNmTgLdc6VOBVCVwDIFkWsS/OF
oga/WY2C5/MFYVYglU39s1CcN/qrRMtjQY7kpxYQBYPf6Xn4bc13LURAEhQL
pP1BIQn8CnTJSi8iwstdo8WO936C4FfNcNxXTpmsjiC+RM8oLI7YZLVjBBd/
77SElTtNaSXvMOQmzZW2zVavBzjbPDZP8O2ZEjvHHb3mY0aa9jokhml2/E5k
OTXwYpxJ0hFuitmO2U//cxAjmJGBb5uY8wdKnaQZT0LLuOxL0BrD9wqDlE5T
zDVQd/ijcc5xdNoXkDEhMbZZ9vWtup2l1dV6q3fdNXee9T9vWnv2HRevuev8
M3dfdfk9f/7z+MP737tg7e8uv3zngT9+XKz6ncUVDYpD+aUltuhmfg8skPkJ
AweTPWjZTpK2zhI2mTocYSIuPvHXfz/wysdXXfm7qicH4yZaPdHN1casELO4
AVtMm9p/zkS0NqJjzvUgIq7b9Uyo2uSX84KNVa7XXFOlk+aqxZZTHuicWYTi
kQruhM7GaYbA5Zq8VV2IS5WZqmzecFMU3QwmlpNyLq81cNScsuQWusyRbl0Q
ICcyLWgXFWHgKY/KKR5FhWGkcw5hoj1tbbbuGJutGj2ZycSWR+E37Ou+cJos
9+ifZb+z2qf+CsiygdluuKTJLia1tENjudcV/IGqFpsWOx3EyyrHYNDwa/JU
MqrLq7rxYhe1IdOzgc2Sy6DYRrJxKkxOE+rC50GYzNwXnkrwBWjpqUrM8ATW
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
U6A6zLoNtcXLqOpWpgdwpY6K2lUAtpOzb4R2W2C1l/LyhCl5QdAdfnIj5WFK
K1R7AZgNRVBWmhFdTYF8XuTppR4ND0UhVkGPTPMwhs32z47zaAj3hBcbie6C
625DotArVqHlxb0NiSbIH9kjhaFuK7Ll0dPFH2GTxEuKm2hG0iRYC7MR4jDn
Hf2Dbh7vjj3Xig+bER7gFolrkJgTptjtlaPFPsI5Zx/9R5e+unSFX3yBskbL
j5yqQdS5lHeOzIzfRjfSTbKvVGoVrkQYdlojOQ8Mhw+KhQn4gVCbNBvFe3Y2
Aepj/CqE//64fvz0XRnpWGR+/8phXb85LeLVyD1goKY20rpj2LsTuS/vLOx8
74pMp42gmBZaobGJr3qgfnC1+f/8em3JrzHbkGIZaaNSUOsgjrMswMkvaO0f
i0HHg1PAjvPlpa0RKGmxZexZsVWHxW+TrlshNvc4ZxoraXPKnBec0GNvyAe/
vhFPfbyLWl0Zb0EdHmAs+phfYZd1qMUsfQJveEuuX2So8dFX6GST+3xMPyc+
FeoZHxl9M2BHa3nGod56qXDw2xZPPiqQz7aifF3czN2VGienFrO1LFnBpjIb
ZfNgfMjEWn0/alhu7Ki6p2PpDViXacTLfddHVxHFOpJyVPCrz/jIUWdlzleO
Pr1VQ1O+TWPEiProMvYZyqfoUD77UsDX/JmbIzkVvOD0IxD+MGb18koVjiUF
8O5VXOd+z8LucETK2mdDxFK3/lMRR//9YiIMWqW/GqIJfjFL4oUq/JPjruGf
mYL+yeCXIXBV2Hle+u/fTu4PSnD2N/3DdTINYWMQzM5g0zTXyv2DQqwNzM58
C+9CptNmr1LqqUmiCT7j6E6eXLosyc7q7YjNnuuW976x9xmXmks9V53s58kh
cn4DcIFM8SXRjm2Ke01WzVrWdql/XLn4XqlYxcuge+jqe4jrm+J7Ia9DfuuG
SM9btV0lNLZ7ttru/nn0cksJljT3VUMBKsPD6LN5t3II8UR/eFK3EEFr+V/o
fuKW4poy9l3nNsNvTHcltLupiLjDS4p1jmx2x0IZEhNaXM9WLuPDqx7qHN5T
z8K+tt2tG2IhhUbzL87VkMtqNgSyXmfI7t228w2bpkRJhU8sn64OuL3LaRGc
9ojCVeRmggsW+owc195/gtyHhbx/5Mp7HKKJhbkOr6fTK8aHnBxhTnHS9hMW
+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
d85BukQ2u5NuDIeVkSa5eEtSm+Hwh4fAIPdyayJZHTkuAxm/ae7jqNMwK6N1
iYNH+ueDGenr1Wg93u/vV0MV8a+9hJG+uBBTeQ3nkx3xvHTI7u+zJ6XFbD20
A2hToxPql92+XQyZVZ07w3+/2sfK/qOp//chC238osxw2EBuaLDFuyTbsYUW
lxA401lCODU6U2HcZnppP9njZQ8G11KR1qxXSwy42tQ01dXaCta1rnvu232u
omwEKpmOoFvspDT30jJZytkw4Xd5x+v3tsKJntDIrE/kVoa/NE3T55oOv75/
3Imeju9Onw8/ztSxpHl+LAuoXCep51weBEfmeeZt2DabLi88J6DuS8Zv41v0
vFM2m5UVR2fTY4v5Mnu2f1kEb7+AX/yh1oe1dUqtxxCvKaTZVdhRzRA4sE1R
ziM3umtXZMbCjUuwu+ubD9PCduN2DcZFq7y0+oXVd3wpvUsts159djmJaA25
PN7ojW+3QzV8mpqLtw4eF98Pt6uANdW2k2WSMwq2wvv1uqcWwzZfXI5L19LF
R2qB4uPGRXPgVjUPcbd/2R86+9eY/hpBXyC0//psViSfTX975rJ0vPt6KLXV
c6NYZ9RcdDayYcUP47TqeOCc4jullAfCYKQvse2iLHTWfK9sVVom0N6Qm24w
lGJOpz0sT/ryP0LUGFGWKe5B8zvo3ovolGpMeQru0jbHF6E8Bcuhj3PPg1NF
dLy7uLhHY5IXiQiXSkp4mTRe1MsDFY7GB51QcdA2Pjtleq1iE2P8sY7F4fAv
vwBANVNWGB8Pw3BYmSqc69ik7mibcYLZZnpjIKzNrjAZ1FXuPaRZeyBp2jqM
FOXZfXJ46Xx5DyFuxnDU4yi3rETWLSLfBoEwANx66e4jVbhro+843ops1UcF
NYLikGmaZwzqMCRrIUb/EQ9qfiJi4dvNCLXN9Hd/BbZ6SYQhwe6fOS3R9vYW
M1fel/R6zERWGW/pPUqR2gqEjfcLU0+fDHiVcF6bB9PO/z6CX/Yi/Wuh8cP2
7F1CegqOupJXpb/qbiZZ4q7KM9eJ7r6KqQP8JQZaF4ON41UUmUQo/ZWueIvw
UlKsRsdnkfKqyhVnWwt0Lc0a191VkyjZyKw9w43s8HI3rpGl6retjo9V8yI3
WzUURYvpe0sDku5Xz6vjfVIJZleml1GY3RIvs/Q3Hn9cFr5cHe3MlVU5AVxq
pSLzDxUR8SpUh2UVtuP6YMsJPK1sx21fnh2S6mLaB/i9a+4cPeATIo55CWtN
27y10CwvyG4RcBGdoXEmspiyzsUBBqrweM9wOEZqRZzrwzw+ushfyT+38tKd
w9u2mb/S2GlTz3NktyKXBQt9updEluZEHMUvJy1iUIcdMagN5+ZOcuGoyS8D
4YvIRdewfdDKBqZCY70lITa01eEL2xzkUoJPHJeljLTJ8cngtTp5t38EvTFM
MuzxKkJpoc08o0dJIHdf3jsMspTyCm2t81TV0I45x3jEWKw5Op7mzjFfQn9n
75D6DHgfSr9UrX3kr7b6K+Wq0UiJiUDvUed+a4P93CM8aJRCNaGjz2lWi3rH
xja6pz0mVdi+bOCN711Ti9UEjeWW1hDrFZl8uYtHOa4tTLhfwYFdlKfCnhSv
2FPKXUmZ1FLgzLD38fSX0Q1P6uE1Z/14oM/X4gLHU9iC1mHRfpXChi7XYTgT
AmCWKgyEM1pHRxIy0i7Ha0bHGfnKITPr5XkJ6q+mQ8YJmYuO5YB8mQWYZ4uI
h+hXGpNfl9fcGBGr/FE6f7NTyZVXx8Xv5eZzD9VZfG7bFN/sWkLOqrkf74bw
bR/8Cmrz0nLLyjyrq8hiZNtyaIeP6ziCWYXDvz3+9cj39znmHuavJVKmye/R
3LIJbmP4fD5a+d51cqBMZTDmyvh9SJF9UMdXmm156SUC4bW2x1XPciSWqxFc
PvbDqY+RWlZ7vx4Y+PGIbFiGgZnUInFMEY+pkoPL0xKVf40YE0cmj47r7NDy
BHIhkRF3zmuO4d9lhoWmdfRuxb37xrN2m36Z52SUw0u+Jslr3BhNQjH8ocWe
hhorz4DPfrrdrUmfoitNJ+Q3li6q0le1xN9HLQmC3JnNwoSgfhVlA0JXAGtM
jW6eF8rxAydEN1zkBxbX1kWZPdwwB3KEvZndVFNt0cEkeX3KX9WzO7V4CEif
YJ7ptGMh0GnItbW5mj3Qvnnyeby5yEJ/2amkH7jxzJX6lSipzU3STOXV8cg8
3w3DS5udxS7Q+lQOkxa/x9v9HZwav3cDHJr7UWzzURTjhA9uwPldXpoRcUa+
PqIjO3w5NDoNswEe8xDt5fnX4YTt/fj/Z9n92A==
    "], {{0, 240.}, {320., 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|
     "Exif" -> <|
       "DateTime" -> 
        DateObject[{2024, 6, 10, 10, 46, 8.017}, "Instant", "Gregorian", -4.],
         "Model" -> "FaceTime HD Camera", "Make" -> "Apple Inc.", 
        "PixelXDimension" -> 320, "PixelYDimension" -> 240, 
        "TimeZoneOffset" -> -4., "Software" -> 
        "Created with the Wolfram Language : www.wolfram.com"|>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{320., 240.},
  PlotRange->{{0, 320.}, {0, 240.}}]], "Input",
 CellChangeTimes->{{3.9270195943593893`*^9, 3.9270195975808773`*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"ad204c44-4869-48fb-9c4d-27dd6ecc0e88"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxcvYe3E9e27nn6xfv63vduOtE+xxgb+2AMNhgTjDFgwDgnDDaYHHZkR+Wc
s1QqlapKVSWVcpZ2AGzf12P0P9V/Qn9zrdK2u8dY1FgqlUol7fqt75tzzSX2
P1y/Ov+ffve739n/AZurD9wf2mwPvN/9Cx5cX7MvLazNPf50zTG3MGc7/fA/
Y+f/g38X/o/f/Y76DaNQN/LNarFhCK2aiNao4mGhZQots1iv5ut6DgfUjVyD
bU09a2pZU0cnV6ugn2/XpZZZquuFRrXQaUidRnnU1TrY2SjXdDEa9HqdNrWU
GXYqrZrQqYttUxILCb/XLuaitQqdFvvxdp1GCdtmTcB58I64jE5DbLBOu47L
y/fqpUFb6TXKWwOjaxa7ptiri+j0GtT6jeKoLU268rSvTnsKOmPWH3fLw1YJ
Tw3b0rhTRof6LYnO1pT6TQnbXoNO1WuU+g3aj06nJqAzast47aQnj9vlfrPU
b4o4A848ZGfDw25daOPyqgVcTLeOayh18UFqQp/OSeeh/aaAtxi0yjg521rv
0jIKLSOHl6ODM/DWMvLtmsDenT4afagOXf+wWRrhUzRLk3Z52BDx7vjIgyZ1
cAAafQlNER+tz7+NJj5OscOujV1eASfB8QO65kLHzLfxtev5jl5o6/luVejg
YrQc+s1KuqVl0No6HuawHzvxVFPNNLGt4Kks2t5+HIOdeFVDTWGL1jGyDTWJ
h2h1JWWWk6acqkoJs0xbXYxVS8lqKaUXE4aYxFYXE5qQ0IspTUiq+Tg6dTlf
LWXKuYicj5Tz0WI6pAgJTczIhWQuHn148953n3x3+cynx944e+S1M3/fd/yN
/e+efOv8xfc/WX68nIpGcqmYkInpUq4ipqrltFZKKkK0nAtLmWAx5ReSPjEd
FJKBTNSTjrjzCW8u7snG3Pm4p5Dw5uPeTNSFlo3Ts5mIOxvzZqMetHTYlQo5
40E7Nb8t4t2I+Wxhz3rYvRbxrMe9mxHXWgxb70bEu05bzwbfxnybUd8m32JP
lA6gbZQOZi93r9HWuYozhBwrYdbBFv2g/UnAtozm21j0rC/4bEvu9QXPxoJr
bY5vm1UB6BF94NcUQQojKA+U0GfwEmJNQG0UTI2wbdaK4L2mF2o66C5w6ttm
qVUrtarU6bWUYUfrd9SqXgz5PF6HXZWy3Ua51yqPu5Ua/lqJYMDvkoSEWcHZ
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
AXt2MqqB361JfUykVyeTer0B/fUn4uFum5R32NcGbBzoz4ow+cIHSlhZNdXw
wFVeacnj2V+edaGt0YhfV4uTAQV9rGhEVaWcIhckKScKmWQsBMvmIkcHK7Xh
stkcG5vYBv1e2Ff8+XSlBKjt66t+l1OTCkCMoCaJNLlQctCw//l2GzpeVQtC
NqopRaNSrMiI5iKIVrpNhQ5ms1TTHgQOuLWeT9p9xGnpeLOmPJ20mbXGaGCJ
O95iCpDHROIvO20pn7557YeaLj/d7nUaWqdVU9VSUcy3mpXnWwirCd6fdxo/
bRPvv+y0ftpqPpuYvIxzd2zyYYec/8xXbLEogE1nm9OhzlZLGVs9NgPeN/Zc
94AtYhq2KlpZiIYjPk/4pT8d+f0/Hnr/5Le3b677fbmK0VG15uKC68L71w++
fHbfX949/Nr5k+98cuHs1b/96cjl858MO/WdURPWt1LKRQKB5WXb19/cfemF
Nz+5dDWXkm5+9+js6Y+aNWNn2Bi0Kk29HHQ6Q263BmMUC5QLyU6d5ovxBbZq
cimbVkXRrCjjVq2lS4OmVlXEoMOZi0baZtn68XAdOlsa0hpGiWe9WqzQGuSy
ssx8XSvUjfKd249PvnvR7wkWc9DTVE0tdkxFFUtn3rly+dzV9XWXx+UvZLJu
m/vk2+/v++Pfr315o5BMVcS8z+nYXFtBjG8a5Vgw/NYbpy6e/dS+trm5srq6
tJCJB1UxyWUXmssRRlNLaQqlWQpLJdmNsRlhmhRWhURFTAFq+jnKVDDoscMm
ry0vLc/PLzx85FhfxfeQTYVhmxcfz60uLW+srq0+eQIB8jhsuC3d9o1UJJAM
ezLxQDoWXJlfmLt7HzuDPgcoXnz0aO7uvaDXEfK5NlefPL57L+Cyh73O5ccP
Htz+8eHt23N3764tLHhs6xDxqN+B4JevH2SFHJvD/kx5BxanTHkrPGHFJ3lH
lHA2gDNnHPBujZu9nt5sytGwD+JYM8qQzvEQpyKEceSQeWPuXftsRSpf/k+l
HaPq02mdZn9G1Z9220opG48G67Uy3mjAligyKWxOib4GLVbtGt2GppcFWcwp
xSwtUSxmxHw6Gg55PM6g14OvE0PxJtTFZsvGwvC0z7baDFsLNHLOLENFKrzV
fLrVHg9rQ4SZfare7LW1bktlMmfy5BVlsYaQyPZTBNgS7p14vw01qQNqWGUe
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
Wiwd1Aifh1hzgfDgx9cDH2jv5aYc3qCzYJYdNdeMCjjpUD45B6gbFBGX+KCC
8+KxG17nf0VMr6MXU8nYwODg4NDYjz/eOXL4jKmBRLNcSMWiod6PH2KRMUSg
5ULu+dO3O7efXrRg91d/2/XN13tv/fwHrpxpG3L3kvJ697DCzcbVVo1C2g6T
i4B3qqlNt3WoP2x8y0UwXpnpOkqx8PPN39evObhhzaGfbz1OJDKtZg2sZRK5
zeuOXj53Z6pVl/wbhPjs6Su3bjxsOpYUizEIyIghgTbNJazrhUzuxLGrC7/e
dvzItfHRyZbrquWsYyvdjvPnH6/XLN5x9yZidlev5ijjZxRsNd+wKjVDe/L7
iw3r9v7884NkItp0aVijD9zCRm1gpIP8RxMXIcOU+Af5M8owJZ0nlMjiCEJm
dfEkKW6Z9pYXID11uZbkso8VFy3L7NcQ0Zj6uVM/bd24S8lnphoaAt6WxY3c
GFIwYtC7KBgipEsc1JPE6wWHKkG5tkPTNzo1hdaiBx08PYGbLiZ57Ttyy5wH
y/DadzhDuS9a3UiFMYCyK5lEfOO63Ts3H3v8258/nb+xdMGaVYs33r52t5hJ
VooJ+GEwCLkUJVVyCHVTuVTi8g831izd9e1fNu7adDiforKyWgS/k5VsFLqP
y8AjiywkOyzfPAvbTOKbiynZaIWtNYDFZXh9ipcZ9pwf50q2ihNWpMU4k46N
ZibH05PEbyI8DD1NhIfioUFZrINas7hZKxEdlDbLuVn/CJPH++PgVwwzwdsX
HR+AT5Y9+IUQyxYe6okM0xlsowPveR4TZPcjECZ+B3vHaN+DM5FhQhjXy8Ql
mu/f837k41vY7KEe6r4e6nmLOHrgw2vJWYlnZuUti6MWfqkYhEHeLktG2sRI
a5DZlpN1ttOiJnWXpHlksP/Q4TMPHv/5++M3mzcdffz7y27d7tR0KFRonAJh
pZjPZ3PXrvyyZuWeTesP37/3ds/On/721y2/3n/ZbliUN/YqRCRY0qPIRRYS
qdmO+c8ZF3IMFma6RrettRpqG5fBmrad5GTy+NGrq5btv3D2djScaNbtek1z
nWrN1h/ff7562Z7B/tDn6Wa3ZUx3LFz/5OGLY4cvZpOpmbYpHGFAwMjAjgJv
ZySjiZNHflq+eNeFc7/09oyZqm6oiqmV8bJaVTl9+PLm1YdioUTNrpoar65J
nQx5Wy/iTD6T3bvr+K4dx2MR2A8N0TEF79LD6UmtNzTJ0CcRvRf5+pOkGlz5
5YnJPBdb1gKlrlSZOUXToqVTSwpAnPXNWAyv7a3Dj/9E49jB87u2HKxb5lTT
bLuw0LwYAnVsQsoLzHipznkGml1iwlqX60YRKkzizumsupGTDDM41Wnpm0SN
1tDIGuWU5LEbBvx83qlS2pm4pucWmmbJVsuvnr/ZuvHAkm/WL1uw/uqlm4lo
zKyW1FKKsM1yYShHtSGtlIDCIsg1K9lYOHzu9LVv/rrh+1W7UrGQWc1SH2Yu
JggD0nIuVi3G5Ru4vC/Apa/Ai/EgEKuyhaawOhVmTkMFVl7ht5AJyYFAjQMy
1XEEyxOAFxKcggRHIcFDEFPsU7ERgBwHsLEhma+UYHLTvEwHrY5FU/4HIcEi
vl4WCwf8Y4jzVAQys0yOmv0zJaWZ3NBwHznnAfxI+jva/06S1eM0Qem98Evz
kvrei8eWeFn4xR6Eutgs3myvKwm0UlDMKSmATF0cZsHE3s9R1zkXTSGzSzMX
uHZcatW1p0+er1m7/+fbLw8e/Gnv7nPFHGIrDSzYRnl0eOjDu943r3qPHr68
avmuc6evZ5IFveLu2HR60Xe7Rkdi0y2biz64ORHoEcWIfKcgtQ3d0cv5ZDI0
Gup92zs+OISbsNvWKZkGL9oyOk3nw9v+HVtOrlt75Nd7L13b/jRVg86aWs61
KtVS8YeT1zatPZjPFadgie1St6V/mnaTscSJY5eHB0f+fbZO+SWGi525Nt1x
Bz4M7txyAoPM48fvnvzx9v5vT/v7BycmxkOh0XwhPTw0sW7F/nOnbtm6Kevi
2kbJUPOmmrf0AnBGFPz4wYsFX69//fJjt2k17PI0W/3WPJHlGUwlz0I3q9Jt
JUEuYTtv/qOIrze9S5fAViZWF1w9739xTM721wG2NfqaOUvLtGvVciH//fq9
Jw9fjk1M9rz9OPixTy/DeJcbRrltUUeZWQXpiJrziN8dTRL+xYZRAp6Q1wZ9
UxsNC1IVAsUQX7sCnYXWZxhYWgyHj3NGKUXHnNSy5NEqxrRicjI+NjSWnkw2
bMPWSqVsrJhmwYWG5tjc5ohllUzyJPx5pZh+/vTlkm83bF67MzUZdrQcpbDy
kxrscX6SLismpFSETZEDBhlQ06MFctoYBmCJacp/AmpLnObTHrmiwkCbo2OQ
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
mnrmyNVv/sf2Jd/s//nGc8dyZjo2yy61espnqDtqdDz09PdXh/b+uHzRocXf
7v/mb7u3bbzw6P6bYj7fbpgOV65pRRGzPDI0smzpjrVrTqxcdnTr9+eSCTgK
01CLWiWLK4cHRlYu2f7i2eDM7BfXtvLZzId37ynDZhrHj1//t7/v27jl0kQk
H4lOvn37zjZo5m+3YauVwsePH8bGxxzXNAzr+JFL+3edqpYUo0prcUCjXVNN
xeK3r93buGrnptW7H917auvml+lWh901sLVlozWIKCRpkFNV2ANX226VwPEC
1aIwZWuSsPIWwQACrue6PWcrOWoJY22tqJUzCHgJOkpZe3zVeKzg+Lrkp7Dk
LRTmtyxhdd3PZZGf1/KeYRb9pdW8JfSmjWtP9DGY7ryYapFpm+Y1FMxKTi/D
YGfUUgogA23RZY1jZBFfARnSLHExHyTK2Vg1Hwew5UyEpvqyCvPUJPLVWoFT
0yzfapFSWEz9pMx6oF6sdMRX3glJXmUYYQS2IrWyF5a9jBblqaQda1hAToS5
zORbaLAp9eI5LfZPzi8fi38Oj/TR7KSRXpkyDOWdb6dDQ73cy/FRGikJ4X4v
8uWaL2mu4ByYZ5wkeM0814YqplmmJLPhOWeL95LIggTbloJ9za3YzG/NVRwu
PFl6YXxkbM3yA//4295t267eut1/4MCDFUtPPXrSpzt2rWHadtW1VUsnZw4t
A48zNNevfuHcjSXf7bl397XrOBBfnlysw1d32/pUxwC57MyNYi538dzNDasO
Hj90feumU4u+3Xbjyq/thkvZM5fmVsCNT3ed189frFi6+dtvt/zjq63ffbN3
9fKT61eefPlsqO463Rbe1ID4Al6jmuk0zHgktX3bhW++3b9i6fHjx362LBcG
24YwGSXo1OjQyOplOzAOnDjy06E951cs2bRr+/5KmaYt/PjT/f/xt51LV50Y
gDOKxD709jqWiliy7ZpapdDT2zM6Otppt4YGJxb8Y8PPN39v1lzX1Ev54sDH
wUtnrq1dtn3jyp0P7j4xq9r//Nenz9M1UDmNKIDxlLldhA+3l0tqGueJ3xpd
0OZWTGwUmbJMi4s21axgIk6YvKuaFdZgVkVJJbfcZBvAGW8JbAuiqh689B2v
JPSNQPE5AKdxg0vz/GPJ8UrGhcB++5lzSabRmwJh7gzJSTVZElyUr9YKjlYC
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
vniKko3TEwvJYiaqsHnOpkJZkJvmvixOZPldHF4uyy8nkdp6qWnPMM878NFO
cP03xnh6wI73B70cNB1pYiBKxSMW39FB1lyQSyocJXj7uFjMEjyMoBgeu5+T
0r2jfglJUtCCMxePPoBcSV6NsP6KW5YmDZ9lRUJgIdfghxyzXMcNVtf5Hq6C
COgaolRw98fjF5s3nN694/p3C4784+sj3y08dPHyw0gsNzKcWb/mxJFDVyqK
MtOxyRszvzWovKGeP3Nj25ZTTx737Npx5u3r/i+f2hD3Rg0qD3z0vo+DWzcc
2rn5+ODARLtVazhG07XrtjPSN35438WVS/f8du/ZdLsO2W27GvRXCqx0q9c0
16rAaKxdvv/2zaeddqODoYZmOhgD74c2rz60Y9PJwX56zXbb+fXXR8uXbr/5
80PLUnlFIF4giJPqMjkCOPsFblqEBCI+M+U0amY0knj7ZvD+g1f79v3w3bfb
Fi3YvmjRzkULd33z9fYF3+z56i87dm29ODgQNU1nerrzaRauwKHfCzDiXah0
ThW0dp2arwioOplnFtw5keVqryIxb4u7HOcrrPzoF5uK9P1xXFWHbxHKajBO
JHaU74VlBWhSQRY19Hqu+OlS5OU6kSJGmg5sDpDnGjKL3ruzf5bNbyABv9Bi
r/hLSWb25xzq5sgw64iXizSeaEWwKTkrKg17FKd5I35Jl8kJp0wOhNk/p9kq
J8Q8g0ccE7AB0XnS2QDzgFyP33lbKRNjnxzKgd9MNAvnDH5TEN9QEA5npIQ0
OSYZqkxQQhI7zbksPEpbbIxrRhBfOGTo7IAcRKSLkqct4GRsYigyhmOcHCJs
Cc9eFt8B3vo4C01ZLAgxznAKmuYS0gFnsfDjiNfI4bVJz/VV8gGllw0vPQXB
5YIvyFUkW0U1I4zwrMhQ3oarYu/aJdzJn2bcL5/rlqGcO31t5bLjSxYeXbH8
+PbtF/581V9v1KpV5frV+2tXHHz29GO75Ui/B92odV3Df1+lgqj2zKmbquqe
PXXtzMkrlqV9+dyo0RBhvn31ccOqfYhzJ8ZjXYhTNT8xMnbq6A9b1h9asXjn
0kU7jh64kIolZtu1bt1oOlVIMMJDXoGKEID+DvaOrF6y9/rVh7W602pZrboz
1DOyde3hrWuP4A8Jjw0j0WzomXR8ZHRM0yodmqrvtUbzqkEVWe9LznDBmgCv
ce9Wt6l/mqrTUl0NS9e0/t7RnvfDA70TH95P3L717PHD/u1bzj1+8r7VadqW
qmsY+krszJU6t7oBYXo1ekGV1oSveSkpvzXCC0W5ZZq45rYWL5fFEAWOWvFd
Li1WJu3r5B9c6YdElFpiFabNU1V5EUtUVSpEvGyI5Rl1eWXBk8w2jxXyRL/P
sySfrR5UiiWlXM1LSgr2mIpENG5Q5EsN7UbZ1UtygUitxr63AsUsItTNacws
UCUJ9n9UyT/zBm+cTxS56aKSSwBDgMzkkgqTHPOcCAmQBVW6AOaZYfdTXmSe
8SLAE6+Tw0EqXMjSAv44mecoWL6cNM8440dp3qCKUnw8S0uOe3Vhz11HJ+Lh
0ckJ8DscGxvCJmbYm3lE1aJBnIyOg186T8djQ2KbpVQUkkCYsliIf/vkvBSP
ZC9VJElekX/u/0DZrX6/KNz7bpgLwV5jZBDqGiVWYYU3iogpES0hsKUIwhRI
to3paffTp3qlnDt5/NKaVYdPn/h5cDBSVpRmyzZtpVwqHDtwYe/2s9k0zRJq
sujg5rfwX6mX47HE7m0nbt960m53/3z5fvvWI0ODY9NTDcfSn/7+as2KvXt2
nJmMpjpQyQZct/7oweNlizZu3Xj4+OFLb172VIrFbsMGtnUT97DikrUmyeiS
Ea20asbIwNiyhbvOnb5jmK5r2c8evfl+9YE9W08i+P083QI4rPKU3EZIO9Wx
eF07aq3k7kpPhWX5L+m3pHCV5hpr7aZep8Q7rR2Ep7RbRrfjdjvOzFTd0NRw
aPLHi/dWLts1NhGrObpjVfh3VzF8MfsKgcx7HspIi1tUG5oLbLlNy88204Em
P0qCi9b7amj4NQV8LsVyZklWLXNo+YW6Q7Vm11QQcbgwrqosBUykiycH2g27
IhR7Q4FfKpLgt8WfpEnL8VW4TwwORw3K0LW5RmtOYalFyKvFvtes+BQLzlTt
RTjMF1QR1Wa0MrwxfU2DpmRUKhjNbSAaGLL+pvmaNPNLJ8vZWCkHDCmYFUKr
BVHb/2Kw2VEnQSvHvAmx2YKw6K8Uf2k5nUyExJf0NywuWmLhIgx2nPqlg4mH
pL/x8RT1WI5JIyWb6lHwmxR+x6HCIz7IJMRE8dhAGNgC3vGh0OhACD+SvErC
SjYvBMaBKDJO0sGwHPT55eA5nMf9qf2yH2NTzfUj6tOwGFsveeVrMW8liYuh
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
EkiksS7FxUjxaONtRR5IPmojejmZjBN0iUKSlRWLJyheMpwdCiZICkkRT802
otol0wWldvlkhqdgee4+OnfRPRfYujv0shQHmDopkQXiw5BXu+1eBW6sUq3V
6s1mk/4gkY5fZ/7xJzuXnv9Jtzta4ofRVAse2YYzUvE6ANjZagbxoBtT+GIN
qDGmy+X87Oys3R7sbPt++Np7Tz39k0svvvPhH7cj0XynM1jOF+fnK6r1sIwX
3rTYg+Czf37r893dwGOPvTwc6p+drc4YmEArKHu9sIBWYPZiNfs/kLvGh5pb
VNrWJky+Gl0njLzmBNsNYEWWMLeOVEauPIp9kdn6dGzgNIAXEKaG7QFjtifp
aK4u9f9babjfplmWg96wSxmwAYttyX0JhOm21xKepVsuHFP+CghtuhsJZgIy
wE4PNaucvGIJzdJa2kU4L00JZ7bMRWqfLhQYwtDVIOI8YFvIZegWgpmRCwuM
HRwpF2jRgGIhgy2fTWXTwG9GMs8zDFcW0tKzIfhdEGwN6aoyOREtPCtHhJcF
4/TEuUo9WszLyyUGmHG2BvuYjEfjgsG7XhrAr5Ptca2ubELZ4pGBPqFj8qEz
jSeq0+IAkq+eu6keKegIZt0sk9SAVB4JtKgyIGmBWSBHNUV6HujX12mIGpSz
mtyRdiZBSFxGxK2xmqU8Mwt+at0karCkooTYYrLm1F0M4hNZG4qUiieZvrkl
QJu7stC1uoZUTBaMRHrK5rmAMKFAajeGvPLMBa8L6g32DXHuC34USITzndG7
2POZBRtsWZaqIhovr1w9ePapt8rl1gKCXqe6kqaDT+lS16QirLP1fIEvzTJt
0CuzKl7w1sXq1sXFeGIkkpVPLh+/+eYHL1z6+Usv/+KTT/YKxfpsBowv10uL
kwAGW3IqDAG/N296n3rih8rE+uz87NZ6IVS7csIaqeUlMzIRLrtg2SeMWxt3
AAjTddKVTrlAzxkth3MZrZp7yzu4JWjTPh8RChaFLLksTlBLB0hH/nKEk6zm
pTiVUV+lP9BG7f8jbpzeFKFERcMFd7nrgxcKqIrAFsDSxIcmtYKIogZa260a
bYTrqmCWGzXLNZbQAC8Aiw34BYrLxTw2VtG5Cme0oKVZPzvgBZZLuWylkANs
Qbs5Xg8TMAdZC1otJtDVGpg1VmtLGHnTmMHNz/QQ9jcPuZUmylYB2gD7+twG
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
GIt4rPSbd6++/PKvPv7zQb8zRRC6ODtbzmZSySLBbOhu/wngTLBlq6vJvEg5
QUiZSsOckYautviEDYqxM52Op4zfCbVz0PJZikJcrHIWi/5YJPdeCilr3Ect
2Srp19qkozeraTlregx4cVrq8WjxzIjeEP8kI81VpB6VkGrcqdUUFLcgnuuV
Vh2grgs8N1KZoMoku9HPAmRa9JLPFNUtJzBBl2Syg7RsYQNmP/ucwHtOnDtn
Ol5cXFDAX62JVRfEvAzeNTtfAjIdpEdZgxHzYkStweALbOfny4uL5QrCGODl
1NbKtca4C8wycue4vUVi2wR+OVwIWgnOTjKNNzbgpNWx4b0YdA7nitadMe4I
mwtrQ7Xkcy3H8wLCJJKZWIVV5Xwc2eSvNrd0mry+7DO0V/8/We/97dS1ZQ32
GP1D1/dVjxo1qit+r8KLrld22X6AMSbaBowx2IABg8nGkWAMGBwwwYDJ3MBN
kq5yzjlnHWXdSLL9XlV1/9T/SM+11tG5t0ZfH4sj6SRJe+4551pr77O4NrIf
a8r2C541uGX75Y4ildXgajol5KJCmHCXEdzRZrkU+JptYIZDQ7EFHmdhQBoA
X28pSx2jqpzhc9NSsSzmkQ8upKktxKoCakhoACQYSGxYv+v0mcv5QrFSAmRA
rvhpssViHjwO8Qxqz+czYpnlIJoq7oNa9cJiUdlop4SgGbxZouNCvloqdtqt
O/fGVry82eMKteC9cXqOiaGLKFdKlUqlkK/cujn29tajb285evPGeCGHl4oc
agM2BbZqzEpWUn3yZQjHJG7GTM1JJX7ax3iE36Vauwj4F8xLLOwPR/xBgDeC
FZ94YShqEdKaqOYYl8bLbk1pk/aWqi2fk+pA+EZ1khSmAchet8frIgi7uXba
QxPlUfJIAtFUKU2z1FpteAQ7k4oGihm8RiuxrVEUsklNJ032g1qT2FI2MzHt
CimDeWmuab1OAtRGvQ7kW1XyMLyALVDM1lUEbUZFDSBcVDHLS1r0M8Ws8oBk
VmCLlVIZu4O1c1jwCjniguA3RYPxmYWpcygRKZcZxeKyi4xf2oAf+1jmK2Eq
p9BZjpiIQNrP7Ai+OBRDQBZgSgBKok8qk/aRLvgV2BLPZhKS/JUNNDqmDdIL
uM5rudSM7L4wDqhfaMGIk96gX+YhClOMJBo81Utn1HrIghrTJg9LldI5qj0m
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
LSDimES6IuF4OBQNMn4D4N8w34VcUIxFIBwAH+OlICDtC6p/LLDxfjDgcnvv
3HvwzbffX71298rV29dv3B3DN+t0NSkC3ASKZcFTsbSAc6vXbhL5Uv0VlTNR
dhgOV7Zvd/FrTk/jK3389Kfe9Hyp1g6EMzqD7/Zd09Vr4xevjHx/bfzugOXe
gNVkC4fjxXwZxN1Dz86wlfHjEpvlkiIgiHlTAmVkhznFIzhS5XGDY7Ys2lnM
K3K1bMYVqRbGESSqw6FvYmE1msToXhxiokBWrbrYEWuY1SooNP0MUEtAW3PZ
2sYCbXbxNS1Oxd0aGw2VTOn7VNBU+SNQr8IGhCvAiXMZIuojZYHxFbVISAAp
+NhgkGQmH0lkEskClNrwsHFgQD86ajFMOsHLNmfQZPUaTC78nng0Wj1WZ8Dt
j7k8sQejFrc3ipN1YGw6vSc//sfwkGP50m0uV3ru4WOIbBAg4NqUZFJfGPf6
f/JKi1FKwS5+scPUzMq3LbEvIVYQc2+q2+3Ri/XG7BtvHPzuu4HpuZ/cvghk
vMni9YWSkUQOjWRkzD6ud6J7QeOBWZ6BFX/8GP3Jw0dPZuef1ttztcZMsdxO
JCtud1yn8wwO2QYGbdevj3/99Z2zZ64f/+zS4UPn399zaue7x7a/88n2dz7d
/s5nO7cf37Pz1O4dJ9/ddnzVir2rXn5/zcr3V6/cu3rVnlWr9qxZ8/7Klbtf
eWXnqlW7Xn5525Ilby19ccvaVbvf2vzBzl0n9x348tNj1zdt/OyX/+vNf/7r
zX/9Z+v/4n9f8zf/c90v/q+VFy/cSybLwVA6Es1G4/lEGkSvTk+TSKUh1MMR
us0SlHk4TKOa+HZp5HZBuHT3NJ49LwoIJ6LhGCAcAgtH4mF/yA++xtMAsTAN
U6LxDvDDQDFXifj7vliG9k/oDTrD5K07927fHYD5NVlsZovd6SZqRisCHIBc
0cMs7QCiaqvXbHQaxHTdenuqOf9k7sf/+OmnP/2E77zRnMoXGiaT/9q1sc9P
Xj+w7+yuHcfWrtm7ZOm2Z/51w0vL3l2xfCeWl1/a/tLSd15ZvnPtmn0bNh79
7Pg13WSgUO5Mzz5Ec1AjycKnUgBcF/wqQqnEmKyZVV3aDwpR5BYKAWjiKxdL
XiUuBgJrVbLtdVk4GlZVg+T12mKEMuIYufWqRrhSuyhn/G9AZmXeX1gD0GAf
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
B2DMFQ2GKa3MIYHMcwyqdgQoUq8dv+wxc4Lucln/SZQd40V3dWkuiNVStXnG
4+HHPEaMIi88ucirNc+OWhjBNAzROUCeV5FNE2uiv1U9IpajVve8Rq3eqteb
jUajXm80hFA5r9ZowqD6NTWrfr0elirNbK46PVuczlR/ODTz8qtfvHjg0wMv
ffrc8x/94aFX7rn3hTv2PnnTzX+46qpbr7jylgsu2Lb2vM3rrtm9cf2dO2/Z
f9+9z7/5xhfHjuZv+d0Tmzc8kJn3y9VApLnZjoOw2/KjVjuUISZfruRFXgUf
IFbyZMgtlzU5LCbcbEx5VcByEZqryluRr+xpR16t1vI7Wzbu3X3rg5VqW3nX
31KJPALSEuWbLhoDoO6jRwX5tAplGr1hOFOUVOeazS84hJnRMggjc4V5KWqV
sWXQiq9zPWbmMyJRxyfzu/c89ptfXyXx+6uvfXTo6PHRyenjk7OffPHtp198
PSF6O5/hVGWhWGJerKA4NT41IRTLj2Kb9WbSuurHODV4VI5MjJtwWCVYbw4y
hHS0MDt8fEhYPjp8jHnpwygZI/F1dEhvqXYMPx7RScR6Y6YjNNuKsPlRs9LC
r/x4EFpM/T2MbPV3gq9Itk6LOlQyDll4VJHNg69K0xPDTLkkbvJjASDrfl2N
tFBcrpeUYgl9BN66OvCSgOzx0fArSkQXLTtew1M2vZLXqs0XdV7irp0P7rx1
/8x8qdbwkC4t8Gp3ukkN1eHF/kg5ZpqXkWxaXkH94OWE1wkxjbez1o5iezxr
/Tn9tsbIuUIO7UkGW1czpZeGFhc55mCkymkALxe8YisXuY4z8CGVWrMWBH67
3RZIa826xI6twPejsB2EQSS+NJZf+vRMYWQ8c2xk5ujQlGx/+Wb4ww+/f+ml
Dx5++JU9tz2ybdu+jRv3rF+/56prdl5+xS2XXHzTRRdsv3DtTWu0P/CGSy65
+bp1u2/e8eADv3/pkcdef/bF915785Nvvx+bniln5mXUCJqtOOksxcnJ23c/
uWnD3WUv9hoSt3qioFrr9arCo8T8c9ms7sv/8lTN03IwdzxxYFpHZrFYdnTj
QTEGVn/lsS7jUCvZcP3ufXsfa7UTWmUOgMUSNdckrLjDwVDDZhMaazhs0Vbb
LC/XpmhOr6D+opBkVv7husDZ7KyNhUWvuRob1oIojY7PH3j5w0su3n7uWdff
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
rYoLqaQRsci3CpPqHa21bDoyB+3j49PDx6e9ZrPWEMHOZzL5666+9fd/eKng
CdviLVsP3PfcP//TxbftejhXrIl/Zr5a3xaoMiguoalpMDLUXLqsws8iv87H
2pGk5FLT6foytFgD2xJa64uDnLPLM5fx1MDfpgx8kbLIYkrZyiLqStr84PK0
VXQeUj0dztRfp01eWqytQXVvaKJOm0SqQP05TIkPVzW30Ln4t2THgXwxr0NH
Pdy79/Hrrr01X2yK/srnMfJVKvHRJSPu1bIF02S3LLYUYn4ERwmTi+aYVi41
dRpEb+sN+3bc8vtaI6SUV5jErg6EmMkreRahrkTy7BYtWptBZ15mLo5/kRL7
OkrFWqOdKzTfeuur9dfuuej8TY88fODY0UldrK1QnMkqm/TV4rTZQc2uacrx
gu20ZL6aXdNzoJiranPuod7YFcvO6yREnVw8Axc9y9wXgZUN05o0Xp4Ay6Yo
PD7GZ8e1XjyuuWgNh/k44jZFdXT4iETEAvXxkaOizpqvNs+K1A5h8UxMVByF
ix46dvq+bLV23YPyVqyFVhcNbMs2kVW0JWDtohTA8axmuoC51xbqy9Wmqp7X
8JSUuvHYsi+Q8qCwI25Z3Mm6dTuuvfrWTz47WG+3hKlcobJr50Pbbrh3vtCM
+6svPP/eL//Hpbff/li+XG/FgQ4mBtKyCcyrLjtUrCikJLriNBdbhVwD26rL
aNEtM39FFbax+eA6R/NAgcFp0YJJQks26IMpNV1eYN/IkMHWsqyF0bpXsSpm
KCYR6epMWulwbRu1tQCa12KH8spRAhSXPB2mqu6tmIbiu1Ho3XsisA3uu++5
tedvnJzKBlGs+eJGKnNFHmtIHHgMoutOiNPwnv5jilAZ+9sNP+xu2nLnzl0P
NloxVnKomGhaR7CKG+JMKG0yWoxzS27YLNjUFv8QgqHOjBTTEPYOH5rZteOR
teduvuO2h77/7pgE9pl8Xm8JoDOP5uYtp6bSJLQWcgu6zknBNEjrDWgyaPMw
/LoNazNy+cQ5JqXtjzNaTjLLB2unh0GYdpqai6AYfdSTFGLNTk9OsF7MiQ+j
aP+QGHkIXlpkd3hsdGiM/ArIeoRme0h7Mo8PjZglcI8y0wXhPkoFV4EeIrAU
X+efXZDLopJjdmCekX+WHzULrfxWau2ak+yCV6SI6xs2VIj1IxAZTUzP7N27
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
kdBKja422nJFecKpvratjVta3mzxoDZjOhV2/FIiS1rlIYxGhQf5XiuszEE5
xS/XNRyGcNfZkqQt4jhIljXboyrcqIn6KMuKMOWSCStyR3jTlBEH/dHKq0qq
pTK90b6S2YF6gsEGTiCYLazD31ZRbnV6q889986a89Ydn5wP48SzCSie34aX
5jeEt5dRwpdHcq3H+U9umnqxS3Q7FZYhQt5h6eSpTz49fM5Z6w4dngqjjsTR
ZdfcZTu71DNX0fLh1YRc+eO1o8WR4/n77n3x/HM3XnPFjlde/vPMXKHkNYTT
BTRrFeyUBxFfJKyKVGEWiPVIxfRuuRWtubo1OYVPhuBqKUr7QLiQNVepdXaa
DVo8GRktE/wC4VmrwnrTHRf24l6zc9Rctl+KBOtdERXk2UFpCZ1aE7gFmygs
e6c1F636O0aK8Tg2OqGNW6KzmqAeN9ZanhWEDb+4i+LQyLDSCrkkXLKh6FN1
eiqMcI6D4ff0Zi2qqjPPDlXzrLwz3ied2nLnmxkTIiCJ34rDulxi3U7db7o0
mhjdOiUY/nyQJye/iIirCHipyPWWccjWdVdJLubY1XQ8SQ0pMm4IX6KMFU1h
oZsx3UJsAzqXU8Llp50SOggY+9H0mo1BMRS+V8y/GRnwiOP6QaCyQR7rVjoV
Xiu+TlUZRVr5a9DBGpCt7Bq99o37lSMemKVzNuoMEkklXxLGcZQs3brz/o0b
dtWaoR+F1GgzAgiggS8nc6xgclvcb63ZovqbUF03na5YazSYueL3rNpwQAKT
/srqjwenzj5r3aefHU66vWo6rlcDo8Vl7b/xBGcZdpvtqJfJtZ555r3LLtp+
7RU7Xnv5g7nZQq3ZFke9kC8UQK6Zr8QqfFUXCRF4mXgsIBwuVLULPYspV4qz
CrRpvxmsvYCktKg2i0qMhd3aWS4djbqSrTFlF9L38iC/GV0f3pSMOQ8CsbAy
i+lLUwR5ErKrleKZqYkZ46gl7BUJZlKaEx9GjP6OiUNWfiUERvJ5FCCDXD4e
1+jYHBGB1vmJionFth40FS54VMu1OOR6K2yH3SToxu0koNmu2ajZw34ZRFO1
yWY15Z9dmEy6eVoNNGkw266VGphZrAVlpbLug7L24B0qGFJ0VGnVncSzz1N8
PrLTpmxEw6wt9K2ac9EKLyIC92Xwb9T4VCgDwqbsMiieoowymJVjmiK0Lqpx
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
fhPPWmyt5pqr2vle2/Ro3GlKl5spu+sSyE6CmfVqu6QTg1a4d+dsHexNy6OY
YQmBhcTe4uqrr358zpnXjU8Ww06HI4ZmsfAmLZvIapp2jhYBV52l87dZ8bot
+9YxQAm/dQ44+qhDoh9JVNu58upbHnz4pbC7UvLEw/hxf7Xc6L759rdXXLHr
/HM3P3Dvs0PDMxKZSIRrxp8W50DVTD0OTqaMp9wM4nIK55JdvMsQ6hmQ89WS
2WHKulpGjUl7qrNothTzLPwuKMI53cc6SOy61HJSPpsRz6wN1blZ8MtltXgP
rIXCfKagvVsZN4PJrjs9N5gEMU8LLdvE3MykbqrCU5lZIZGx8BiLSkqu4inY
Toj+inOenBrVvg7ZJkSyjQpPaywsj4yLLcjqoim7zdinEMt+1a/1Tqw8f+Dd
X/7y8q++OR71lzzxikHLTzpvvfXZXfc+3Yo7qN62abZZyZVxQCkTLW4OUKU0
12zidxDYWpzlVTyNtaSBe9cFFOValUuiLqYXrlj3T1NDifMUagDuK+DqkHW/
4citp/bVnyuSxpzrY9tUauqQSEqJHDR9FBZbe7L6AUUYwOqZfktAbogCYl80
CEesjvOaT4mgkUVsLivlDLOLLuu2DJTu0zBvYtulXL5LfnTpowbiVldQVhkN
A93w2iCK4mT58cffvGDtltl5CT8jFy/zBA41NQWwpb/Kto/ks7ztwPybfJrz
/O0W418OX2RZF3CXMSFcXLd+z/5HX4t6q3FvxWv1Pv5saNPGu885a/3eOx4/
dHhCF+Lz/Ty6spHd8pgcQ59qupheY5m+aut6ZTtdkY0cijA8M6TWIEyiuZlE
NHLUeZSZtPGjqPAitVVQfm0hyU15kE3Ed1bD3gXZZ/lJgl+BdzY3P+3u20J3
PW9aMcVFp/o60Igl5llcdGbW7MzNKcuQVMFT0OaOwKvOmfxOTcFFT8BFT/JR
aAW8uo+Dk8xlkV9RXrlQ26K/sR8tdeeK3jlr1j/97J96J36u+E3ZPPmDdLsf
fPTd3jufaASdGhS2iRquvKoZtYw8KaqDUhR5dPUppKRq2pvXrLm8mW5CKPjl
ANLQFRblgmsy4G0HrRZOa6SstYc8kjkHRheky+VtceP5NjDHS+rmG9ohBXpq
Ur7aXES769tcjR2d6r76c7miKb4a+ZJ9X76zb4pBglXQlpfrtCB5uUWv1m4O
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
0lLYWWwGvWozLEt0FAWqZVZ8hcQgkavIj5JQnEAbaXCRM3nkjq/hcIu+WqSE
bDasBJN668Pb3KGL1tN8TbXJl9HUOu06Ml3ybmq8ZUgJIZ1CnFzAIkmij6EM
MvIN5VU+aSXLgqH6RmOSNfjVQamtN0bAgBOQRHe+DAIAWb6M4UKspiFFz9Q3
l1+FbHKajA+0siTa9FCBcQouJVhfTtVmkItHZTAWkY2InlNhiXmDWCU4jILF
peXh0ey5Z2148IEX+0sneDLV31h3vL/1CW3iz3NMwxi0eJA6830OLBIpy1+u
s7harXdef/Prq6/YfcH5N/3xj18feOnr69ff49W78gcve9pB6seR++0x8h2U
zq0QC7Ml5q8Q6chxkluxXhoRsSa1StRi5dHoLEF2OmtwBtHuuCs2CYz6WDKx
sGn2AL/6WKEo5wFvwS7xwegYt5KXp/K5WTehGNgK46w6aR0Kq1wyRp7W+Hde
sVV+DcXiqCd1m5nMzMoRRXhmlkYa/M6OKbwzqAurbZaT5QiemnYS3Ep8MVOy
hf046EXLPy8Pjc9cec3OP334fffUz6+8/enee5+fXojefu/H777PnHXGlrvu
e8WLen43bkbhh59889TTbzT8fqmSbNu8/1//57ZX3/h28eRfq7hi5ZqUK1N+
/0HSm5wp3X7HExs23Hndul3PvvRWzUeSCtwFHTFvgd3UyTOf5igOooAiEqSk
mcJdt/y28CNfwn1bFwM7ojUKVJNPKeYBg1a4QeEo9N0XbsD0GmDhhJFh1pBW
Bwc1wOqB5eSmACv0qU7RuuPdgLA+Gxr2iTB0H6IWWucsdMS6Kb98FvInZJki
rIPRhcbUVottYBHjfhsxLPfjTgJLHIZxrN+q1Vw98dOnnx8764zrP/n4YH9p
FeSGbftCX++iljjt5idyc+OJaa62GbkmBrSw0+0unqy3+u9/8OP66/et/e0N
D9z/0vDwwsrJ/3j1ta8uu3xntiB/1qRUKdfZG4OeFlFh66KZkdAudBbTaZUR
IBvnTHWmEJt0ForsLDDpogrOG2v/hsU2lYsuYp/6m6ab0x9yqU4Pl7uWfSSo
KcQmCs6Y7BbwFNnNZ6cXMrPZeSarDbnYn0c3iOmmzi5MZRTV2YXszEJW4Z1T
CZYj8vIpJLgmNUCeE7QFYcMvdlgLRpqa5eBpddemLqylJV/gFfMMfqN+0lvp
NcJk333P7r37qaj/1x27H3nupc/ylZV773/j4gv2/OKfNt7/4OuR/PXFdXei
diduikFb7Fdq8YbrHrjowttHZ2rtTk+iY4/ylETy933pj++ecebVF12ybe9d
T3z4yXdT84W6mtJ20JVnI1WHRAmVAFxYZjDeBr9Kd6J0ywmRYI4Y03DNYJmJ
Lyu4Ci90toVnETKbLLGA7LJk8uWVRAqZAtu2Owpdk0Qb9ALyaLQy1MEEais2
GwBGRIwWGqBJKKpqrm+O9/GbBgSDYdsh6ZQXx61A2xSWnQ3knvXTr6XCRmYO
gslBaZHI2maR4yiMVH8jfrr8aV9+9eML124dPZ5dWlmlA1fGEfwGasLDIImc
7Lb/09Dh2xgclaxm0BXNXfEa3Q8+OLh1873nnbN53+1PHT0yG0T9uLu4uPLz
O+9+e+llv5udr0edrngJH79JwogctUn3DShmC41DGM0hZXTXUJ1NLkunjFVN
7zoS/giKqzZVNTDSjtliKhHtxDeNKuA1c5q4oAey0wXsF1lsMlnoPKc/5Nh+
KTvafJXVShN25kFxdg4tl+RXl6hd0NstqX/WtWqzM/MLwq9QPANrTW0l41Th
iZk5CvGU+uppKLWGyeNIUyPBxSLypJhn2cRFq5HuhLEivPSn97+69vrd77x3
8IUDX9x402PXXXv3L/953S/+6fp/+edrP/vq2MrPP2mUmoQeAtjlU6f+8s3x
Nefu2LR5/1QuaMQd4bfcrIuKhd2k2mg+8fRL733wld9d+tv/+Y8T//vvvVMr
rU7cEl8nzHY0QIsVZLl4gqgbE2HZ97l15LTAabRvjzcstnxsofLlfjQGO2gA
W+VIaAJxdNqyo+FtSwU0VNkFTRqQAigKcVNfEuHHgGrbMnGlAouIG8JH16oH
feLg83w8qiGnkgIBnkAP3I6iJj7XkcLwk6knNzvJx3Hjuu3mnK2LmhEFm4/g
u4l5Rvwbc+v0V5985q0LL9gyPVPu9heduPspSENY7n8oQplUts5hNEmzsJMs
njhVb/b+/P6hjdffteasjXv3PPHjD5NBtOgnXU5tWFr96ZPPj65Zs/Ho8HzY
6bmmFNfr4kAm1GaWtBrpJg1zCRMV0wbbM5NNlGiKb9XGxZiwWS1hnZNU5Ft1
uuzasaxAV10uCxa6yAITc9FaL8bJC9inFnOtDyalM7ksDy7ARWcKRn+V4qzQ
Op8xXdNYewcHZdMUlui1FptyVoiF6IUZVWGFVyLiSS0QayxsdlSFZ1A7nhnE
yCbZJV56Sjyz31WERYIlChaCOkvdejt49vm312/cd899r++45dk9uw+886dj
k9P+0PFSrtIS9ytAtRRhf/nkic8+P3juOVsuWHvrlq37fziW7538e9RfjheX
W3HEJE+y1P+3//gPP1mcWiiPz5eGp7NT86VyQ92p6G/cjWWTnVC+CVEFs9yo
wrLTgi6Tbiqs/OisMivXJqMVtlxZSpj1mY/SAFPlsq2uNWprnOs7VJ3R1UA4
MgYYJ+CFKqkwusQw0EcRcZFjaiVJEYQNv5QwsM8Ilx+deirk0NF2lhgi6Gyz
CWbtj+20nU7JNKu3ToUDvImLfOVk5RFvJS5a+H36uXfWnr9xarrQW1wi7xod
y2/A19eKf467nbT4toK2E1/Krvzb+8sn/Gj5ow8Pbd1479pzttyx67GDP0z4
YS/s9hptMymy3mj1llZ/ODR91hnXfPPtaNRbKte0qMTk3j9sKsEIctHO2qw0
Btlm2mkTHbsUFtPU9ojWMgA+Jq8Zd20D4YoLeF0jJdEm1MhrlZm/ytqWaaam
nRaz31KFGIUntn8sYE0eKrIwTttso2M9OGemPCykN2i0CPH8zLwY6QVRYYFX
w2HksoRrpLZUiDUcVoQzUGFWl6anGCPPygnzcNHTE3Mz1N+wnwi/oDgSCV45
tVKq1d94+7Nbdj22ZevDD+//4KNPJ7/5fmHP3qfuf/g5ARP8Br3l3kIud+7Z
V1184fajx/J37H3mll1PffL56Ht//uH9j79phBEKwY3eyuKnX3x3xRU7Lrno
5vPO33rBhdvO/e36Pfse8oTCXqzOOTb+mcCqkUZNmQgrs/IoGo0TqMguzUXx
Te9b6kX9Y83HyiUdGwCVxFBxps7S3MI8a1a8qeZc3jzCCUorJJgkqojjWf0R
ai6f6CNBBEmNTDTqp3ikG4fc6xeQd+YOB4SWwzmEdkeRi2rJizPbLiBNjw8E
0GCLjYOJ88M8Ryy0arGMkYurjz/15qWX3liqRsIvrTU3y3LkHAKQj5oyKHY7
8sVkR75zd3llcfVvh47M3XjDA+eds2XfHU/9+MOEaG6yuFz3/ToL0IiUa81G
t788Nl48+8xr//L1UGdxteQpvzVm9jS34JpOW5420g/635idNjVflH2d/toq
8GCRE1aUOOGLx2GhPQFQQHYpLIezLR9XVaPLJnets4mxmlbBlpPYhIloukKW
C6wLw05rLGyXq0UftbHWrl9LDLMBFjtOf2mwxWzPZbFaNYy0UqzYCr9ZOOqs
VpdmM1MGXlFbBRYCrQGycD1l6Nb2raAfC7lBLxbxFYrlx3AxEVI6S52435FY
9U8ffLfr9qeuumbvr351zS9+een7H34TL/Z8ANVZ7MzMzbz6ylvHhscXV098
+fXhdetuP+fsDb8545pHHntZrFTQiSQs7Sz1X3j5rS2b7nh0/2tvvP7Zu+9+
/eJL77370Zdxv6ftXt04SuQyCxU3gbSnj6rCANbIsTKrj06a2/EgEGbOyocc
83wKtHy6ICPQSVgnV6MIsRxhWKrAhgYrkyWG5jo7TcZhuRkXw/EqvPIFYoKs
m17/iklTuYtYRTUxqY4APkcA8B5xDNGXiEclyOQFA4LhzgI10GXGnizRpshN
jxUKIz7URL72HURSoySBRkdLq3998KGX16/fW2v2kl6XI4+cENq3DU2+2gTO
btCQsLq3LHb473MLjQcffuW352y89ZaHDx6c8qN+1O23gqCBJLnp3lSroGmu
pZUTk9PV89ds+vyLI53+SrXRqup8JW3yoWfmVkMPqml6oRbbBnKKbKWRnipi
xddODHHzv0yDFkCGi645bG1FSW+vxkTWoLpUHRSbClWKr+kAKaaS1ZwNgQS1
Nl6iu6Ng50EUM0xzcb5DVs0wstBZ13tJhFFK1mc1WF7IzgFe0V9QrCxbLZ4H
0fMCtYTMUy5lPa/mmbkvTXNpaKyTm2iefbrobtRM2orzYtyWyLQXdVb7Qa9T
84Ox6dw3P45U6v7qTz9R/ohSd7n387/93F9dShY7fjcen5w7Njw5Mb3QWzmR
LHblhKifdJZ68osNku7qT39dOnEyWVrqra52lpfUMQLASNNciqrAK+c7bLlj
fjRaHASA17f6O1Bk5rvwQu7goKreIC0DCaabNcEvQFPzrPobkOWWEWh9bBFA
I5ry6RKhx4KwE1M92Im16wm23AkZvW7LWneXbeZXklf5AJ9el1665XLLjh3U
cdL1XPJOfXQIM2h1xjtWbGPu8LQ46XQXT9111zMb1u9rtZdEVXlyiK9KWini
EYLlNsMBGUEX+yd//nulFj/z7HsXXrDtumt2ffDBD7WG2PGe1pJsaN9omcbL
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
zXRxi8Cv7AhECX5UKqHpyHQlQlPUEwsn3rgnpMRAmFIbUpHxSJAVahJtrXU6
a224ps7SM1vwHe/ybNSJzEUOZKiDZDkFYwxjT8ATd4KB10mthZE/2nAgwfE0
wrFWtBE16492QHBmW34JWFU7SY8hISw69dSoKn6kNY07HQbgPA6W9YWGa+xg
SyjHnX5XVPjET3/75JOjF59369m/2rHmN7ed+evtv3/wzcWT/193+e/Ts/VH
H3v7wgu3X79uzzvvfFWq+Isrp8JOB7KrmitOycX4LrRnyMwEIGJ8NI/5SJsj
2E/EZYXhiZ///ZHHXl933a5Wu6f5LtgJDYFb2tRaN13lrCW13XpEdT9wmquT
Fp0cI3nlQl23/pjOWkLXlsEZqJpEtE1Hg2KvbLs7qrZMrPx6ZkYhxVf4LXmK
sMtx2QJTuQSZ1uDXG6zpYZblqZTMJGK2XxZNmTgLdc6VOBVCVwDIFkWsS/OF
oga/WY2C5/MFYVYglU39s1CcN/qrRMtjQY7kpxYQBYPf6Xn4bc13LURAEhQL
pP1BIQn8CnTJSi8iwstdo8WO936C4FfNcNxXTpmsjiC+RM8oLI7YZLVjBBd/
77SElTtNaSXvMOQmzZW2zVavBzjbPDZP8O2ZEjvHHb3mY0aa9jokhml2/E5k
OTXwYpxJ0hFuitmO2U//cxAjmJGBb5uY8wdKnaQZT0LLuOxL0BrD9wqDlE5T
zDVQd/ijcc5xdNoXkDEhMbZZ9vWtup2l1dV6q3fdNXee9T9vWnv2HRevuev8
M3dfdfk9f/7z+MP737tg7e8uv3zngT9+XKz6ncUVDYpD+aUltuhmfg8skPkJ
AweTPWjZTpK2zhI2mTocYSIuPvHXfz/wysdXXfm7qicH4yZaPdHN1casELO4
AVtMm9p/zkS0NqJjzvUgIq7b9Uyo2uSX84KNVa7XXFOlk+aqxZZTHuicWYTi
kQruhM7GaYbA5Zq8VV2IS5WZqmzecFMU3QwmlpNyLq81cNScsuQWusyRbl0Q
ICcyLWgXFWHgKY/KKR5FhWGkcw5hoj1tbbbuGJutGj2ZycSWR+E37Ou+cJos
9+ifZb+z2qf+CsiygdluuKTJLia1tENjudcV/IGqFpsWOx3EyyrHYNDwa/JU
MqrLq7rxYhe1IdOzgc2Sy6DYRrJxKkxOE+rC50GYzNwXnkrwBWjpqUrM8ATW
J1NV5cvYa5Vxq7lK/yswibOaSWvFO6kTOpBUbpp4V8rIL/3n6W9lzhFmNRuA
V3UcvEZDKXaCZNLt2uM2wk2g2l0TjOu7IWElnlkwR0dW1O33Tpz662uvff6b
X25Zc8bui8+7+8Lf7jvv7D1rztp10fm7r7js9udf+ChbbHcWT8TdfjMI1Qmw
JkVZx9jlDImL2Um31svC0PV6DVJtZtJEsvLzv73x9l/Wnr8xs1DrL620uEYB
hBvkauMWO98a6KIxReF22ywJaID1Of3TTanWHzH90BWF7WRhd+eaBucRp7su
LdQNm9Eiyw0gXAHdQnRd9dfMFKZzRh9mpey89D9MQnTLatFUMxZGm7S5+wP1
Fx0deSqviX/Npj9mwG9GfiwVM8UCcQa5bqeQKRbnS6WFcll2iPMs/DZzU/Fy
B0Gu7PSwIWHFzNVy18S/cM5Cosk54yl0bvQS65z1x+UeESY7rDeFyGCbNBQD
ZKh25CRMRTlWH+44tTXlwfuk9Ncxa4C1pKdz2qnI2uhUBB00paLTqXT7NmEV
hwMYO4x8B0QPGFT0IpAbK2KdwOosehfjxChmEth8V8qHOzdupRlfj5BSiH3I
KO5bpDjLfoKQlkKMr9pxX5U+PMJHi4MViHqLi41WsnXjvWf+cvuaM/ec85td
v/6X7Wf8asev/2Xrjpsem800+suneiurYdLRL9rvyacn/Z7FtgOXclrUwOEI
PSrsvYxd17RrPAsZiSdJb+XkwSMzF67d+vU3oyd/+ruuFQZVZQtWw06upIW2
06WbTm0puFyVt+ky1WzqsJOCCSA3d+cag61dXIuJLBaLCXWF93WFncZE4waw
ZUbLM3VhOG1ksOuDecSemxDhJhdX3JwIs3Q8QmNOYiK8ZikAnfJQ0PpRXlPQ
Qq48Zosl3c8ry0quApuTHdIqO4SUUFOCGSbrTqEwpf7ZZKgU26W+2ZZ7ZDZZ
NjFvjB3rqLs2KO6y+YrkqnnWZq0OVZhZrEiLSh1ThOq7TQ8iCw0BwjUDjmKG
zyY1jR95JLJe2nV6uB+NxNtOElVea+Bj22eC4x1ehy7mtYY2bXo7NtRNcw1h
7XTscX5zfTfGsEJu4nyvHKFG07FbPQ07SZj6IAed8ecpfu2rOi6HDJZVUhNY
4tjJNL6PDiD4NaZGIR1whMje4pLEnpvW33XGL284+193nvWvO3975u6Lztv7
i3+67u23v1459fewi9+8jbj5T0O84OKIxObbXbrA5cDjwPaLMu0mih/Zclhb
3m9xpVKPL7lk24brd83M5juLiy0zmbrNPjcuQmJ70QPXVFlrm+VNXF+WrQuj
0oQKFBNcLC3RFdctrakphyg8tQZ9WeKNU0sEkN+6euZGUxBmpweX2CqaWyyV
UxOKT5tcjJBZ26pLdipiCUv6mLUucWNiTk7k7ZbkCKYmFZHIUuVVeEExWC7N
K7ZKrlAMfouCqlA8L/tFRMfIZVGXZ/LGQpseDHXRXZCrW6KPXYa6kasfWc1F
zNsxAr2oYtpd7qmFlseUiybUyaJCGvRTGCpu4qt7stFDygaEEUdTbe2ZLEU5
oqPTw2qjsyw/0SrTCfC1vQH1UR/m3LHToXc1l2vKDyc4bQBvDDRCC+xpkt0j
gN0YljWG6iX458iWLPY07u4KdJpEYiLIjhiRYy3FLzE03luMcQwGY5pneefu
YN8QzZC5b+x3bMdD887dLqZIJPc/8NwZv1q/5qxbzz1z12UX3nPO/7px8/o7
S+V20l+Cf8D3N59urHJkxxY+mm/LLx8PIDU5NIDMH+0gIyOASPmSH3bvvmv/
//1//frrrw+unDpFn8xJIm6SFyvjZhYYOlso027ZBCPNbbciSsuunD8oMHnI
Pzv9dbEzi02a4HJ3p7KrX+LWkHK8UVKQaxL/lrl0fA1l4tM7LVMra9n1PSrl
/yTK5jZqJp1VLLDl0k1F1CxWWcGEkWYVSbS4lBV+EQ7P5cGvKqzaaeIMz6yp
LYF3oayinEFELCBPZ3OCbbLSVyVdkthWEU5WFqPFHoFVt7zcGbC8ZAJkfVzR
PFWM4BecauaKYW8H/ZaJzmACmBrq9nCZURO7Dl6JuLUdSy/gkEIc6lVkCJU3
oYWmmoeWa8OsVdhBlozYQnw7fUFJp1CZOLobYooE8Ox10te5UdjewC07qN0F
rHSYr21GG+5YfJQgcZ5iQRNSLyf09MtL5K5fo2vO4cBlWesQH765k1F+NMYE
I8RCcQhHLWh0wG+np58VD4LT2A01vsat5j3l+l8+dfLgsdEbb5TId/uv/nnD
//rFho3r7ljIVJPuoljczmI/MoR27b/RjD886MNjcB8lPzNlKbLTl9SE2EIz
0/jaGBPqPM1WGPUXl7PzxWeeenFmNiNvUjcrCwWpydch53aZFlY20qDdhYsH
2mVM2qxV0W9DrFuuzdIuiKfNWt7gPjiyX5dn3Qwmzv2305pEtXVT5yz7jWaZ
wW+9XmSztGnWGqzsMZjHNJjZNFBe56gd6Qx+8yYQVpznyxLh5iGsYq3LSi78
szwaoo1tLuqm4XAJcgxfrYZZdTlTUoGeQ9ZaNgV2eRFIytYXcoVfkWArygN4
nfgymBVrncAwu8iX/HJfbfYyxHdRh4VIIaV6CmJ6nRhA5HhP6ZYzUR3W60RD
MGuJU5KtEa4RcZILwU3cERsyJxxVhF/9oGQQKfcSq24dZ4ydCOoVaxXQsRZ2
3Mkd6/DNs7E9nwEjdzraZtxNExopDr0U5ngHGy8QOnnKBhHd0H6cQiqjAQSd
YW8Cojv4FHMEp4V2qIkN/rEdB8TB9rvLS343GR6feebp1+++88nnnnl7djbf
W1qVKzbodMyHdim4iYtoIvutaJsTfCL9Q4IsGf02G8slNrfmH2ECktWtSC10
ECXi4ZdWTsTdngor5oPoYptRaErhcXRaM7lZ9iRkL4fvFrKOzBxt20Ae2HVB
W24Rnjpct51diJKxad9quTva2OhY9Fq4lh+blVar3JQdeWFT793cMEvH2wKT
V6yl5ztUybWjeLD0pXZWa5dIzlWHbR9mDiqsJeByaQH6q5kovUmioC2YlzX+
zUu8rCwzZ2VcNFJbIriKfMFKM57Vp3BmtNQTfplb1rBXhHIZRAuJesQAO3DO
y5DdJYlzu2KYTcxr4e3YsFfhXVYJ1oaNpb6O8+ay7zm/Z4Z9eEsNh8EyFEre
oWswxIBAQrnDaNfkx2x0PEh0W5nmESPNeC1AdkG3hXRwJLHiqBczrl7KpfX2
Vpp5crLYpwpTaukoYlAcWwsdmw/qBJ0kcgftuwkUkeXO/CqsJw9VslV2k65T
bfNuRpchwXDmRh85aDCLZdy7HZQSna+t3VZBFAtNIvrNQFRPDImNmvnn6Ju/
iBl/OHRg3OhgrEjIOEaMyKTaTH9XhMpXonkADSJ05Fns6yzjGMuAwDxoJ2cS
EV4tJUdm6pZraHEzQdh9ql2doJthcptLg9olj5qppT7dcr4uYeU6qM3tEa3Z
hkaLEJPfhipvq6XwCsKNBha5FX5PT2ibxXmMFvMxPUXRrnJZdtMV0ytracuH
dmZWcuVKtoKtXBF455Xl8gKiYOayFpiaFrplX1PNpaw451xeNVpts1I/m1cV
ni8iTQ1dFtssgttZ0ZwVsJUdeWQKumPqvzYKto1YKCeBVgdvAqiFO+el40Xl
V3PaIq+4vEFxx4aHfWdB0ciBaxujAV0xPTPjX6fyJJSfyKdcWG1ey+h7kYMA
oO7GAzU3F2fCjDG+TC9lF12sB2HqdtJW2ZFutr4yIs/yn0YqY4enPeLwBN09
UzijEwaAAc22SwVwlEBMoRGuUXA15xT62EbBipVh1iUA9VNArvkXwefE1OUG
liNrmfkaHWyq/h2N0+VLdpLBd+7qfKVup7vYV5eOr6on2D8WR4kQ2XUjxwzV
dd8k2Uh9V00+uZYn9GubbnO4ZTaE+7a2zjlfJrVolzjAogoBZn8QW0Nua5Dy
Gkw/RNTccnkwAs7G6fQSW+iablGCy3XVXDHSPAIVNksEVBrpbHadVSdTe2qY
CjLnCP+XkTK7poXcbKmcL2uXtYAsDOaE5Wol71WZmxIJdi56QS10SRwy+C3L
mVl6bPwIfvOZlMcWfiGpmnNW0EzyGe53pW9qweBXJLizYoJiKLXKa3elT36Z
uVKmNJrGactGN01a24gUcln2muQ1pheqPKssKHHyVgkbOFEJijXxZWNqgszT
5KPtAOL6vhKrxZFt4NSv1zNdnZwMRegcaxw3kn4fV36fvpE7BMHFg+ZZKiz/
ObpBaIBPsthzL3QU42S64i4nFOg7KH098pswD9A1uTKV1K5mAE4b6IxwGzVM
rJ1OYGbQwGbGDR0kl/r2X2dewi9J+ZYhVE4wDtkeMSluO7hR5fklY4unfB+0
oyDhZlPckU1YIfBX8XXGniOMxP6KtrLcc55BvpVZiwz1qdOaVNl8npJj5rg4
C0wshDloI+g6bpxh27fabsluFxeDYr8GzzxYAUD0tyWmWmVXEAa2ArXu6KSJ
9IrTdt1pWO7Bij1lNHHRS6dVmKvnpfa5soeIssIrDGar5WylnKtWZVuoCMVe
vlKRQFhcNJqute9aBRq0Krbo9Ji3/GqOq4gwGZtY6EHZaLkPIV7U5LPq7yJy
0abtKrEtWGkjHaP4K4h1WfNd6kVGsrvpklOy2tPBQa+ljgmsTP6ZdHQMIzTe
NgkG8e1QtZUIarp11AqmHTTM0IGDp1Wi5WA3TnpJYtFOnCaCVmbVnAc2eC72
KWQDG9x320BtT9/vh1asO3aw4rtFdpSIIZdyAVPUEvtjx74Pz+8QHCT9nAGI
oMjySyDjfFXHAmvcghlPzDiDXxp+byaS7diRR+PxyL7EjaJ2pOpZ52/T3fg4
jBg2Pc45ER3jmlR/bbeJfrFe13V+slRtrAL2+a9jKM3ZTJZc09Rq2+FsA1gc
WbEeTA3T1BZWCkWM3K7blX5dNzVj4cFCtYblhp2vBHgV1bbsiPIy+K0i+AXF
Zg29KucXA23ku9CZic3emKmWiogrbvXL9C0hdPqSVxNaFVXPK9RUefGj8pvj
plFwJV+pIqlVFL3W6FjcNTbBWZUaCKt51jC5RNct7hrASvy7yLQVhFjhZVKL
+kvBdVqc2AYPsh8ptl2UnAg+nl3ByWj24Nsm1jw7RXOXt0neLlmEIb7w5Apv
TJvKRq+UaXc7aWBd64gZUpDI6iKRZUeJ3v9f15kgN44kS/T+t/o93aUqlUhx
E0nsC6Wec/xw94jIBFVjBoMlQRAEpHzpHpELr6mhvVfpRCBsqqOqG7j3cvt4
qRMkVXZQmMR1BDUO4rY7F986UkZCyd5lPW+I8D2+y/ltWzHuLYw3Bd7EicGW
oeU9wCw57WIhOsGrKLjccN95bjxy6VXeu9FT1A2U22Dl1Vu/jqEqhf3ImLdr
r8qTt63Gialw78pLe6gYRdZopZGTFPb+kaNQctxXRMTFV39Ql0V0rD1Iqf3Q
D9xcokPqovXhwTV/6Gqbpj6+vR85M/H0G7+2dt6fzoYwXxrRJ0bBBxzEy4Om
Mr1Wea2cH+G/v6YJiUVzf2mhjxcfk6kxIXss62Eh8G73st8JXouC/xbFKnOz
04xKU2Hw+wOprf8LhL0XGBTDNnvK+gVyfCe/zeIUO2uA17HNFLTJ6N3D5C40
Onhnr1MZ/oGXvaS8GYdrVOyAor/VjERtidxX64nl0Y4MxKdrrUCX7h3NteBW
XVcuzTwTR5gAN34b731ubuXbm5QnxxbQ+e3Zrco8J7B4dxyEsNoTe/mkxaa8
93AL7Sh8YFZxKQeq96tJdolGK7kkI36pwbVVPtwdSO886uah8pGIi/YQH7E/
VHXb/b2KFIrKB78eUPd52QgK1A7oDsmg8uoyBnexLL8NSwxO22Tc1bYTqp6Q
b6HOnf0T1e1FWivPrDHhPrlDq6P41LCbZ7c0ei1WBz3nqvtOLn9B450LhNZz
mnaxII+GVUtzhScK57P2MNJ00Ybw/nRSFKy9nPOv3Z7ZrSK7PunpvfwexKt7
aUxiQlcU97ZpcY+f70bu29+/3172+3+kxaHI8tKgGDbbtPuN05B/KzVtKqys
V/YF/6XcNUJmSDDoG/rIXPUuxByCZfw20FBO0h8QEdtp7TrpTMpuX8gVy/zJ
M15k9H7kARW7ITUKvrRXzFvpBevt6F3Jt74JlHC8te+d2m7pxa9QzREj5UiU
b5UVrwLklsYyZFSXNQx1V6MMZy8PfNdt86ADGzp7LzBKfz26VJipB4Rkjx4R
Z5qrNFbqbAqEs+yWIO7Qm4U60e3tT5u3amW/B1n3zt+y5sWeTp4nDIa6utoI
2NvqeYdb/LV5Bah5Ki/BdP/vEszc+E2xvANu77qviNQcztFntddxBMKarlXN
HClLH9yvCrS3A+RunDaeC55wMbHLOQd4IG2lRfhjvRT9iIbnqC8asXnBIrex
vWOWBPgFtjDSJ8xeJLwSaM9oMWreVSM2ZcI1CSIW49ppTLVW9vi1f//JqUwG
sl3EXlrhh73c74SqlX+QXGOZivz2sts5yBRiE24sxsWo2cp/M3D+iyBDgokw
sl7sb2oWCqWr8NjMo0i0g5y50DE13eq3CJtZbCJMdqWeh7JNAFY9yHcPn3tB
2k2jVSfbQ7aGLmFxkCUWzhFHU1u1hOb27MFUVZSkOqrS4s70PYiW8fbjc08J
bqJ7C/Dy4kN8aVtJW5e1V/cjJUWNfbq93MY+ZTp1OdsBPqYepJcDF1nZCOCh
ZC3atqOjZlDcZwbMzrdHDnKjcdP3xj3fs+ng7bXxFUl9y5u50WPcq9Yp/Ez4
gSFFuctwwE7IOF23d4+4m8rrsptp8Htk1B3VLoDtI48dCp7++RodymUeVptD
UhufLn3z6PjDp1hClI+xLmh2B+c4kChoze2Llg3BotPkV5vprwj1I2c77Wrq
LKL1riQbLJ9ORDh/G6Jsr75Wz9trjNjMX1jjUEwDXLMhsDdUOTJk9wOoIvhl
4c2Q/MFBIz8C4X+4Hlc1B7nwbuc4wj9fDHM67Z/tQq8r0XTpVAqLCBPYJjy2
uobdGNvJU5ywkPrBtdgQ1nET6PuoWj2obrfUBVWeJv0k63MWoMKwoIMrkavJ
yAppddshTVQbdkOnBLdT385dTKww0Wk8jA1Cm2BkA29U5tK2BH26B4p1NjJD
3r8UXI1MEwjHYw5xqQylqfvxcWO2IymFF+ldMSouo/mnCHvAO/e7zRik5V+v
/IWT/TD2eTAc0ViaUPLb+aNJebuuG9z06vaapFV9QxWzN6ptSK1bbufX5J59
YT4KNOaDxCDwIDdGeV1jrCkHtd5i+kmjNU8sZI7VuUun0tGXKfvwUVscHyJ1
fofg4nfDObMpONXBi50Dfp3rE07mWM2Il5np+k0hpgr7UGpNdNIUiVgAxNcH
8J8d54Jdv8Ds/qcRbeX39xcPgaHFP3aG5G8RLSG2037Qfotfp/gVoiynjZQX
Y+H/vP766xUqbAgble0ydo8ZDI69S3AYY7wk1Gmt7d1U4dvcp/JqUxwNfkm3
8z569VatVoWUAFFQUJekWapXbXxEB/Gp+CBoje6qmmLFvPkuThhcZW6BGGrm
mOrZpQGI2t5ltXf90kvT03l0mgZviPIOFaGnKIe+D0311E60PQv/AtkgNKG8
kGDeJFgmIxE4l5bkSYvxUFN819hHhN7X7YyeQves1gMfycZKjc80ZDOlP0La
D4W04Q2iAGx1pC0hvB2ReY6MuneN0VdjZHirLHpks+nAc2ZTPaS8mrGY6hyz
I7s2502fY3mB6EeO37O4XXOFz6AbIivMOQjkRmY/xK+M9OHD3LiOHL036kRg
MUvxoAQX9qej/0Jx/ftNnCIhda6M9Bs+SIR/vr8boSGgIPcFe6D6g/CK3x8c
xmlCjPNBrjnnvZnkH1DkN4XA3utEI238WmhsJ7TE06JaQ7gFvEPi2S5T8mt7
e2kntCv5ndxa2wfvJLqpjXTFu8rtPBoFpdoHzszTWqAKp606r5opHWmcr2Kh
261/rlU4+O14fh8XQUXt7c7Fmh8xyz14rngM3dR3jRuiMwqW89ctqT2pG6Vm
VBwN8eriSeO0QfgnyGlF7FK9xLfvh2l0IR6oyGI5PnJzxztkq6Lr6CtSRh1S
v74bAIW3TaTK+ci9km+1UtdNQZqBcj9poZlbA63MRhZFhs0Oja62u2fvO+eX
cfRHpzXQNjM4rr4kms+w5ru3qyZDNc5vmb8ZAXKs1B3L9l71Wza+IvfRx2hp
qZ8L4MWSX1YG8rZ35T0zOo4pjYbqO3WZnCI1LbMNj82uZO9ZxvJch7IMdSwy
D3hR8AzY6+EI/d3vfx0gwb8OwJNCjNFfLwQWUO/3/5BrO9nw/IfO+W+iKvEV
v0xWc4/+JnQ8EUyjcurXuVtBKPar7WfBS2yx2QkOO473gpewh1JvY+EGsj55
U6A6zLoNtcXLqOpWpgdwpY6K2lUAtpOzb4R2W2C1l/LyhCl5QdAdfnIj5WFK
K1R7AZgNRVBWmhFdTYF8XuTppR4ND0UhVkGPTPMwhs32z47zaAj3hBcbie6C
625DotArVqHlxb0NiSbIH9kjhaFuK7Ll0dPFH2GTxEuKm2hG0iRYC7MR4jDn
Hf2Dbh7vjj3Xig+bER7gFolrkJgTptjtlaPFPsI5Zx/9R5e+unSFX3yBskbL
j5yqQdS5lHeOzIzfRjfSTbKvVGoVrkQYdlojOQ8Mhw+KhQn4gVCbNBvFe3Y2
Aepj/CqE//64fvz0XRnpWGR+/8phXb85LeLVyD1goKY20rpj2LsTuS/vLOx8
74pMp42gmBZaobGJr3qgfnC1+f/8em3JrzHbkGIZaaNSUOsgjrMswMkvaO0f
i0HHg1PAjvPlpa0RKGmxZexZsVWHxW+TrlshNvc4ZxoraXPKnBec0GNvyAe/
vhFPfbyLWl0Zb0EdHmAs+phfYZd1qMUsfQJveEuuX2So8dFX6GST+3xMPyc+
FeoZHxl9M2BHa3nGod56qXDw2xZPPiqQz7aifF3czN2VGienFrO1LFnBpjIb
ZfNgfMjEWn0/alhu7Ki6p2PpDViXacTLfddHVxHFOpJyVPCrz/jIUWdlzleO
Pr1VQ1O+TWPEiProMvYZyqfoUD77UsDX/JmbIzkVvOD0IxD+MGb18koVjiUF
8O5VXOd+z8LucETK2mdDxFK3/lMRR//9YiIMWqW/GqIJfjFL4oUq/JPjruGf
mYL+yeCXIXBV2Hle+u/fTu4PSnD2N/3DdTINYWMQzM5g0zTXyv2DQqwNzM58
C+9CptNmr1LqqUmiCT7j6E6eXLosyc7q7YjNnuuW976x9xmXmks9V53s58kh
cn4DcIFM8SXRjm2Ke01WzVrWdql/XLn4XqlYxcuge+jqe4jrm+J7Ia9DfuuG
SM9btV0lNLZ7ttru/nn0cksJljT3VUMBKsPD6LN5t3II8UR/eFK3EEFr+V/o
fuKW4poy9l3nNsNvTHcltLupiLjDS4p1jmx2x0IZEhNaXM9WLuPDqx7qHN5T
z8K+tt2tG2IhhUbzL87VkMtqNgSyXmfI7t228w2bpkRJhU8sn64OuL3LaRGc
9ojCVeRmggsW+owc195/gtyHhbx/5Mp7HKKJhbkOr6fTK8aHnBxhTnHS9hMW
+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
d85BukQ2u5NuDIeVkSa5eEtSm+Hwh4fAIPdyayJZHTkuAxm/ae7jqNMwK6N1
iYNH+ueDGenr1Wg93u/vV0MV8a+9hJG+uBBTeQ3nkx3xvHTI7u+zJ6XFbD20
A2hToxPql92+XQyZVZ07w3+/2sfK/qOp//chC238osxw2EBuaLDFuyTbsYUW
lxA401lCODU6U2HcZnppP9njZQ8G11KR1qxXSwy42tQ01dXaCta1rnvu232u
omwEKpmOoFvspDT30jJZytkw4Xd5x+v3tsKJntDIrE/kVoa/NE3T55oOv75/
3Imeju9Onw8/ztSxpHl+LAuoXCep51weBEfmeeZt2DabLi88J6DuS8Zv41v0
vFM2m5UVR2fTY4v5Mnu2f1kEb7+AX/yh1oe1dUqtxxCvKaTZVdhRzRA4sE1R
ziM3umtXZMbCjUuwu+ubD9PCduN2DcZFq7y0+oXVd3wpvUsts159djmJaA25
PN7ojW+3QzV8mpqLtw4eF98Pt6uANdW2k2WSMwq2wvv1uqcWwzZfXI5L19LF
R2qB4uPGRXPgVjUPcbd/2R86+9eY/hpBXyC0//psViSfTX975rJ0vPt6KLXV
c6NYZ9RcdDayYcUP47TqeOCc4jullAfCYKQvse2iLHTWfK9sVVom0N6Qm24w
lGJOpz0sT/ryP0LUGFGWKe5B8zvo3ovolGpMeQru0jbHF6E8Bcuhj3PPg1NF
dLy7uLhHY5IXiQiXSkp4mTRe1MsDFY7GB51QcdA2Pjtleq1iE2P8sY7F4fAv
vwBANVNWGB8Pw3BYmSqc69ik7mibcYLZZnpjIKzNrjAZ1FXuPaRZeyBp2jqM
FOXZfXJ46Xx5DyFuxnDU4yi3rETWLSLfBoEwANx66e4jVbhro+843ops1UcF
NYLikGmaZwzqMCRrIUb/EQ9qfiJi4dvNCLXN9Hd/BbZ6SYQhwe6fOS3R9vYW
M1fel/R6zERWGW/pPUqR2gqEjfcLU0+fDHiVcF6bB9PO/z6CX/Yi/Wuh8cP2
7F1CegqOupJXpb/qbiZZ4q7KM9eJ7r6KqQP8JQZaF4ON41UUmUQo/ZWueIvw
UlKsRsdnkfKqyhVnWwt0Lc0a191VkyjZyKw9w43s8HI3rpGl6retjo9V8yI3
WzUURYvpe0sDku5Xz6vjfVIJZleml1GY3RIvs/Q3Hn9cFr5cHe3MlVU5AVxq
pSLzDxUR8SpUh2UVtuP6YMsJPK1sx21fnh2S6mLaB/i9a+4cPeATIo55CWtN
27y10CwvyG4RcBGdoXEmspiyzsUBBqrweM9wOEZqRZzrwzw+ushfyT+38tKd
w9u2mb/S2GlTz3NktyKXBQt9updEluZEHMUvJy1iUIcdMagN5+ZOcuGoyS8D
4YvIRdewfdDKBqZCY70lITa01eEL2xzkUoJPHJeljLTJ8cngtTp5t38EvTFM
MuzxKkJpoc08o0dJIHdf3jsMspTyCm2t81TV0I45x3jEWKw5Op7mzjFfQn9n
75D6DHgfSr9UrX3kr7b6K+Wq0UiJiUDvUed+a4P93CM8aJRCNaGjz2lWi3rH
xja6pz0mVdi+bOCN711Ti9UEjeWW1hDrFZl8uYtHOa4tTLhfwYFdlKfCnhSv
2FPKXUmZ1FLgzLD38fSX0Q1P6uE1Z/14oM/X4gLHU9iC1mHRfpXChi7XYTgT
AmCWKgyEM1pHRxIy0i7Ha0bHGfnKITPr5XkJ6q+mQ8YJmYuO5YB8mQWYZ4uI
h+hXGpNfl9fcGBGr/FE6f7NTyZVXx8Xv5eZzD9VZfG7bFN/sWkLOqrkf74bw
bR/8Cmrz0nLLyjyrq8hiZNtyaIeP6ziCWYXDvz3+9cj39znmHuavJVKmye/R
3LIJbmP4fD5a+d51cqBMZTDmyvh9SJF9UMdXmm156SUC4bW2x1XPciSWqxFc
PvbDqY+RWlZ7vx4Y+PGIbFiGgZnUInFMEY+pkoPL0xKVf40YE0cmj47r7NDy
BHIhkRF3zmuO4d9lhoWmdfRuxb37xrN2m36Z52SUw0u+Jslr3BhNQjH8ocWe
hhorz4DPfrrdrUmfoitNJ+Q3li6q0le1xN9HLQmC3JnNwoSgfhVlA0JXAGtM
jW6eF8rxAydEN1zkBxbX1kWZPdwwB3KEvZndVFNt0cEkeX3KX9WzO7V4CEif
YJ7ptGMh0GnItbW5mj3Qvnnyeby5yEJ/2amkH7jxzJX6lSipzU3STOXV8cg8
3w3DS5udxS7Q+lQOkxa/x9v9HZwav3cDHJr7UWzzURTjhA9uwPldXpoRcUa+
PqIjO3w5NDoNswEe8xDt5fnX4YTt/fj/Z9n92A==
    "], {{0, 240.}, {320., 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|
     "Exif" -> <|
       "DateTime" -> 
        DateObject[{2024, 6, 10, 10, 46, 8.017}, "Instant", "Gregorian", -4.],
         "Model" -> "FaceTime HD Camera", "Make" -> "Apple Inc.", 
        "PixelXDimension" -> 320, "PixelYDimension" -> 240, 
        "TimeZoneOffset" -> -4., "Software" -> 
        "Created with the Wolfram Language : www.wolfram.com"|>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{320., 240.},
  PlotRange->{{0, 320.}, {0, 240.}}]], "Output",
 CellChangeTimes->{3.927019598533805*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"39865fab-21f4-47a2-bd82-897a662850c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x23", "//", "ComplexListPlot"}]], "Input",
 CellChangeTimes->{{3.926940254767016*^9, 3.926940261506386*^9}, {
  3.926940576711739*^9, 3.926940585942464*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"86963fee-b39d-4335-83ae-2dbfab31576f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.14971744732734177`, -0.18065201152957414`}, {
      0.17788319781644313`, 
      0.15299683407991535`}, {-0.231307954893085, -0.03933310701043787}, {
      0.14971744732733283`, 0.1806520115295724}, {
      0.17788319781645964`, -0.1529968340799613}, {-0.2313079548930339, 
      0.03933310701042647}}]}, {{}, {}}}, {}, {{}, {{{}, {}, {}, {}}, {}}}},
  AspectRatio->Automatic,
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> (Identity[
       Part[#, 1]] + I Identity[
        Part[#, 2]]& ), "CopiedValueFunction" -> (Identity[
       Part[#, 1]] + I Identity[
        Part[#, 2]]& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "MessagesHead" -> ComplexListPlot},
  PlotRange->{{-0.231307954893085, 
   0.17788319781645964`}, {-0.18065201152957414`, 0.1806520115295724}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.926940262069562*^9, 3.926940595102203*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"0a980e54-30e9-48d0-9dd7-b3fb7ed2cca7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9271020127616787`*^9, 
  3.9271020130051947`*^9}},ExpressionUUID->"0fab438e-7347-4680-b034-\
6a7ea546b2c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x26", " ", "=", " ", 
   RowBox[{
    TagBox[
     TagBox[GridBox[{
        {"0.2637626158259759`"},
        {
         RowBox[{
          RowBox[{"-", "0.004824671311807336`"}], "+", 
          RowBox[{"0.26371848637154427`", " ", "\[ImaginaryI]"}]}]},
        {
         RowBox[{
          RowBox[{"-", "0.1318813079129869`"}], "-", 
          RowBox[{"0.22842512587392752`", " ", "\[ImaginaryI]"}]}]},
        {
         RowBox[{
          RowBox[{"-", "0.004824671311777939`"}], "-", 
          RowBox[{"0.2637184863715136`", " ", "\[ImaginaryI]"}]}]},
        {"0.2637626158259759`"},
        {
         RowBox[{
          RowBox[{"-", "0.22597457298943685`"}], "+", 
          RowBox[{"0.13603753110670416`", " ", "\[ImaginaryI]"}]}]},
        {
         RowBox[{
          RowBox[{"-", "0.13188130791297595`"}], "+", 
          RowBox[{"0.22842512587396205`", " ", "\[ImaginaryI]"}]}]},
        {
         RowBox[{
          RowBox[{"-", "0.22597457298923063`"}], "-", 
          RowBox[{"0.1360375311066803`", " ", "\[ImaginaryI]"}]}]},
        {"0.26376261582589766`"}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column],
     Function[BoxForm`e$, 
      TableForm[BoxForm`e$]]], "//", "Flatten"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9269405038761177`*^9, 3.926940572991914*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"c4de6204-c34d-4748-bf34-991f064a6fba"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x1", "=", 
   RowBox[{"-", "0.004824671311807336`"}]}], "\[VeryThinSpace]", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y1", "=", "0.26371848637154427`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", 
   RowBox[{"-", "0.1318813079129869`"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y2", "=", "0.22842512587392752`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x3", " ", "=", " ", 
   RowBox[{"-", "0.22597457298943685`"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y3", " ", "=", " ", "0.13603753110670416`"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"x1", "-", 
  FractionBox["y1", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{"y2", "-", "y1"}], ")"}], 
    RowBox[{"x2", "-", "x1"}]]]}], "\[IndentingNewLine]", 
 RowBox[{"x2", "-", 
  FractionBox["y2", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{"y3", "-", "y2"}], ")"}], 
    RowBox[{"x3", "-", "x2"}]]]}]}], "Input",
 CellChangeTimes->{{3.927018729922481*^9, 3.927018804842744*^9}, {
  3.927102043348578*^9, 3.927102161036845*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"45a98a42-ac84-42bd-9543-570e48785729"],

Cell[BoxData[
 RowBox[{"-", "0.954215248335071`"}]], "Output",
 CellChangeTimes->{
  3.927018809085224*^9, 3.9271010818260603`*^9, {3.927102133952614*^9, 
   3.927102161855113*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"b630f472-b874-4bf7-827c-a5201333d497"],

Cell[BoxData[
 RowBox[{"-", "0.36452364450731656`"}]], "Output",
 CellChangeTimes->{
  3.927018809085224*^9, 3.9271010818260603`*^9, {3.927102133952614*^9, 
   3.927102161856925*^9}},
 CellLabel->"Out[52]=",ExpressionUUID->"b9337cd4-b067-45cb-ae46-c1183a9de89a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x26", "//", "ComplexListPlot"}]], "Input",
 CellChangeTimes->{{3.926940612615994*^9, 3.92694066242013*^9}, {
  3.926940779021265*^9, 3.92694082035052*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"d562b601-bd50-4b89-858a-88506267b9dd"],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.2637626158259759, 0.}, {-0.004824671311807336, 
      0.26371848637154427`}, {-0.1318813079129869, -0.22842512587392752`}, \
{-0.004824671311777939, -0.2637184863715136}, {0.2637626158259759, 
      0.}, {-0.22597457298943685`, 
      0.13603753110670416`}, {-0.13188130791297595`, 
      0.22842512587396205`}, {-0.22597457298923063`, -0.1360375311066803}, {
      0.26376261582589766`, 
      0.}}]}, {{}, {}}}, {}, {{}, {{{}, {}, {}, {}}, {}}}},
  AspectRatio->Automatic,
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> (Identity[
       Part[#, 1]] + I Identity[
        Part[#, 2]]& ), "CopiedValueFunction" -> (Identity[
       Part[#, 1]] + I Identity[
        Part[#, 2]]& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "MessagesHead" -> ComplexListPlot},
  PlotRange->{{-0.22597457298943685`, 
   0.2637626158259759}, {-0.2637184863715136, 0.26371848637154427`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.926940619609475*^9, 3.926940663233404*^9}, {
  3.9269407845015306`*^9, 3.926940821193412*^9}},
 CellLabel->"Out[64]=",ExpressionUUID->"5d976df9-63f7-49dc-a697-521b7ccec7f3"]
}, Open  ]],

Cell[TextData[StyleBox["Task: write 0.263763` exactly a",
 FontSize->18,
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.927015810294866*^9, 3.9270158500933657`*^9}, {
  3.927021356287628*^9, 
  3.927021356503203*^9}},ExpressionUUID->"f96e719c-3d17-4aa0-ac39-\
12ed0e26b971"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.2087121525221504`", "/", "0.23462835144947158`"}]], "Input",
 CellChangeTimes->{{3.9270113058650217`*^9, 3.927011310869841*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"258c83a1-05ff-47e2-9d8f-62f5b4ecde25"],

Cell[BoxData["0.8895436175244049`"], "Output",
 CellChangeTimes->{3.9270113112593937`*^9, 3.927016808835101*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"53b22a1c-fa96-43b9-8e66-e7180fcc9765"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.23462835144947158`", "/", "0.26376261582589766`"}]], "Input",
 CellChangeTimes->{{3.9270111576244926`*^9, 3.927011163080084*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"38b2d565-4407-493b-959a-31b80e6f0770"],

Cell[BoxData["0.8895436175244152`"], "Output",
 CellChangeTimes->{3.9270111635834017`*^9, 3.927016811220783*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"5594c8c1-e669-4da7-a9f5-85d8cf406715"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", "0.8895436175244152`"}]], "Input",
 CellChangeTimes->{{3.927011513593091*^9, 3.927011513687728*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"9607e1f8-9142-484a-a63c-8e3103f5f0d4"],

Cell[BoxData["1.1241719689732392`"], "Output",
 CellChangeTimes->{3.9270115141514378`*^9, 3.9270168126039248`*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"5b4659bb-889d-4075-883a-c3da19943da8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.8895436175244152`", "//", "RootApproximant"}]], "Input",
 CellChangeTimes->{{3.927011372560111*^9, 3.927011379645986*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"5774815e-5f70-491c-bf19-58024e51d543"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"Root", 
    InterpretationBox[
     StyleBox[
      TemplateBox[{"\"0.890\"", 
        DynamicBox[
         FEPrivate`FrontEndResource[
         "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
      ShowStringCharacters -> False], 
     0.88954361752413246833270932256709784269`15.954589770191003, Editable -> 
     False], 
    TagBox[
     RowBox[{"Root", "[", 
       RowBox[{
         RowBox[{
           RowBox[{
             RowBox[{"-", "3"}], "+", 
             RowBox[{"3", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
             SuperscriptBox["#1", "4"]}], "&"}], ",", "2"}], "]"}], 
     Short[#, 7]& ], 0.8895436175241325},
   "NumericalApproximation"],
  Root[-3 + 3 #^2 + #^4& , 2, 0]]], "Output",
 CellChangeTimes->{3.9270114001055527`*^9, 3.927016814011792*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"e771486d-bc66-4022-881f-f386f9934123"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "/", 
   InterpretationBox[
    TemplateBox[{"Root", 
      InterpretationBox[
       StyleBox[
        TemplateBox[{"\"0.890\"", 
          DynamicBox[
           FEPrivate`FrontEndResource[
           "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
        ShowStringCharacters -> False], 
       0.88954361752413246833270932256709784269`15.954589770191003, Editable -> 
       False], 
      TagBox[
       RowBox[{"Root", "[", 
         RowBox[{
           RowBox[{
             RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"3", " ", 
                 SuperscriptBox["#1", "2"]}], "+", 
               SuperscriptBox["#1", "4"]}], "&"}], ",", "2"}], "]"}], 
       Short[#, 7]& ], 0.8895436175241325},
     "NumericalApproximation"],
    Root[-3 + 3 #^2 + #^4& , 2, 0]]}], "//", "RootApproximant"}]], "Input",
 CellChangeTimes->{{3.927011471749811*^9, 3.9270114764510813`*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"923217ca-4e0c-4ed4-8dcc-7b2f84888ead"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"Root", 
    InterpretationBox[
     StyleBox[
      TemplateBox[{"\"1.12\"", 
        DynamicBox[
         FEPrivate`FrontEndResource[
         "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
      ShowStringCharacters -> False], 
     1.1241719689735967246946302111609838903`15.954589770191003, Editable -> 
     False], 
    TagBox[
     RowBox[{"Root", "[", 
       RowBox[{
         RowBox[{
           RowBox[{
             RowBox[{"-", "1"}], "-", 
             RowBox[{"3", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"3", " ", 
               SuperscriptBox["#1", "4"]}]}], "&"}], ",", "2"}], "]"}], 
     Short[#, 7]& ], 1.1241719689735967`},
   "NumericalApproximation"],
  Root[-1 - 3 #^2 + 3 #^4& , 2, 0]]], "Output",
 CellChangeTimes->{3.9270114768243017`*^9, 3.9270168157042*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"b3038adc-2050-4ed9-834b-224f064750cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"scaling", " ", "factor", " ", "between", " ", 
    RowBox[{"moduli", ":"}]}], " ", "*)"}], " ", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{
     FractionBox["1", "2"], " ", "+", 
     RowBox[{
      FractionBox["1", "6"], 
      SqrtBox["21"]}]}], "]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.92701749621699*^9, 3.927017518746627*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"8522511c-dab9-4572-9e36-baa12c9a6592"],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   FractionBox["1", "6"], " ", 
   RowBox[{"(", 
    RowBox[{"3", "+", 
     SqrtBox["21"]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.9270175126243362`*^9, 3.927017519339281*^9}},
 CellLabel->
  "Out[198]=",ExpressionUUID->"927794b0-396d-498f-ab1e-187ef85d19e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    RowBox[{
     RowBox[{"Quantum", "[", 
      RowBox[{"7", ",", "q"}], "]"}], "-", "1"}]], "//", "N"}], "//", 
  "Chop"}]], "Input",
 CellChangeTimes->{{3.927016584600932*^9, 3.927016621480201*^9}, {
  3.9270166641900387`*^9, 3.927016671747758*^9}, {3.927017445240549*^9, 
  3.927017462452136*^9}, {3.927017530883753*^9, 3.927017558374467*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"5b9cc607-14ee-49a0-a823-7ff931a3d433"],

Cell[BoxData["0.2078741582031545`"], "Output",
 CellChangeTimes->{{3.927016585601907*^9, 3.927016621772532*^9}, {
   3.927016664670044*^9, 3.927016672720792*^9}, 3.92701681951847*^9, {
   3.927017445590374*^9, 3.9270174632656717`*^9}, {3.92701753121456*^9, 
   3.927017558764386*^9}},
 CellLabel->
  "Out[201]=",ExpressionUUID->"b5c713b9-92dd-4f94-b931-80a8eb001427"]
}, Open  ]],

Cell[TextData[StyleBox["It seems like we\[CloseCurlyQuote]ve pinned down the \
moduli of these sets of complex numbers. Now we just need to figure out what \
the arguments mean",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.9270176576589823`*^9, 
  3.927017699247314*^9}},ExpressionUUID->"adf7079d-9d60-4ef9-ba7e-\
9cfa0046c427"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.927015506391554*^9, 3.9270155068745604`*^9}, 
   3.9270168406837273`*^9},ExpressionUUID->"25edb68b-5c50-4929-a66b-\
31bd9f41ba37"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.927015506391554*^9, 
  3.9270155068745604`*^9}},ExpressionUUID->"42542774-d656-44bb-b2bf-\
3e57f5860515"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.927015506391554*^9, 
  3.9270155068745604`*^9}},ExpressionUUID->"118d8ff5-8ace-4369-8663-\
f756cfe54a70"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.927015506391554*^9, 
  3.9270155068745604`*^9}},ExpressionUUID->"0dcf8c05-116c-4e03-8297-\
01698d9601fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"numericalPg", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "9"}], "]"}], "]"}], ",", 
    RowBox[{"numericalPg", "[", 
     RowBox[{"[", 
      RowBox[{"78", ";;", "93"}], "]"}], "]"}], ",", 
    RowBox[{"numericalPg", "[", 
     RowBox[{"[", 
      RowBox[{"103", ";;", "118"}], "]"}], "]"}], ",", 
    RowBox[{"numericalPg", "[", 
     RowBox[{"[", 
      RowBox[{"176", ";;", "191"}], "]"}], "]"}]}], "]"}], "//", 
  "ComplexListPlot"}]], "Input",
 CellChangeTimes->{{3.927015263894415*^9, 3.927015270957348*^9}, {
  3.927015311831431*^9, 3.927015327639954*^9}, {3.9270153636653633`*^9, 
  3.9270154198907547`*^9}, {3.927015476227625*^9, 3.927015476469831*^9}, {
  3.927015571940894*^9, 3.927015631975368*^9}, {3.9270156661040916`*^9, 
  3.927015676593611*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"52aef2b4-842f-422f-8ae9-442e7486852c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCwBGIQbRoSCgRX7RmgwCsKxD+6f77JBNfllZf2K/ih8O1v
+EL4p6D8K6Go+i/GQuS3QvVPiEJRvz82EEXe/gea/qmK6/JEtp+C843Wfvn5
QfOwPeunPS9myR/frzNlQtaDI8fslZ8klqdNPWzvyXLyUP3ss/urBVsFKpSX
7P+wGqL+2EewevuJgRYzah5egJu3pOLHdY7Dxft/2E9pOPzggn0OWP7AflOv
2dc4bM/ur58GMX/2K7D5+x2+fAerv2ALVr8f3Tyxs9Eye96c2R/5cELr2syD
9hJ/T4DdI8ANdo/9Q3+I+YL+YPPtBTZA1P+9C1a/X8AH1bwPkqj+X/MPbJ69
Ji/EvH/Q8BD/DAmPN5PB7t2/+ynEvZv+QNSfgYbH2QBU8+vB/AP2AX4Q/045
BXHPTIj792+Amj8LEt72vkEQ9eGQ8LGfgmbeh25weNo/tYOETwEk/PZfeQ2J
n/dnIObPeAQJHwYDiHodSHjar0ALTwu0+E+aCokP2+cQ8+oh8W0vD/Gf/Tao
e7dD00cvNP5WQ+PvOpr5cZD4su+B+rfhOSR+V0Lj1+Q3JPwy2CDhxwJVvwca
v4vR/H/HDxI+16DhmQVNf2nQ9NeRAUlvVg4Q/8ZBw18BGp7P0OIfAC+FseQ=

      "]]}, {{}, {}}}, {}, {{}, {{{}, {}, {}, {}}, {}}}},
  AspectRatio->Automatic,
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> (Identity[
       Part[#, 1]] + I Identity[
        Part[#, 2]]& ), "CopiedValueFunction" -> (Identity[
       Part[#, 1]] + I Identity[
        Part[#, 2]]& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "MessagesHead" -> ComplexListPlot},
  PlotRange->{{-0.231307954893085, 
   0.33333333333334236`}, {-0.28867513459483674`, 0.28867513459483674`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.927015271521715*^9, {3.9270153160421124`*^9, 3.927015328072448*^9}, 
   3.9270153654707317`*^9, {3.927015402092012*^9, 3.927015420372321*^9}, 
   3.9270154768490868`*^9, {3.9270155729733677`*^9, 3.927015587858148*^9}, {
   3.927015618741315*^9, 3.9270156328369226`*^9}, 3.927015677000204*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"fe491638-6784-416c-9492-4bd8e39fae31"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"triv", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"0.968\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         0.96791920529242148063531203661113977432`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"51", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"123", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"36", " ", 
                   SuperscriptBox["#1", "6"]}], "+", 
                 RowBox[{"117", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"108", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], 0.9679192052924215},
       "NumericalApproximation"],
      Root[-1 - 51 #^2 - 123 #^4 - 36 #^6 + 117 #^8 + 108 #^10 + 27 #^12& , 2,
        0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"1.39\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         1.39171390306122644275887978437822312117`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"3", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"12", " ", 
                   SuperscriptBox["#1", "4"]}], "+", 
                 RowBox[{"36", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"18", " ", 
                   SuperscriptBox["#1", "8"]}], "-", 
                 RowBox[{"54", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "6"}], "]"}], 
         Short[#, 7]& ], 1.3917139030612264`},
       "NumericalApproximation"],
      Root[-1 - 3 #^2 + 12 #^4 + 36 #^6 - 18 #^8 - 54 #^10 + 27 #^12& , 6, 
       0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-1.39\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -1.39171390306122644275887978437822312117`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"3", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"12", " ", 
                   SuperscriptBox["#1", "4"]}], "+", 
                 RowBox[{"36", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"18", " ", 
                   SuperscriptBox["#1", "8"]}], "-", 
                 RowBox[{"54", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -1.3917139030612264`},
       "NumericalApproximation"],
      Root[-1 - 3 #^2 + 12 #^4 + 36 #^6 - 18 #^8 - 54 #^10 + 27 #^12& , 1, 
       0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"1.39\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         1.39171390306122644275887978437822312117`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"3", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"12", " ", 
                   SuperscriptBox["#1", "4"]}], "+", 
                 RowBox[{"36", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"18", " ", 
                   SuperscriptBox["#1", "8"]}], "-", 
                 RowBox[{"54", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "6"}], "]"}], 
         Short[#, 7]& ], 1.3917139030612264`},
       "NumericalApproximation"],
      Root[-1 - 3 #^2 + 12 #^4 + 36 #^6 - 18 #^8 - 54 #^10 + 27 #^12& , 6, 
       0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-0.968\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          
          False], -0.96791920529242148063531203661113977432`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"51", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"123", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"36", " ", 
                   SuperscriptBox["#1", "6"]}], "+", 
                 RowBox[{"117", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"108", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -0.9679192052924215},
       "NumericalApproximation"],
      Root[-1 - 51 #^2 - 123 #^4 - 36 #^6 + 117 #^8 + 108 #^10 + 27 #^12& , 1,
        0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-1.39\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -1.39171390306122644275887978437822312117`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"3", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"12", " ", 
                   SuperscriptBox["#1", "4"]}], "+", 
                 RowBox[{"36", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"18", " ", 
                   SuperscriptBox["#1", "8"]}], "-", 
                 RowBox[{"54", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -1.3917139030612264`},
       "NumericalApproximation"],
      Root[-1 - 3 #^2 + 12 #^4 + 36 #^6 - 18 #^8 - 54 #^10 + 27 #^12& , 1, 
       0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-1.39\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -1.39171390306122644275887978437822312117`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"3", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"12", " ", 
                   SuperscriptBox["#1", "4"]}], "+", 
                 RowBox[{"36", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"18", " ", 
                   SuperscriptBox["#1", "8"]}], "-", 
                 RowBox[{"54", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -1.3917139030612264`},
       "NumericalApproximation"],
      Root[-1 - 3 #^2 + 12 #^4 + 36 #^6 - 18 #^8 - 54 #^10 + 27 #^12& , 1, 
       0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-1.39\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -1.39171390306122644275887978437822312117`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"3", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"12", " ", 
                   SuperscriptBox["#1", "4"]}], "+", 
                 RowBox[{"36", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"18", " ", 
                   SuperscriptBox["#1", "8"]}], "-", 
                 RowBox[{"54", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -1.3917139030612264`},
       "NumericalApproximation"],
      Root[-1 - 3 #^2 + 12 #^4 + 36 #^6 - 18 #^8 - 54 #^10 + 27 #^12& , 1, 
       0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"0.968\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         0.96791920529242148063531203661113977432`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"51", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"123", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"36", " ", 
                   SuperscriptBox["#1", "6"]}], "+", 
                 RowBox[{"117", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"108", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], 0.9679192052924215},
       "NumericalApproximation"],
      Root[-1 - 51 #^2 - 123 #^4 - 36 #^6 + 117 #^8 + 108 #^10 + 27 #^12& , 2,
        0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"0.968\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         0.96791920529242148063531203661113977432`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"51", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"123", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"36", " ", 
                   SuperscriptBox["#1", "6"]}], "+", 
                 RowBox[{"117", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"108", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], 0.9679192052924215},
       "NumericalApproximation"],
      Root[-1 - 51 #^2 - 123 #^4 - 36 #^6 + 117 #^8 + 108 #^10 + 27 #^12& , 2,
        0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"1.39\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         1.39171390306122644275887978437822312117`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"3", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"12", " ", 
                   SuperscriptBox["#1", "4"]}], "+", 
                 RowBox[{"36", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"18", " ", 
                   SuperscriptBox["#1", "8"]}], "-", 
                 RowBox[{"54", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "6"}], "]"}], 
         Short[#, 7]& ], 1.3917139030612264`},
       "NumericalApproximation"],
      Root[-1 - 3 #^2 + 12 #^4 + 36 #^6 - 18 #^8 - 54 #^10 + 27 #^12& , 6, 
       0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-1.39\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -1.39171390306122644275887978437822312117`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"3", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"12", " ", 
                   SuperscriptBox["#1", "4"]}], "+", 
                 RowBox[{"36", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"18", " ", 
                   SuperscriptBox["#1", "8"]}], "-", 
                 RowBox[{"54", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -1.3917139030612264`},
       "NumericalApproximation"],
      Root[-1 - 3 #^2 + 12 #^4 + 36 #^6 - 18 #^8 - 54 #^10 + 27 #^12& , 1, 
       0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"1.08\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         1.08393183706276241551336170232389122248`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"183", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"540", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"225", " ", 
                   SuperscriptBox["#1", "6"]}], "+", 
                 RowBox[{"405", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"216", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], 1.0839318370627624`},
       "NumericalApproximation"],
      Root[-1 - 183 #^2 - 540 #^4 - 225 #^6 + 405 #^8 + 216 #^10 + 27 #^12& , 
       2, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"0.861\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         0.86100635134690395311451993620721623302`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"13", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 SuperscriptBox["#1", "4"], "+", 
                 RowBox[{"22", " ", 
                   SuperscriptBox["#1", "6"]}], "+", 
                 SuperscriptBox["#1", "8"], "-", 
                 RowBox[{"6", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 SuperscriptBox["#1", "12"]}], "&"}], ",", "6"}], "]"}], 
         Short[#, 7]& ], 0.861006351346904},
       "NumericalApproximation"],
      Root[1 - 13 #^2 + #^4 + 22 #^6 + #^8 - 6 #^10 + #^12& , 6, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-1.69\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -1.69414372764828979889273341541411355138`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"927", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"6237", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"7398", " ", 
                   SuperscriptBox["#1", "12"]}], "-", 
                 RowBox[{"8343", " ", 
                   SuperscriptBox["#1", "14"]}], "+", 
                 RowBox[{"2187", " ", 
                   SuperscriptBox["#1", "16"]}], "+", 
                 RowBox[{"5103", " ", 
                   SuperscriptBox["#1", "18"]}], "-", 
                 RowBox[{"3645", " ", 
                   SuperscriptBox["#1", "20"]}], "-", 
                 RowBox[{"1458", " ", 
                   SuperscriptBox["#1", "22"]}], "+", 
                 RowBox[{"729", " ", 
                   SuperscriptBox["#1", "24"]}]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -1.6941437276482898`},
       "NumericalApproximation"],
      Root[
      1 - 15 #^2 - 927 #^4 - 6237 #^6 - 8640 #^8 + 8640 #^10 + 7398 #^12 - 
       8343 #^14 + 2187 #^16 + 5103 #^18 - 3645 #^20 - 1458 #^22 + 729 #^24& ,
        1, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-0.156\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -0.15569081390285169352871719183895038441`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"927", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"6237", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"7398", " ", 
                   SuperscriptBox["#1", "12"]}], "-", 
                 RowBox[{"8343", " ", 
                   SuperscriptBox["#1", "14"]}], "+", 
                 RowBox[{"2187", " ", 
                   SuperscriptBox["#1", "16"]}], "+", 
                 RowBox[{"5103", " ", 
                   SuperscriptBox["#1", "18"]}], "-", 
                 RowBox[{"3645", " ", 
                   SuperscriptBox["#1", "20"]}], "-", 
                 RowBox[{"1458", " ", 
                   SuperscriptBox["#1", "22"]}], "+", 
                 RowBox[{"729", " ", 
                   SuperscriptBox["#1", "24"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], -0.1556908139028517},
       "NumericalApproximation"],
      Root[
      1 - 15 #^2 - 927 #^4 - 6237 #^6 - 8640 #^8 + 8640 #^10 + 7398 #^12 - 
       8343 #^14 + 2187 #^16 + 5103 #^18 - 3645 #^20 - 1458 #^22 + 729 #^24& ,
        2, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"1.24\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         1.23799021988771307256627096649026498199`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "+", 
                 RowBox[{"5", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"4", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"8", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"5", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"3", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 SuperscriptBox["#1", "12"]}], "&"}], ",", "4"}], "]"}], 
         Short[#, 7]& ], 1.237990219887713},
       "NumericalApproximation"],
      Root[1 + 5 #^2 + 4 #^4 - 8 #^6 - 5 #^8 + 3 #^10 + #^12& , 4, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-1.69\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -1.69414372764828979889273341541411355138`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"927", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"6237", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"7398", " ", 
                   SuperscriptBox["#1", "12"]}], "-", 
                 RowBox[{"8343", " ", 
                   SuperscriptBox["#1", "14"]}], "+", 
                 RowBox[{"2187", " ", 
                   SuperscriptBox["#1", "16"]}], "+", 
                 RowBox[{"5103", " ", 
                   SuperscriptBox["#1", "18"]}], "-", 
                 RowBox[{"3645", " ", 
                   SuperscriptBox["#1", "20"]}], "-", 
                 RowBox[{"1458", " ", 
                   SuperscriptBox["#1", "22"]}], "+", 
                 RowBox[{"729", " ", 
                   SuperscriptBox["#1", "24"]}]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -1.6941437276482898`},
       "NumericalApproximation"],
      Root[
      1 - 15 #^2 - 927 #^4 - 6237 #^6 - 8640 #^8 + 8640 #^10 + 7398 #^12 - 
       8343 #^14 + 2187 #^16 + 5103 #^18 - 3645 #^20 - 1458 #^22 + 729 #^24& ,
        1, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"0.156\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         0.15569081390285169352871719183895038441`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"927", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"6237", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"7398", " ", 
                   SuperscriptBox["#1", "12"]}], "-", 
                 RowBox[{"8343", " ", 
                   SuperscriptBox["#1", "14"]}], "+", 
                 RowBox[{"2187", " ", 
                   SuperscriptBox["#1", "16"]}], "+", 
                 RowBox[{"5103", " ", 
                   SuperscriptBox["#1", "18"]}], "-", 
                 RowBox[{"3645", " ", 
                   SuperscriptBox["#1", "20"]}], "-", 
                 RowBox[{"1458", " ", 
                   SuperscriptBox["#1", "22"]}], "+", 
                 RowBox[{"729", " ", 
                   SuperscriptBox["#1", "24"]}]}], "&"}], ",", "3"}], "]"}], 
         Short[#, 7]& ], 0.1556908139028517},
       "NumericalApproximation"],
      Root[
      1 - 15 #^2 - 927 #^4 - 6237 #^6 - 8640 #^8 + 8640 #^10 + 7398 #^12 - 
       8343 #^14 + 2187 #^16 + 5103 #^18 - 3645 #^20 - 1458 #^22 + 729 #^24& ,
        3, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-0.619\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -0.6193709550183433831804791225295048207`15.954589770191003,
          Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"90", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"162", " ", 
                   SuperscriptBox["#1", "8"]}], "-", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], -0.6193709550183434},
       "NumericalApproximation"],
      Root[-1 + 15 #^2 + 27 #^4 - 90 #^6 - 162 #^8 - 27 #^10 + 27 #^12& , 2, 
       0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-1.24\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -1.23799021988771307256627096649026498199`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "+", 
                 RowBox[{"5", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"4", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"8", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"5", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"3", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 SuperscriptBox["#1", "12"]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -1.237990219887713},
       "NumericalApproximation"],
      Root[1 + 5 #^2 + 4 #^4 - 8 #^6 - 5 #^8 + 3 #^10 + #^12& , 1, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-0.156\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -0.15569081390285169352871719183895038441`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"927", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"6237", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"7398", " ", 
                   SuperscriptBox["#1", "12"]}], "-", 
                 RowBox[{"8343", " ", 
                   SuperscriptBox["#1", "14"]}], "+", 
                 RowBox[{"2187", " ", 
                   SuperscriptBox["#1", "16"]}], "+", 
                 RowBox[{"5103", " ", 
                   SuperscriptBox["#1", "18"]}], "-", 
                 RowBox[{"3645", " ", 
                   SuperscriptBox["#1", "20"]}], "-", 
                 RowBox[{"1458", " ", 
                   SuperscriptBox["#1", "22"]}], "+", 
                 RowBox[{"729", " ", 
                   SuperscriptBox["#1", "24"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], -0.1556908139028517},
       "NumericalApproximation"],
      Root[
      1 - 15 #^2 - 927 #^4 - 6237 #^6 - 8640 #^8 + 8640 #^10 + 7398 #^12 - 
       8343 #^14 + 2187 #^16 + 5103 #^18 - 3645 #^20 - 1458 #^22 + 729 #^24& ,
        2, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-0.619\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -0.6193709550183433831804791225295048207`15.954589770191003,
          Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"90", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"162", " ", 
                   SuperscriptBox["#1", "8"]}], "-", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], -0.6193709550183434},
       "NumericalApproximation"],
      Root[-1 + 15 #^2 + 27 #^4 - 90 #^6 - 162 #^8 - 27 #^10 + 27 #^12& , 2, 
       0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-1.69\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -1.69414372764828979889273341541411355138`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"927", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"6237", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"7398", " ", 
                   SuperscriptBox["#1", "12"]}], "-", 
                 RowBox[{"8343", " ", 
                   SuperscriptBox["#1", "14"]}], "+", 
                 RowBox[{"2187", " ", 
                   SuperscriptBox["#1", "16"]}], "+", 
                 RowBox[{"5103", " ", 
                   SuperscriptBox["#1", "18"]}], "-", 
                 RowBox[{"3645", " ", 
                   SuperscriptBox["#1", "20"]}], "-", 
                 RowBox[{"1458", " ", 
                   SuperscriptBox["#1", "22"]}], "+", 
                 RowBox[{"729", " ", 
                   SuperscriptBox["#1", "24"]}]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -1.6941437276482898`},
       "NumericalApproximation"],
      Root[
      1 - 15 #^2 - 927 #^4 - 6237 #^6 - 8640 #^8 + 8640 #^10 + 7398 #^12 - 
       8343 #^14 + 2187 #^16 + 5103 #^18 - 3645 #^20 - 1458 #^22 + 729 #^24& ,
        1, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"1.39\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         1.39171390306122644275887978437822312117`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"3", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"12", " ", 
                   SuperscriptBox["#1", "4"]}], "+", 
                 RowBox[{"36", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"18", " ", 
                   SuperscriptBox["#1", "8"]}], "-", 
                 RowBox[{"54", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "6"}], "]"}], 
         Short[#, 7]& ], 1.3917139030612264`},
       "NumericalApproximation"],
      Root[-1 - 3 #^2 + 12 #^4 + 36 #^6 - 18 #^8 - 54 #^10 + 27 #^12& , 6, 
       0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-0.968\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -0.96791920529242148063531203661113977432`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"51", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"123", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"36", " ", 
                   SuperscriptBox["#1", "6"]}], "+", 
                 RowBox[{"117", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"108", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -0.9679192052924215},
       "NumericalApproximation"],
      Root[-1 - 51 #^2 - 123 #^4 - 36 #^6 + 117 #^8 + 108 #^10 + 27 #^12& , 1,
        0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-1.39\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -1.39171390306122644275887978437822312117`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"3", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"12", " ", 
                   SuperscriptBox["#1", "4"]}], "+", 
                 RowBox[{"36", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"18", " ", 
                   SuperscriptBox["#1", "8"]}], "-", 
                 RowBox[{"54", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -1.3917139030612264`},
       "NumericalApproximation"],
      Root[-1 - 3 #^2 + 12 #^4 + 36 #^6 - 18 #^8 - 54 #^10 + 27 #^12& , 1, 
       0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"1.24\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         1.23799021988771307256627096649026498199`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "+", 
                 RowBox[{"5", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"4", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"8", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"5", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"3", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 SuperscriptBox["#1", "12"]}], "&"}], ",", "4"}], "]"}], 
         Short[#, 7]& ], 1.237990219887713},
       "NumericalApproximation"],
      Root[1 + 5 #^2 + 4 #^4 - 8 #^6 - 5 #^8 + 3 #^10 + #^12& , 4, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-1.69\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -1.69414372764828979889273341541411355138`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"927", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"6237", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"7398", " ", 
                   SuperscriptBox["#1", "12"]}], "-", 
                 RowBox[{"8343", " ", 
                   SuperscriptBox["#1", "14"]}], "+", 
                 RowBox[{"2187", " ", 
                   SuperscriptBox["#1", "16"]}], "+", 
                 RowBox[{"5103", " ", 
                   SuperscriptBox["#1", "18"]}], "-", 
                 RowBox[{"3645", " ", 
                   SuperscriptBox["#1", "20"]}], "-", 
                 RowBox[{"1458", " ", 
                   SuperscriptBox["#1", "22"]}], "+", 
                 RowBox[{"729", " ", 
                   SuperscriptBox["#1", "24"]}]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -1.6941437276482898`},
       "NumericalApproximation"],
      Root[
      1 - 15 #^2 - 927 #^4 - 6237 #^6 - 8640 #^8 + 8640 #^10 + 7398 #^12 - 
       8343 #^14 + 2187 #^16 + 5103 #^18 - 3645 #^20 - 1458 #^22 + 729 #^24& ,
        1, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"0.156\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         0.15569081390285169352871719183895038441`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"927", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"6237", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"7398", " ", 
                   SuperscriptBox["#1", "12"]}], "-", 
                 RowBox[{"8343", " ", 
                   SuperscriptBox["#1", "14"]}], "+", 
                 RowBox[{"2187", " ", 
                   SuperscriptBox["#1", "16"]}], "+", 
                 RowBox[{"5103", " ", 
                   SuperscriptBox["#1", "18"]}], "-", 
                 RowBox[{"3645", " ", 
                   SuperscriptBox["#1", "20"]}], "-", 
                 RowBox[{"1458", " ", 
                   SuperscriptBox["#1", "22"]}], "+", 
                 RowBox[{"729", " ", 
                   SuperscriptBox["#1", "24"]}]}], "&"}], ",", "3"}], "]"}], 
         Short[#, 7]& ], 0.1556908139028517},
       "NumericalApproximation"],
      Root[
      1 - 15 #^2 - 927 #^4 - 6237 #^6 - 8640 #^8 + 8640 #^10 + 7398 #^12 - 
       8343 #^14 + 2187 #^16 + 5103 #^18 - 3645 #^20 - 1458 #^22 + 729 #^24& ,
        3, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-0.619\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -0.6193709550183433831804791225295048207`15.954589770191003,
          Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"90", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"162", " ", 
                   SuperscriptBox["#1", "8"]}], "-", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], -0.6193709550183434},
       "NumericalApproximation"],
      Root[-1 + 15 #^2 + 27 #^4 - 90 #^6 - 162 #^8 - 27 #^10 + 27 #^12& , 2, 
       0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-1.08\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -1.08393183706276241551336170232389122248`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"183", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"540", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"225", " ", 
                   SuperscriptBox["#1", "6"]}], "+", 
                 RowBox[{"405", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"216", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -1.0839318370627624`},
       "NumericalApproximation"],
      Root[-1 - 183 #^2 - 540 #^4 - 225 #^6 + 405 #^8 + 216 #^10 + 27 #^12& , 
       1, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-0.861\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -0.86100635134690395311451993620721623302`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"13", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 SuperscriptBox["#1", "4"], "+", 
                 RowBox[{"22", " ", 
                   SuperscriptBox["#1", "6"]}], "+", 
                 SuperscriptBox["#1", "8"], "-", 
                 RowBox[{"6", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 SuperscriptBox["#1", "12"]}], "&"}], ",", "3"}], "]"}], 
         Short[#, 7]& ], -0.861006351346904},
       "NumericalApproximation"],
      Root[1 - 13 #^2 + #^4 + 22 #^6 + #^8 - 6 #^10 + #^12& , 3, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"0.156\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         0.15569081390285169352871719183895038441`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"927", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"6237", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"7398", " ", 
                   SuperscriptBox["#1", "12"]}], "-", 
                 RowBox[{"8343", " ", 
                   SuperscriptBox["#1", "14"]}], "+", 
                 RowBox[{"2187", " ", 
                   SuperscriptBox["#1", "16"]}], "+", 
                 RowBox[{"5103", " ", 
                   SuperscriptBox["#1", "18"]}], "-", 
                 RowBox[{"3645", " ", 
                   SuperscriptBox["#1", "20"]}], "-", 
                 RowBox[{"1458", " ", 
                   SuperscriptBox["#1", "22"]}], "+", 
                 RowBox[{"729", " ", 
                   SuperscriptBox["#1", "24"]}]}], "&"}], ",", "3"}], "]"}], 
         Short[#, 7]& ], 0.1556908139028517},
       "NumericalApproximation"],
      Root[
      1 - 15 #^2 - 927 #^4 - 6237 #^6 - 8640 #^8 + 8640 #^10 + 7398 #^12 - 
       8343 #^14 + 2187 #^16 + 5103 #^18 - 3645 #^20 - 1458 #^22 + 729 #^24& ,
        3, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"1.69\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         1.69414372764828979889273341541411355138`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"927", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"6237", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"7398", " ", 
                   SuperscriptBox["#1", "12"]}], "-", 
                 RowBox[{"8343", " ", 
                   SuperscriptBox["#1", "14"]}], "+", 
                 RowBox[{"2187", " ", 
                   SuperscriptBox["#1", "16"]}], "+", 
                 RowBox[{"5103", " ", 
                   SuperscriptBox["#1", "18"]}], "-", 
                 RowBox[{"3645", " ", 
                   SuperscriptBox["#1", "20"]}], "-", 
                 RowBox[{"1458", " ", 
                   SuperscriptBox["#1", "22"]}], "+", 
                 RowBox[{"729", " ", 
                   SuperscriptBox["#1", "24"]}]}], "&"}], ",", "4"}], "]"}], 
         Short[#, 7]& ], 1.6941437276482898`},
       "NumericalApproximation"],
      Root[
      1 - 15 #^2 - 927 #^4 - 6237 #^6 - 8640 #^8 + 8640 #^10 + 7398 #^12 - 
       8343 #^14 + 2187 #^16 + 5103 #^18 - 3645 #^20 - 1458 #^22 + 729 #^24& ,
        4, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-1.24\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -1.23799021988771307256627096649026498199`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "+", 
                 RowBox[{"5", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"4", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"8", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"5", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"3", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 SuperscriptBox["#1", "12"]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -1.237990219887713},
       "NumericalApproximation"],
      Root[1 + 5 #^2 + 4 #^4 - 8 #^6 - 5 #^8 + 3 #^10 + #^12& , 1, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-0.619\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -0.6193709550183433831804791225295048207`15.954589770191003,
          Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"90", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"162", " ", 
                   SuperscriptBox["#1", "8"]}], "-", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], -0.6193709550183434},
       "NumericalApproximation"],
      Root[-1 + 15 #^2 + 27 #^4 - 90 #^6 - 162 #^8 - 27 #^10 + 27 #^12& , 2, 
       0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"1.69\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         1.69414372764828979889273341541411355138`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"927", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"6237", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"7398", " ", 
                   SuperscriptBox["#1", "12"]}], "-", 
                 RowBox[{"8343", " ", 
                   SuperscriptBox["#1", "14"]}], "+", 
                 RowBox[{"2187", " ", 
                   SuperscriptBox["#1", "16"]}], "+", 
                 RowBox[{"5103", " ", 
                   SuperscriptBox["#1", "18"]}], "-", 
                 RowBox[{"3645", " ", 
                   SuperscriptBox["#1", "20"]}], "-", 
                 RowBox[{"1458", " ", 
                   SuperscriptBox["#1", "22"]}], "+", 
                 RowBox[{"729", " ", 
                   SuperscriptBox["#1", "24"]}]}], "&"}], ",", "4"}], "]"}], 
         Short[#, 7]& ], 1.6941437276482898`},
       "NumericalApproximation"],
      Root[
      1 - 15 #^2 - 927 #^4 - 6237 #^6 - 8640 #^8 + 8640 #^10 + 7398 #^12 - 
       8343 #^14 + 2187 #^16 + 5103 #^18 - 3645 #^20 - 1458 #^22 + 729 #^24& ,
        4, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-0.156\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -0.15569081390285169352871719183895038441`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"927", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"6237", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"7398", " ", 
                   SuperscriptBox["#1", "12"]}], "-", 
                 RowBox[{"8343", " ", 
                   SuperscriptBox["#1", "14"]}], "+", 
                 RowBox[{"2187", " ", 
                   SuperscriptBox["#1", "16"]}], "+", 
                 RowBox[{"5103", " ", 
                   SuperscriptBox["#1", "18"]}], "-", 
                 RowBox[{"3645", " ", 
                   SuperscriptBox["#1", "20"]}], "-", 
                 RowBox[{"1458", " ", 
                   SuperscriptBox["#1", "22"]}], "+", 
                 RowBox[{"729", " ", 
                   SuperscriptBox["#1", "24"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], -0.1556908139028517},
       "NumericalApproximation"],
      Root[
      1 - 15 #^2 - 927 #^4 - 6237 #^6 - 8640 #^8 + 8640 #^10 + 7398 #^12 - 
       8343 #^14 + 2187 #^16 + 5103 #^18 - 3645 #^20 - 1458 #^22 + 729 #^24& ,
        2, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-1.39\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -1.39171390306122644275887978437822312117`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"3", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"12", " ", 
                   SuperscriptBox["#1", "4"]}], "+", 
                 RowBox[{"36", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"18", " ", 
                   SuperscriptBox["#1", "8"]}], "-", 
                 RowBox[{"54", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -1.3917139030612264`},
       "NumericalApproximation"],
      Root[-1 - 3 #^2 + 12 #^4 + 36 #^6 - 18 #^8 - 54 #^10 + 27 #^12& , 1, 
       0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-1.39\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -1.39171390306122644275887978437822312117`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"3", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"12", " ", 
                   SuperscriptBox["#1", "4"]}], "+", 
                 RowBox[{"36", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"18", " ", 
                   SuperscriptBox["#1", "8"]}], "-", 
                 RowBox[{"54", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -1.3917139030612264`},
       "NumericalApproximation"],
      Root[-1 - 3 #^2 + 12 #^4 + 36 #^6 - 18 #^8 - 54 #^10 + 27 #^12& , 1, 
       0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"0.968\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         0.96791920529242148063531203661113977432`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"51", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"123", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"36", " ", 
                   SuperscriptBox["#1", "6"]}], "+", 
                 RowBox[{"117", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"108", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], 0.9679192052924215},
       "NumericalApproximation"],
      Root[-1 - 51 #^2 - 123 #^4 - 36 #^6 + 117 #^8 + 108 #^10 + 27 #^12& , 2,
        0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-1.24\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -1.23799021988771307256627096649026498199`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "+", 
                 RowBox[{"5", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"4", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"8", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"5", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"3", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 SuperscriptBox["#1", "12"]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -1.237990219887713},
       "NumericalApproximation"],
      Root[1 + 5 #^2 + 4 #^4 - 8 #^6 - 5 #^8 + 3 #^10 + #^12& , 1, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-0.156\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -0.15569081390285169352871719183895038441`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"927", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"6237", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"7398", " ", 
                   SuperscriptBox["#1", "12"]}], "-", 
                 RowBox[{"8343", " ", 
                   SuperscriptBox["#1", "14"]}], "+", 
                 RowBox[{"2187", " ", 
                   SuperscriptBox["#1", "16"]}], "+", 
                 RowBox[{"5103", " ", 
                   SuperscriptBox["#1", "18"]}], "-", 
                 RowBox[{"3645", " ", 
                   SuperscriptBox["#1", "20"]}], "-", 
                 RowBox[{"1458", " ", 
                   SuperscriptBox["#1", "22"]}], "+", 
                 RowBox[{"729", " ", 
                   SuperscriptBox["#1", "24"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], -0.1556908139028517},
       "NumericalApproximation"],
      Root[
      1 - 15 #^2 - 927 #^4 - 6237 #^6 - 8640 #^8 + 8640 #^10 + 7398 #^12 - 
       8343 #^14 + 2187 #^16 + 5103 #^18 - 3645 #^20 - 1458 #^22 + 729 #^24& ,
        2, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-0.619\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -0.6193709550183433831804791225295048207`15.954589770191003,
          Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"90", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"162", " ", 
                   SuperscriptBox["#1", "8"]}], "-", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], -0.6193709550183434},
       "NumericalApproximation"],
      Root[-1 + 15 #^2 + 27 #^4 - 90 #^6 - 162 #^8 - 27 #^10 + 27 #^12& , 2, 
       0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-1.69\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -1.69414372764828979889273341541411355138`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"927", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"6237", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"7398", " ", 
                   SuperscriptBox["#1", "12"]}], "-", 
                 RowBox[{"8343", " ", 
                   SuperscriptBox["#1", "14"]}], "+", 
                 RowBox[{"2187", " ", 
                   SuperscriptBox["#1", "16"]}], "+", 
                 RowBox[{"5103", " ", 
                   SuperscriptBox["#1", "18"]}], "-", 
                 RowBox[{"3645", " ", 
                   SuperscriptBox["#1", "20"]}], "-", 
                 RowBox[{"1458", " ", 
                   SuperscriptBox["#1", "22"]}], "+", 
                 RowBox[{"729", " ", 
                   SuperscriptBox["#1", "24"]}]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -1.6941437276482898`},
       "NumericalApproximation"],
      Root[
      1 - 15 #^2 - 927 #^4 - 6237 #^6 - 8640 #^8 + 8640 #^10 + 7398 #^12 - 
       8343 #^14 + 2187 #^16 + 5103 #^18 - 3645 #^20 - 1458 #^22 + 729 #^24& ,
        1, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-1.24\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -1.23799021988771307256627096649026498199`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "+", 
                 RowBox[{"5", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"4", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"8", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"5", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"3", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 SuperscriptBox["#1", "12"]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -1.237990219887713},
       "NumericalApproximation"],
      Root[1 + 5 #^2 + 4 #^4 - 8 #^6 - 5 #^8 + 3 #^10 + #^12& , 1, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-0.619\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -0.6193709550183433831804791225295048207`15.954589770191003,
          Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"90", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"162", " ", 
                   SuperscriptBox["#1", "8"]}], "-", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], -0.6193709550183434},
       "NumericalApproximation"],
      Root[-1 + 15 #^2 + 27 #^4 - 90 #^6 - 162 #^8 - 27 #^10 + 27 #^12& , 2, 
       0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"1.69\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         1.69414372764828979889273341541411355138`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"927", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"6237", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"7398", " ", 
                   SuperscriptBox["#1", "12"]}], "-", 
                 RowBox[{"8343", " ", 
                   SuperscriptBox["#1", "14"]}], "+", 
                 RowBox[{"2187", " ", 
                   SuperscriptBox["#1", "16"]}], "+", 
                 RowBox[{"5103", " ", 
                   SuperscriptBox["#1", "18"]}], "-", 
                 RowBox[{"3645", " ", 
                   SuperscriptBox["#1", "20"]}], "-", 
                 RowBox[{"1458", " ", 
                   SuperscriptBox["#1", "22"]}], "+", 
                 RowBox[{"729", " ", 
                   SuperscriptBox["#1", "24"]}]}], "&"}], ",", "4"}], "]"}], 
         Short[#, 7]& ], 1.6941437276482898`},
       "NumericalApproximation"],
      Root[
      1 - 15 #^2 - 927 #^4 - 6237 #^6 - 8640 #^8 + 8640 #^10 + 7398 #^12 - 
       8343 #^14 + 2187 #^16 + 5103 #^18 - 3645 #^20 - 1458 #^22 + 729 #^24& ,
        4, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-0.156\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -0.15569081390285169352871719183895038441`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"927", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"6237", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"7398", " ", 
                   SuperscriptBox["#1", "12"]}], "-", 
                 RowBox[{"8343", " ", 
                   SuperscriptBox["#1", "14"]}], "+", 
                 RowBox[{"2187", " ", 
                   SuperscriptBox["#1", "16"]}], "+", 
                 RowBox[{"5103", " ", 
                   SuperscriptBox["#1", "18"]}], "-", 
                 RowBox[{"3645", " ", 
                   SuperscriptBox["#1", "20"]}], "-", 
                 RowBox[{"1458", " ", 
                   SuperscriptBox["#1", "22"]}], "+", 
                 RowBox[{"729", " ", 
                   SuperscriptBox["#1", "24"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], -0.1556908139028517},
       "NumericalApproximation"],
      Root[
      1 - 15 #^2 - 927 #^4 - 6237 #^6 - 8640 #^8 + 8640 #^10 + 7398 #^12 - 
       8343 #^14 + 2187 #^16 + 5103 #^18 - 3645 #^20 - 1458 #^22 + 729 #^24& ,
        2, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"1.08\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         1.08393183706276241551336170232389122248`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"183", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"540", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"225", " ", 
                   SuperscriptBox["#1", "6"]}], "+", 
                 RowBox[{"405", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"216", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"27", " ", 
                   SuperscriptBox["#1", "12"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], 1.0839318370627624`},
       "NumericalApproximation"],
      Root[-1 - 183 #^2 - 540 #^4 - 225 #^6 + 405 #^8 + 216 #^10 + 27 #^12& , 
       2, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"0.861\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         0.86100635134690395311451993620721623302`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"13", " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                 SuperscriptBox["#1", "4"], "+", 
                 RowBox[{"22", " ", 
                   SuperscriptBox["#1", "6"]}], "+", 
                 SuperscriptBox["#1", "8"], "-", 
                 RowBox[{"6", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 SuperscriptBox["#1", "12"]}], "&"}], ",", "6"}], "]"}], 
         Short[#, 7]& ], 0.861006351346904},
       "NumericalApproximation"],
      Root[1 - 13 #^2 + #^4 + 22 #^6 + #^8 - 6 #^10 + #^12& , 6, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-1.69\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -1.69414372764828979889273341541411355138`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"927", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"6237", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"7398", " ", 
                   SuperscriptBox["#1", "12"]}], "-", 
                 RowBox[{"8343", " ", 
                   SuperscriptBox["#1", "14"]}], "+", 
                 RowBox[{"2187", " ", 
                   SuperscriptBox["#1", "16"]}], "+", 
                 RowBox[{"5103", " ", 
                   SuperscriptBox["#1", "18"]}], "-", 
                 RowBox[{"3645", " ", 
                   SuperscriptBox["#1", "20"]}], "-", 
                 RowBox[{"1458", " ", 
                   SuperscriptBox["#1", "22"]}], "+", 
                 RowBox[{"729", " ", 
                   SuperscriptBox["#1", "24"]}]}], "&"}], ",", "1"}], "]"}], 
         Short[#, 7]& ], -1.6941437276482898`},
       "NumericalApproximation"],
      Root[
      1 - 15 #^2 - 927 #^4 - 6237 #^6 - 8640 #^8 + 8640 #^10 + 7398 #^12 - 
       8343 #^14 + 2187 #^16 + 5103 #^18 - 3645 #^20 - 1458 #^22 + 729 #^24& ,
        1, 0]], ",", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-0.156\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {12., {1., 2.}}]}, "RowDefault"], 
          ShowStringCharacters -> 
          False], -0.15569081390285169352871719183895038441`15.\
954589770191003, Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"1", "-", 
                 RowBox[{"15", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"927", " ", 
                   SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"6237", " ", 
                   SuperscriptBox["#1", "6"]}], "-", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "8"]}], "+", 
                 RowBox[{"8640", " ", 
                   SuperscriptBox["#1", "10"]}], "+", 
                 RowBox[{"7398", " ", 
                   SuperscriptBox["#1", "12"]}], "-", 
                 RowBox[{"8343", " ", 
                   SuperscriptBox["#1", "14"]}], "+", 
                 RowBox[{"2187", " ", 
                   SuperscriptBox["#1", "16"]}], "+", 
                 RowBox[{"5103", " ", 
                   SuperscriptBox["#1", "18"]}], "-", 
                 RowBox[{"3645", " ", 
                   SuperscriptBox["#1", "20"]}], "-", 
                 RowBox[{"1458", " ", 
                   SuperscriptBox["#1", "22"]}], "+", 
                 RowBox[{"729", " ", 
                   SuperscriptBox["#1", "24"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], -0.1556908139028517},
       "NumericalApproximation"],
      Root[
      1 - 15 #^2 - 927 #^4 - 6237 #^6 - 8640 #^8 + 8640 #^10 + 7398 #^12 - 
       8343 #^14 + 2187 #^16 + 5103 #^18 - 3645 #^20 - 1458 #^22 + 729 #^24& ,
        2, 0]]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.927110595858515*^9, 3.927110596279552*^9}, 
   3.927110716144623*^9},
 CellLabel->
  "In[116]:=",ExpressionUUID->"c17abe06-3be7-4d6c-b110-85eae97b8f80"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"triv", "//", "ListPlot"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"triv", "//", "Fourier"}], "//", "ComplexListPlot"}]}], "Input",
 CellChangeTimes->{{3.927110604195249*^9, 3.927110615781241*^9}, {
  3.9271106974077997`*^9, 3.927110725507*^9}, {3.9271120106463747`*^9, 
  3.927112026462865*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"5d4b90b9-5f22-423c-ac2a-e9539bc21934"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQDQEf7BWu12wy/PnOHirgkDfV4EypyzconwPG3w/h
C6DJizhA9UPlJdDUy6DxFdD4Sg6o9qug8dXQ7NNA06/lsKvwy4sT4R+h8joO
YndFDWN7X0P5eg6qE/lLzKR/Q9UbOCjyMJiufXsYyjd0kP9hdPXcuc9Q9UZo
6o1h6qHyJg7z19RwPr74GCpvCtMP5ZuhmW+Opt4CzXxLNP9ZoYWnNZp/bdDc
a4tmnh2ae+3R7HeAhReE3+AACy+ovCOq/gZHmPlQ85xQ/dvghGa+M6r6Bme0
8HBB9U8DGp/BFTX+G1zRwtcN1bwGNzT73VHDo8EdTb8HqvoGDzT/eaKZ74mW
vrxQ01eDF1r4e8P1AwBt7ANW
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 54}, {-1.6941437276482898`, 1.6941437276482898`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9271106090724697`*^9, 3.92711061634208*^9}, 
   3.927110725946891*^9, 3.927112044145899*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"7752d044-85c2-4a68-b66e-475da7b1c2c1"],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdk2tIE1AUx4cl+xAsKohQMo1akURpNgMfhz7kq3L5mAW+ooevKboathXo
cmFiWaiYaCaN0MxCXSlUup3FNNMtldlIydfKxzYbTtQpDu3hvQrzwuV+uJzX
//87HlcyI687MRgMzr/7//XMadtV5r+CDHrmnIUFx3In4U8DO6pobzeEc9Ot
E2VymO6XuBalDMKT+uBTczMjYL8nEh7kzWImr5/jIdGDU+AeN6Z9HmdU7R3p
23vhQZ5N6lnaBZHGrS/UoUNQY1wITnTRgSJL6tVkHUCVNGG85KgNXl+1C3q8
tXitgt3mJ1+EmFGVz8KZj1CoUpv0yQaYbDU3WkMHwY3bzao1laAzvzyjQF4F
2YpqQbzxNxp+HZEpWh+jrlzEjPPVQuztS7G+ScvgyskPE0MLPnoY5r6j5QvE
Pe8rdNmvg7ygpcpQ1jgmpLIVHwLmQRZYKcCbdqgPeBqR9v0zir+ql/OjzGDm
J98/EWnDbOFObRAsQsBJQYrkghXOtq+erm624B1lHWgixqCU84wp581As1xZ
les5j+9qMitkL9+Dm4w76+VrAh+uvyjxQCe8WtJmdaj12BNddkh6awV/5DeN
8HQW6ClOV7BX9ejHn3YathghyWdUFDJlxAEP5mpX0TBo93UyWRMa3PbmeMSY
aQpH3jbkndcp8duN+IXD/LttvY7/kErjh0g89tH8/iQ/9tL6Q6Q+etP+6kh/
sN6/O+kfix3ngxA6v5jMv1mfzfpt6NtA9AWJo/4b/lwm/uBF6t9u4h+Yqb8a
4i/+TCP+C4n/MEH5MISv8QHnHPnBRke+8BPlT0n4w2jKZy3hEycpvzmEX8yg
fG8hfEOlI/+QSPfDTPYD1/eH1bi2P/gXhq7WGQ==
      
      "]]}, {{}, {}}}, {}, {{}, {{{}, {}, {}, {}}, {}}}},
  AspectRatio->Automatic,
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> (Identity[
       Part[#, 1]] + I Identity[
        Part[#, 2]]& ), "CopiedValueFunction" -> (Identity[
       Part[#, 1]] + I Identity[
        Part[#, 2]]& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "MessagesHead" -> ComplexListPlot},
  PlotRange->{{-1.841677813169827, 1.7157587468717923`}, {-1.480769858325936, 
   1.480769858325936}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9271106090724697`*^9, 3.92711061634208*^9}, 
   3.927110725946891*^9, 3.9271120441732683`*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"9fd07f67-849b-432f-8eb3-a625d24daa64"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pgSupport", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"numericalPg", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "9"}], "]"}], "]"}], ",", 
     RowBox[{"numericalPg", "[", 
      RowBox[{"[", 
       RowBox[{"78", ";;", "93"}], "]"}], "]"}], ",", 
     RowBox[{"numericalPg", "[", 
      RowBox[{"[", 
       RowBox[{"103", ";;", "118"}], "]"}], "]"}], ",", 
     RowBox[{"numericalPg", "[", 
      RowBox[{"[", 
       RowBox[{"176", ";;", "191"}], "]"}], "]"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.9271116984927588`*^9, 3.9271117086513042`*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"da249ae9-75e2-465e-b799-9133c9942c6c"]
},
WindowSize->{Full, Full},
WindowMargins->{{316, Automatic}, {Automatic, 50}},
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6f67e1fd-f049-4d01-8884-3db3930a6348"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1893, 55, 157, "Input",ExpressionUUID->"f6215e80-c3f3-4be4-8a36-b53655b5f119"],
Cell[CellGroupData[{
Cell[2476, 79, 490, 12, 52, "Input",ExpressionUUID->"dad3f49f-e92b-4c61-98ad-67b661a5b0fa"],
Cell[2969, 93, 424, 10, 28, "Message",ExpressionUUID->"68dfc7dc-510f-4a0b-82ca-48083018c48d"]
}, Open  ]],
Cell[3408, 106, 213, 5, 38, "Text",ExpressionUUID->"0b5a7ea8-aee1-4f8e-b5a3-e8610470942d"],
Cell[CellGroupData[{
Cell[3646, 115, 295, 7, 30, "Input",ExpressionUUID->"91a08543-8472-4a8e-bebc-cee57821c204"],
Cell[3944, 124, 1525, 45, 178, "Output",ExpressionUUID->"976ddbc5-c685-4ecb-afcb-bd476a39dba8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5506, 174, 774, 22, 52, "Input",ExpressionUUID->"c9f2e235-cf6d-49f1-9497-21aa52247db0"],
Cell[6283, 198, 284, 5, 34, "Output",ExpressionUUID->"829ceceb-80bb-4b20-a787-062ac64cd82e"],
Cell[6570, 205, 267, 4, 34, "Output",ExpressionUUID->"af9eff84-5107-4f1e-8eaa-cae523ef7981"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6874, 214, 402, 9, 30, "Input",ExpressionUUID->"f13cd99c-d1a2-4a51-b64c-e0a61e558b95"],
Cell[7279, 225, 3726, 94, 449, "Output",ExpressionUUID->"ce3d7c63-d50f-4356-beee-2619e183ba02"]
}, Open  ]],
Cell[11020, 322, 208, 4, 73, "Input",ExpressionUUID->"2dfc21bc-230e-4d32-8a54-6998f63a3bb3"],
Cell[CellGroupData[{
Cell[11253, 330, 857, 20, 136, "Input",ExpressionUUID->"b0519253-138d-45d1-9ef3-9289dc2b0286"],
Cell[12113, 352, 1640, 41, 298, "Output",ExpressionUUID->"945856ea-b393-4d7d-83b6-b77af8e25734"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13790, 398, 233, 3, 30, "Input",ExpressionUUID->"24cd0285-568a-421e-9bac-19f8ebec40d1"],
Cell[14026, 403, 169, 2, 34, "Output",ExpressionUUID->"6cf0e2a7-8525-46d8-8a28-96967e8efe58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14232, 410, 234, 3, 30, "Input",ExpressionUUID->"4529a0d7-b9f9-46b5-8a32-ebfaf01763c0"],
Cell[14469, 415, 169, 2, 34, "Output",ExpressionUUID->"5025a262-7462-4ae2-a785-04d0c7f43d3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14675, 422, 212, 3, 30, "Input",ExpressionUUID->"e530519c-f381-42c7-b7c1-3671c336cf95"],
Cell[14890, 427, 169, 2, 34, "Output",ExpressionUUID->"9ba8c73a-a20c-4a3b-980d-4fb0fc776497"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15096, 434, 227, 3, 30, "Input",ExpressionUUID->"ca73d762-8ee7-4525-81d0-68a758022768"],
Cell[15326, 439, 918, 25, 41, "Output",ExpressionUUID->"beee2415-3e1a-4452-afab-dd9f28cb3220"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16281, 469, 1047, 27, 38, "Input",ExpressionUUID->"2da7a873-1175-4750-aeaa-a95197d1415b"],
Cell[17331, 498, 955, 26, 41, "Output",ExpressionUUID->"114fd54c-eeda-4c65-aacb-51fc0aee8e31"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18323, 529, 429, 12, 33, "Input",ExpressionUUID->"b72b7b04-cf76-4f25-b070-d3d6e5ee12aa"],
Cell[18755, 543, 253, 7, 49, "Output",ExpressionUUID->"4beb2ec5-3ead-4a91-8fad-181430c3d8e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19045, 555, 2129, 57, 59, "Input",ExpressionUUID->"e1797785-8c2d-4c38-bbe0-5e0e373c08a3"],
Cell[21177, 614, 345, 5, 34, "Output",ExpressionUUID->"74e39570-94a2-4d18-a5f8-a2d1d34d86d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21559, 624, 355, 10, 48, "Input",ExpressionUUID->"815dc8bd-3a6d-42a2-a15d-bb556393448c"],
Cell[21917, 636, 191, 2, 34, "Output",ExpressionUUID->"febc149d-1b26-4c72-922b-04e48cc495a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22145, 643, 237, 4, 30, "Input",ExpressionUUID->"7c374669-ce2d-4197-90ac-3a90e4fc5f49"],
Cell[22385, 649, 193, 2, 34, "Output",ExpressionUUID->"de48f578-4686-45fa-8aaf-b43719d7bcc0"]
}, Open  ]],
Cell[22593, 654, 255, 5, 115, "Input",ExpressionUUID->"1c56167b-fc6d-4d56-a7a6-dd41f9f09897"],
Cell[CellGroupData[{
Cell[22873, 663, 252, 5, 30, "Input",ExpressionUUID->"24ad499c-8553-4fcb-8862-81ccc0ddcbc8"],
Cell[23128, 670, 189, 4, 34, "Output",ExpressionUUID->"b4074d99-6ec5-4261-b42f-4e858d38f3d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23354, 679, 536, 12, 30, "Input",ExpressionUUID->"2f5dcd29-1450-4ae0-af5c-0a476e0c9e1c"],
Cell[23893, 693, 526, 11, 34, "Output",ExpressionUUID->"14375633-125d-4b8e-8d5a-b4c24ae34aa2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24456, 709, 374, 9, 30, "Input",ExpressionUUID->"8677819d-dd4f-495c-a9a4-c65c2999fcad"],
Cell[24833, 720, 236, 5, 34, "Output",ExpressionUUID->"f0998340-5a65-4b5b-83ad-e4e03d6ba700"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25106, 730, 324, 8, 30, "Input",ExpressionUUID->"1a152260-d01d-4ef7-93d7-dfe93cdc010c"],
Cell[25433, 740, 187, 4, 34, "Output",ExpressionUUID->"c0e8b8d2-b322-4f69-a12d-cb337853b760"]
}, Open  ]],
Cell[25635, 747, 203, 4, 30, "Input",ExpressionUUID->"078462bf-5ea2-40d3-902b-60ed08243ca2"],
Cell[CellGroupData[{
Cell[25863, 755, 591, 13, 30, "Input",ExpressionUUID->"8dc99b80-9294-4700-ac94-321490955df0"],
Cell[26457, 770, 450, 10, 34, "Output",ExpressionUUID->"c7ea1cba-12b4-4660-85c5-2e5094e7515a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26944, 785, 323, 8, 30, "Input",ExpressionUUID->"c39b145b-3ee2-41bb-b4c0-0a46533dfcf7"],
Cell[27270, 795, 188, 4, 34, "Output",ExpressionUUID->"7df25295-531c-4afc-b3c0-769935999e04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27495, 804, 323, 8, 30, "Input",ExpressionUUID->"c08067c5-3caa-4662-81fe-348a75cee704"],
Cell[27821, 814, 188, 4, 34, "Output",ExpressionUUID->"b784a961-e1bf-4726-bff5-7ac11c7da088"]
}, Open  ]],
Cell[28024, 821, 208, 4, 73, "Input",ExpressionUUID->"9cd3765e-638d-41ac-8efd-ea871d7cd8c7"],
Cell[CellGroupData[{
Cell[28257, 829, 2517, 66, 248, "Input",ExpressionUUID->"d080e046-e56f-415c-a75c-429de74537d6"],
Cell[30777, 897, 1443, 39, 128, "Output",ExpressionUUID->"86ee676b-8bc9-4b73-a071-117e61b68266"],
Cell[32223, 938, 1021, 27, 128, "Output",ExpressionUUID->"71d545de-ae76-4c79-a850-1ba067846023"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33281, 970, 514, 15, 30, "Input",ExpressionUUID->"30925c13-af64-44a3-99ec-a883533d9ab6"],
Cell[33798, 987, 3479, 96, 287, "Output",ExpressionUUID->"48c4c106-ca02-4f04-a5d1-b0f9b4f8faa4"]
}, Open  ]],
Cell[37292, 1086, 1610, 40, 119, "Input",ExpressionUUID->"9222793a-e895-4ef9-8c55-fc7f8aa59453"],
Cell[CellGroupData[{
Cell[38927, 1130, 694, 17, 145, "Input",ExpressionUUID->"0f48ae95-bb99-4c48-8600-1c9159e3c44c"],
Cell[39624, 1149, 191, 2, 34, "Output",ExpressionUUID->"02ecfffd-8234-4502-8639-26910e2bbe15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39852, 1156, 411, 12, 47, "Input",ExpressionUUID->"421930ce-5d71-4120-86aa-eb8ad67256ac"],
Cell[40266, 1170, 171, 3, 34, "Output",ExpressionUUID->"54f9d5a9-35a3-4390-90ae-c4fbadb933f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40474, 1178, 166761, 2742, 253, "Input",ExpressionUUID->"ad204c44-4869-48fb-9c4d-27dd6ecc0e88"],
Cell[207238, 3922, 166710, 2741, 257, "Output",ExpressionUUID->"39865fab-21f4-47a2-bd82-897a662850c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[373985, 6668, 260, 4, 30, "Input",ExpressionUUID->"86963fee-b39d-4335-83ae-2dbfab31576f"],
Cell[374248, 6674, 3574, 91, 367, "Output",ExpressionUUID->"0a980e54-30e9-48d0-9dd7-b3fb7ed2cca7"]
}, Open  ]],
Cell[377837, 6768, 236, 5, 94, "Input",ExpressionUUID->"0fab438e-7347-4680-b034-6a7ea546b2c6"],
Cell[378076, 6775, 1717, 47, 173, "Input",ExpressionUUID->"c4de6204-c34d-4748-bf34-991f064a6fba"],
Cell[CellGroupData[{
Cell[379818, 6826, 1176, 32, 241, "Input",ExpressionUUID->"45a98a42-ac84-42bd-9543-570e48785729"],
Cell[380997, 6860, 260, 5, 34, "Output",ExpressionUUID->"b630f472-b874-4bf7-827c-a5201333d497"],
Cell[381260, 6867, 262, 5, 34, "Output",ExpressionUUID->"b9337cd4-b067-45cb-ae46-c1183a9de89a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[381559, 6877, 258, 4, 30, "Input",ExpressionUUID->"d562b601-bd50-4b89-858a-88506267b9dd"],
Cell[381820, 6883, 3726, 94, 430, "Output",ExpressionUUID->"5d976df9-63f7-49dc-a697-521b7ccec7f3"]
}, Open  ]],
Cell[385561, 6980, 280, 6, 38, "Text",ExpressionUUID->"f96e719c-3d17-4aa0-ac39-12ed0e26b971"],
Cell[CellGroupData[{
Cell[385866, 6990, 237, 4, 30, "Input",ExpressionUUID->"258c83a1-05ff-47e2-9d8f-62f5b4ecde25"],
Cell[386106, 6996, 195, 3, 34, "Output",ExpressionUUID->"53b22a1c-fa96-43b9-8e66-e7180fcc9765"]
}, Open  ]],
Cell[CellGroupData[{
Cell[386338, 7004, 238, 4, 30, "Input",ExpressionUUID->"38b2d565-4407-493b-959a-31b80e6f0770"],
Cell[386579, 7010, 195, 3, 34, "Output",ExpressionUUID->"5594c8c1-e669-4da7-a9f5-85d8cf406715"]
}, Open  ]],
Cell[CellGroupData[{
Cell[386811, 7018, 216, 4, 30, "Input",ExpressionUUID->"9607e1f8-9142-484a-a63c-8e3103f5f0d4"],
Cell[387030, 7024, 197, 3, 34, "Output",ExpressionUUID->"5b4659bb-889d-4075-883a-c3da19943da8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387264, 7032, 231, 4, 30, "Input",ExpressionUUID->"5774815e-5f70-491c-bf19-58024e51d543"],
Cell[387498, 7038, 944, 26, 41, "Output",ExpressionUUID->"e771486d-bc66-4022-881f-f386f9934123"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388479, 7069, 1051, 28, 38, "Input",ExpressionUUID->"923217ca-4e0c-4ed4-8dcc-7b2f84888ead"],
Cell[389533, 7099, 979, 27, 41, "Output",ExpressionUUID->"b3038adc-2050-4ed9-834b-224f064750cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390549, 7131, 502, 14, 48, "Input",ExpressionUUID->"8522511c-dab9-4572-9e36-baa12c9a6592"],
Cell[391054, 7147, 300, 9, 54, "Output",ExpressionUUID->"927794b0-396d-498f-ab1e-187ef85d19e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391391, 7161, 486, 12, 50, "Input",ExpressionUUID->"5b9cc607-14ee-49a0-a823-7ff931a3d433"],
Cell[391880, 7175, 367, 6, 34, "Output",ExpressionUUID->"b5c713b9-92dd-4f94-b931-80a8eb001427"]
}, Open  ]],
Cell[392262, 7184, 337, 6, 35, "Text",ExpressionUUID->"adf7079d-9d60-4ef9-ba7e-9cfa0046c427"],
Cell[392602, 7192, 305, 5, 136, "Input",ExpressionUUID->"25edb68b-5c50-4929-a66b-31bd9f41ba37"],
Cell[392910, 7199, 280, 5, 136, "Input",ExpressionUUID->"42542774-d656-44bb-b2bf-3e57f5860515"],
Cell[393193, 7206, 280, 5, 136, "Input",ExpressionUUID->"118d8ff5-8ace-4369-8663-f756cfe54a70"],
Cell[393476, 7213, 280, 5, 136, "Input",ExpressionUUID->"0dcf8c05-116c-4e03-8297-01698d9601fa"],
Cell[CellGroupData[{
Cell[393781, 7222, 925, 23, 30, "Input",ExpressionUUID->"52aef2b4-842f-422f-8ae9-442e7486852c"],
Cell[394709, 7247, 4221, 103, 409, "Output",ExpressionUUID->"fe491638-6784-416c-9492-4bd8e39fae31"]
}, Open  ]],
Cell[398945, 7353, 84834, 2046, 94, "Input",ExpressionUUID->"c17abe06-3be7-4d6c-b110-85eae97b8f80"],
Cell[CellGroupData[{
Cell[483804, 9403, 408, 8, 52, "Input",ExpressionUUID->"5d4b90b9-5f22-423c-ac2a-e9539bc21934"],
Cell[484215, 9413, 1756, 45, 231, "Output",ExpressionUUID->"7752d044-85c2-4a68-b66e-475da7b1c2c1"],
Cell[485974, 9460, 4244, 104, 337, "Output",ExpressionUUID->"9fd07f67-849b-432f-8eb3-a625d24daa64"]
}, Open  ]],
Cell[490233, 9567, 715, 20, 30, "Input",ExpressionUUID->"da249ae9-75e2-465e-b799-9133c9942c6c"]
}
]
*)

